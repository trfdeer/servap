export const FEED_DATA = {
  error: false,
  message: "",
  data: [
    {
      id: 1,
      sourceId: 4,
      title: "Safety Critical C++",
      link: "https://cppcast.com/safety-critical-cpp/",
      description:
        'Andreas Weis joins Timur and Phil. After some news about Boost, std::format and performance, Andreas talks to us about safety critical application domains, safety in C++ in general, and the difference between safety in security.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://lists.boost.org/Archives/boost/2023/02/254234.php"\u003eBoost libraries may drop support for older language versions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppstories.com/2023/fun-print-tables-format/"\u003e"Fun with printing tables with std::format and C++20" - Bartlomiej Filipek\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2023/03/cpp20-formatting-library-parts-1.-2-and-3-gajendra-gulgulia"\u003e"C++20 Formatting Library, Parts 1. 2 and 3" - Gajendra Gulgulia\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://johnnysswlab.com/decreasing-the-number-of-memory-accesses-1-2/"\u003e"Decreasing the Number of Memory Accesses, 1/2" - Ivica Bogosavljevic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://eventos.uc3m.es/93418/detail/using-std-cpp-2023.html"\u003eusing std::cpp (conference in Madrid)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/MUCplusplus/"\u003eMUC++ (The Munich C++ User Group)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://stackoverflow.com/users/577603/comicsansms"\u003eComicSansMs - Andreas on StackOverflow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://berthub.eu/articles/posts/eu-cra-secure-coding-solution/"\u003eThe EU\u0027s Cyber Resilience Act\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/seanbax/status/1631710434565976064?s\u003d20"\u003e"Why not simply implement borrow checking in C++?" - Sean Baxter on Twitter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2771r0.html"\u003eP2771R0 - "Towards memory safety in C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.slashdot.org/story/23/01/21/0526236/rust-safety-is-not-superior-to-c-bjarne-stroustrup-says"\u003e"Rust Safety is not superior to C++" - Bjarne Stroustrup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2739r0.pdf"\u003eP2739R0 - "A call to action: Think seriously about \u0027safety\u0027; then do something sensible about it"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2759r1.pdf"\u003eP2759R1 - "DG Opinion on safety for ISO C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2723r1.html"\u003eP2723R1 - "Zero-initialize objects of automatic storage duration"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/D2795R0.html"\u003eD2795R0 - "Correct and incorrect code, and \u0027erroneous behaviour\u0027"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/P2809R0.html"\u003eP2809R0 - "Trivial infinite loops are not Undefined Behavior"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.misra.org.uk"\u003eMISRA\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2023-03-17T08:30:00Z",
    },
    {
      id: 2,
      sourceId: 4,
      title: "Carbon, with Richard Smith",
      link: "https://cppcast.com/carbon/",
      description:
        'Richard Smith joins Timur and Phil. After the usual news round-up, we chat with Richard about the new C++ successor language, Carbon. Richard is one of the three lead contributors to Carbon and he discusses the philosophy and some of the special features that make Carbon different.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.conan.io//2023/02/22/Conan-2.0.html"\u003eConan 2.0 release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/cmake-debugger-allows-you-to-debug-your-cmake-scripts-and-more/"\u003eCMake debugger in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tomlooman.com/unreal-engine-cpp-guide/"\u003eUnreal Engine - C++ Complete Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://italiancpp.github.io/con23/"\u003eThe Italian C++ Conference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1881r0.html"\u003eP1881R0 - Epochs proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2137r0.html"\u003eP2137R0 - "Goals and priorities for C++" (from March 2020)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/carbon-language"\u003eCarbon GitHub org - with lots of links\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2023-03-03T00:00:00Z",
    },
    {
      id: 3,
      sourceId: 4,
      title: "Issaquah trip report and how the C++ sausage is made",
      link: "https://cppcast.com/issaquah-and-the-cpp-sausage/",
      description:
        'Nina Ranns joins Timur and Phil. After community news, including conferences, a new C++ community in Africa and a new project manager and build system, we talk to Nina about the recent ISO committee meeting in Issaquah where the technical work on C++23 was finalised, as well as an inside look at how the committee works and Nina\u0027s current project: allocator-friendly library types that don\u0027t allocate.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++ (cfp open)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppindia.co.in/conference/2023/call-for-speakers/"\u003eCppIndia cfp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow.org/announcements/2023/01/2023-call-for-student-volunteers/"\u003eC++ Now - call for volunteers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk"\u003eC++ on Sea (speakers and tickets)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/10xy0bf/a_c_community_in_africa/"\u003eC++ Africa\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/110fb4g/zork_reaches_the_v050_supporting_the_three_major/"\u003eZork++ 0.5\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://homepages.uc.edu/~thomam/Articles/HowSoftwareCompaniesDie.pdf"\u003eOrsen Scott Card\u0027s Beekeeper Analogy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://wg21.link/p2806r0"\u003eP2806R0 - "Do Expressions"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dpdoUnvTwnr4"\u003eNina\u0027s user type categories talk\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2644r1.pdf"\u003eP2644R1 - "Final Fix of Broken Range‚Äêbased for Loop"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2047r1.html"\u003eP2047R1 - "An allocator aware optional type"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bloomberg.com/company/stories/why-4-bloomberg-engineers-wrote-another-cplusplus-book/"\u003eEmbracing Modern C++ Safely\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2674r1.pdf"\u003eP2674R1 - "A trait for implicit lifetime types"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2023-02-17T00:00:00Z",
    },
    {
      id: 4,
      sourceId: 4,
      title: "CppNorth and the Forgotten Developers",
      link: "https://cppcast.com/cppnorth-and-the-forgotten-developers/",
      description:
        'Mike Daum joins Phil and Timur. After some community news, including the state of modules support in CMake and a new compile-time parsing library inspired by Rust\u0027s macros, we talk to Mike about CppNorth - what it is, how it got started and what makes it different - then about company cultures, a new language from Epic, and the importance of catering to \u0027Dark Matter Developers\u0027.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.accuconference.org/"\u003eACCU Schedule and registration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kitware.com/import-cmake-c20-modules"\u003eCMake blog post about the state of C++20 Modules support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1689r5.html"\u003eP1689R5 "Format for describing dependencies of source files"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/maksym-pasichnyk/macro_rules"\u003e"Macro Rules" - compile-time parser library from Max Pasichnyk\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/10n09m2/c_20_compiletime_parsing_with_rusts_like_macro/"\u003eReddit discussion of Macro Rules\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca"\u003eCppNorth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://store.cppnorth.ca/discount/CPPCAST?redirect\u003d%2Fproducts%2Fcppnorth-2023"\u003eExclusive Discount code for CppNorth registration (while available)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"mailto:submissionhelp@cppnorth.ca"\u003eCppNorth mentoring email\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://discord.gg/6WtMVN5SZF"\u003eCppNorth mentoring channel on Discord\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://homepages.uc.edu/~thomam/Articles/HowSoftwareCompaniesDie.pdf"\u003eOrsen Scott Card\u0027s Beekeeper Analogy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://forums.unrealengine.com/t/verse-the-new-unreal-scripting-language/156617"\u003eVerse, the new Unreal scripting language\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d832JF1o7Ck8"\u003eTalk on Verse, by Simon Peyton Jones\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.oreilly.com/library/view/c-software-design/9781098113155/"\u003e"C++ Software Design" (book) - Klaus Iglberger\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2023-02-03T00:00:00Z",
    },
    {
      id: 5,
      sourceId: 4,
      title: "Val and Mutable Value Semantics",
      link: "https://cppcast.com/val-and-mutable-value-semantics/",
      description:
        'Dimi Racordon joins Timur and Phil. They first have a couple more conference speaker calls, a new C++20 test framework, and and some updates about Safety in C++ and the C++ successor languages announced last year. Then they talk to Dimi Racordon about the new language, Val, how it relates to C++, and why mutable value semantics are so powerful.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow.org/announcements/2022/12/2023-CfS/"\u003eC++ Now Call for Speakers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://submissionportal.cppnorth.ca"\u003eCppNorth Call for Speakers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cschreib/snitch"\u003eSnitch v1.0 - a "Lightweight C++20 testing framework"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://accu.org/journals/overload/30/172/teodorescu/"\u003e"The Year of C++ Successor Languages" - Lucian Radu Teodorescu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://security.googleblog.com/2023/01/supporting-use-of-rust-in-chromium.html"\u003e"Supporting the Use of Rust in the Chromium Project" - Google Security Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dt2bCE0erTFI"\u003e"I\u0027ll Build Myself" - Phil\u0027s song about building C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2739r0.pdf"\u003eP2739R0 - "A call to action:\nThink seriously about ‚Äúsafety‚Äù; then do something sensible about it"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2023/p2759r0.pdf"\u003eP2759R0 - "DG Opinion on Saftety for ISO C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://chromium.googlesource.com/chromium/src/+/master/docs/security/rule-of-2.md"\u003e"The Rule of Two"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.val-lang.dev"\u003eval-lang.dev - the official website for Val\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2023-01-20T00:00:00Z",
    },
    {
      id: 6,
      sourceId: 4,
      title: "From Healthcare to Automotive",
      link: "https://cppcast.com/healthcare-to-automotive/",
      description:
        'Honey Sukesan joins Phil and Timur. They first have a couple more conference announcements, an update on Cpp2 and a round-up of C++ in 2022. Then they talk to Honey Sukesan about her journey from working in Healthcare to working in the Automotive industry, and some of the surprising overlaps - as well as her personal journey during along the way.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://store.cppnorth.ca"\u003eCppNorth tickets on sale\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://usingstdcpp.org/using-stdcpp-2023/call-for-talks-using-stdcpp-2023/"\u003eusing std::cpp Call for Speakers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2022/12/31/cpp2-and-cppfront-year-end-mini-update/"\u003e"Cpp2 and cppfront: Year-end mini-update"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppstories.com/2022/cpp-status-2022/"\u003e"C++ at the end of 2022" - Bartlomiej Filipek\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/zt1o9k/libstdc13_gets_c20_chrono/"\u003e"libstdc++13 gets C++20 \u003cchrono\u003e"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.toastmasters.org"\u003eToastMasters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dhQjJzb-c05o"\u003e"Can software developers draw pictures" (Honey\u0027s CppCon 2020 Lightning Talk)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dTtGqJ20_cuw"\u003e"SOLID Principles Unleashed" (Honey\u0027s CppIndia 2022 talk)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2023-01-06T00:00:00Z",
    },
    {
      id: 7,
      sourceId: 4,
      title: "Holiday Special with Phil Nash and Timur Doumler",
      link: "https://cppcast.com/holiday-special/",
      description:
        'Rob and Jason are back, at least for the holidays, and are joined by Timur Doumler and Phil Nash to talk about some of their recent news, and a super secret new project they are working on together.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.boost.org/users/history/version_1_81_0.html"\u003eBoost 1.81.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/clion/whatsnew/"\u003eCLion 2022.3 released, with CMake debug and new (opt-in) UI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/JetBrains_Fleet/status/1603771443464097792"\u003eC++ support in JetBrains\u0027 Fleet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tiobe.com/tiobe-index/"\u003eC++ passes Java on the TIOBE index\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/safety/"\u003e"If we must, let\u0027s talk about safety" (Corentin Jabot)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2723r0.html"\u003eP2723R0 "Zero-initialize objects of automatic storage duration" (JF Bastien)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ndctechtown.com/call-for-papers"\u003eNDC TechTown - Call for Speakers (ends May 19th)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/the-2023-call-for-speakers-opens.html"\u003eC++ on Sea - Call for Speakers (ends Jan 8th)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eACCU - speakers selected, schedule soon\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1774r8.pdf"\u003eP1774R8 "Portable Assumption" ([[assume]])\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2590r2.pdf"\u003eP2590R2 "Explicit lifetime managerment" (std::start_lifetime_as)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d_qzMpk-22cc"\u003e"Type punning in modern C++" (video)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sonarsource.com/blog/the-rules-of-three-five-and-zero/"\u003e"The Rules of Three, Five and Zero" (article)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sonarsource.com/blog/beyond-the-rules-of-three-five-and-zero/"\u003e"Beyond the Rules of Three, Five and Zero" (article)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dc4BGTEfw0Go"\u003e"The Power of Clean C++" (webinar)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/u/jason_turner"\u003eJason\u0027s C++ eBooks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3vckEC6"\u003eJason\u0027s C++ print books\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/@cppweekly"\u003eJason\u0027s "C++ Weekly" Youtube channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dHlaoxhmThmk"\u003e"Making C++ Fun, Safe, and Accessible" - Jason\u0027s C++ on Sea keynote\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-12-23T00:00:00Z",
    },
    {
      id: 8,
      sourceId: 4,
      title: "Podcast News and Updates",
      link: "https://cppcast.com/podcast-news/",
      description:
        'Rob and Jason discuss various news articles, libraries and announcements.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/uhi5nr/lexy_c_parsing_dsl_library_first_beta_release/"\u003eLexy First Beta Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/ujrirj/i_made_online_c_compiler_looking_for_feedback/"\u003eI made an Online C++ Compiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/pipermail/gcc/2022-May/238653.html"\u003eGCC 12.1 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Cpp-User-Group-Meetings-in-May-2022.html"\u003eJoin your local user\u0027s group\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-05-12T00:00:00Z",
    },
    {
      id: 9,
      sourceId: 4,
      title: "Elements GUI Library",
      link: "https://cppcast.com/elements-gui/",
      description:
        'Joel de Guzman joins Rob and Jason. They first talk about new features in GCC 12 and the latest ISO papers. Then they talk to Joel de Guzman about his history with Open Source and the Boost community, the Elements GUI library and his work with audio software and hardware.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/articles/2022/04/25/new-c-features-gcc-12#"\u003eNew C++ features in GCC 12\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/#mailing2022-04"\u003eApril 2022 Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/assets/CoreCpp2022_CallForSpeakers.pdf"\u003eCore C++ Call For Papers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ndctechtown.com/call-for-papers"\u003eNDC TechTown Call for Papers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cycfi/elements"\u003eElements C++ GUI Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cycfi/artist"\u003eArtist 2D Canvas Libray\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cycfi.com/"\u003eCycfi Research\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.boost.org/doc/libs/1_67_0/libs/spirit/doc/html/index.html"\u003eBoost Spirit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-05-05T00:00:00Z",
    },
    {
      id: 10,
      sourceId: 4,
      title: "Linear Algebra Standardization",
      link: "https://cppcast.com/linear-algebra-iso/",
      description:
        'Mark Hoemmen joins Rob and Jason. They first talk about an debugging improvements in VS Code and C++20/23 features going into MSVC. Then they talk to Mark Hoemmen about his past work on linear algebra libraries Tpetra and Kokkos, and current efforts to get linear algebra into the standard.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/whats-new-for-c-debugging-in-visual-studio-code/?WT.mc_id\u003dacademic-0000-abartolo"\u003eWhat\u0027s new for C++ debugging in VS Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.dev/conformance-should-mean-something-fputc-and-freestanding"\u003eConformance should mean something - fputc, and freestanding\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dDAl37n2XOwk"\u003eMSVC C++20/23 Update\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.trilinos.org/dev/packages/tpetra/doc/html/index.html"\u003eTpetra parallel linear algebra\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1417r0.pdf"\u003eP1417R0: Historical lessons for C++ linear algebra library standardization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1673r7.html"\u003eP1673R7: A free function linear algebra interface based on the BLAS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p1674r1.pdf"\u003eP1674R1: Evolving a Standard C++ Linear Algebra Library from the BLAS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-04-28T00:00:00Z",
    },
    {
      id: 11,
      sourceId: 4,
      title: "Rcpp",
      link: "https://cppcast.com/rcpp/",
      description:
        'Dirk Eddelbuettel joins Rob and Jason. They first talk about an updated C++ web framework, and whether C should be considered a programming language or a protocol. Then they talk to Dirk about the R programming language, and RCPP the R/C++ interop library.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/tqzghc/a_year_and_a_half_ago_i_picked_up_an_abandoned_c/"\u003eCrow v1.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kdab.com/cpp23-will-be-really-awesome/"\u003eC++23 will be really awesome\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gankra.github.io/blah/c-isnt-a-language/"\u003eC isn\u0027t A Programming Language Anymore\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.rcpp.org/"\u003eRcpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://dirk.eddelbuettel.com/code/rcpp.html"\u003eRcpp: Seamless R and C++ Integration\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-04-21T00:00:00Z",
    },
    {
      id: 12,
      sourceId: 4,
      title: "CppNorth",
      link: "https://cppcast.com/cppnorth/",
      description:
        'Diana Ojeda from Intel and Stephanie Brenham from Ubisoft join Rob and Jason. They first talk about the upcoming Pure Virtual C++ conference, an update to WxWidgets and Apple\u0027s release of a Metal interface for C++. Then they talk to Diana and Stephanie about the upcoming CppNorth conference, how they got involved and much more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/sign-up-for-the-pure-virtual-cpp-2022-conference/"\u003eSign Up for the Pure Virtual C++ 2022 Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://wxwidgets.org/news/2022/04/wxwidgets-3.1.6-released/"\u003ewxWidgets 3.1.6 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developer.apple.com/metal/cpp/"\u003eGetting started with Metal-cpp\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca/"\u003eCppNorth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca/workshops.html"\u003eCppNorth Workshops\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca/registration.html"\u003eCppNorth Registration\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-04-14T00:00:00Z",
    },
    {
      id: 13,
      sourceId: 4,
      title: "Mentorship",
      link: "https://cppcast.com/mentorship-program/",
      description:
        'Rainer Grimm joins Rob and Jason. They first talk about a new implementation of the ninja build system and updates to Qt Creator and CMake. Then they talk to Rainer Grimm about his mentorship program, and history of teaching C++.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://neugierig.org/software/blog/2022/03/n2.html"\u003eN2: revisiting ninja\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qt.io/blog/qt-creator-7-released"\u003eQt Creator 7 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kitware.com/cmake-3-23-0-is-available-for-download/"\u003eCmake 3.23.0 available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppstories.com/2022/ranges-composition/"\u003eC++20 Ranges: The Key Advantage -  Algorithm Composition\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.modernescpp.com"\u003eModernes C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.grimm-jaud.de/index.php/blog"\u003eRainer\u0027s German Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.modernescpp.org/"\u003eMentoring Program\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-04-07T00:00:00Z",
    },
    {
      id: 14,
      sourceId: 4,
      title: "Julia",
      link: "https://cppcast.com/julia/",
      description:
        'Logan Kilpatrick joins Rob and Jason. They first talk about a GDB frontend and an IDE like autocompletion tool for the terminal. Then they talk to Logan Kilpatrick about the Julia programming language. They discuss the origin of the language, and where it fits in today amongst other languages in the scientific computing domain.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/tp049r/seer_a_new_gui_frontend_to_gdbmi_updated_v13/"\u003eSeer - a new gui frontend to gdb\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/tn6jnk/idestyle_autocomplete_for_your_terminal_that/"\u003eIDE style autocomplete for your terminal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.insidequantumtechnology.com/news-archive/nvidia-we-are-a-quantum-computing-company/"\u003eNvidia: \u0027We are a Quantum Computing Company\u0027\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://julialang.org/"\u003eJulia\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-03-31T00:00:00Z",
    },
    {
      id: 15,
      sourceId: 4,
      title: "Zig",
      link: "https://cppcast.com/zig/",
      description:
        'Andrew Kelley joins Rob and Jason. They first say Happy 25th Birthday to Visual Studio and discuss a tool for parsing GCC error logs. Then they talk to Andrew Kelley, the president of the Zig Software Foundation. He talks about the Zig language, upcoming changes to its build tooling, and how Zig can be used with C and C++.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/visualstudio/happy-25th-birthday-visual-studio/"\u003eHappy 25th birthday Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dcKLPlHHa7vk"\u003eGCC Explorer: A utility for exploring GCC error logs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.theoreticallyphysics.com/gcc-explorer/"\u003eGCC Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://itnext.io/divide-conquer-and-sets-the-114-c-algorithms-series-d0085a38046e"\u003eDivide \u0026#38; Conquer and Sets: The 114 C++ algorithms series\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cpp-best-practices/game_jam"\u003eC++ Best Practices Game Jam\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://ziglang.org/"\u003eZig Software Language\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-03-25T00:00:00Z",
    },
    {
      id: 16,
      sourceId: 4,
      title: "Swift and C++ Interoperability",
      link: "https://cppcast.com/swift-cpp-interop/",
      description:
        'Dave Abrahams joins Rob and Jason. They first talk about JeanHeyd Meneid\u0027s blog post on saving C\u0027s ABI. Then they talk to Dave about his history as a founding contributor of boost and the current workgroup he is a part of to enable bidirectional interop between swift and C++.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.dev/to-save-c-we-must-save-abi-fixing-c-function-abi"\u003eTo Save C, We Must Save the ABI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/tcvi0s/jluna_a_new_julia_c_wrapper/"\u003eJluna C++ interop for Julia\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/tavuyk/emulating_template_named_arguments_in_c20/"\u003eEmulating template named arguments in C++ 20\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://forums.swift.org/t/swift-and-c-interoperability-workgroup-announcement/54998"\u003eSwift and C++ interoperability workgroup announcement\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/apple/swift/blob/main/docs/CppInteroperability/CppInteroperabilityStatus.md"\u003eC++ Interoperability Status\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/apple/swift/blob/main/docs/CppInteroperability/GettingStartedWithC%2B%2BInterop.md"\u003eGetting started with C++ Interoperability\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/apple/swift/blob/main/docs/CppInteroperability/CppInteroperabilityManifesto.md"\u003eInteroperability between Swift and C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-03-17T00:00:00Z",
    },
    {
      id: 17,
      sourceId: 4,
      title: "New C++ Scope and Debugging Support",
      link: "https://cppcast.com/standard-tooling-debugging/",
      description:
        'Ren√© Ferdinand Rivera Morell joins Rob and Jason. They first talk about a new cmake initialization project and some projects in the C++ show and tell. Then they talk to Ren√© about his open letter to the C++ committee about expanding its scope to include tooling and other related technologies.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/execution-and-static-analysis-support-for-msvc-on-compiler-explorer/"\u003eExecution and Static Analysis Support for MSVC on Compiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/friendlyanon/cmake-init"\u003eCmake-init\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/ssgqtu/c_show_and_tell_experiment/"\u003eC++ Show and Tell experiment\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/grafikrobot/cpp_scope"\u003eNew C++ Scope\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2492r0.html"\u003eAttending C++ Standards Committee Meetings During a Pandemic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/p2546r0.html"\u003eDebugging Support\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-03-10T00:00:00Z",
    },
    {
      id: 18,
      sourceId: 4,
      title: "Secure Coding and Integers",
      link: "https://cppcast.com/secure-coding-integers/",
      description:
        'Robert Seacord joins Rob and Jason. They first talk about a constexpr wordle game and constexpr unique_ptr being added to the standard. Then they talk to Robert Seacord about secure coding and his thoughts on integers.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://vittorioromeo.info/index/blog/wordlexpr.html"\u003eWordlexpr: compile-time wordle in C++20\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2022/01/2022-01-mailing-available"\u003eJanuary ISO Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2273r3.pdf"\u003eConstexpr unique_ptr accepted\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/rainer_grimm/status/1498211105545543687"\u003eRainer\u0027s bundle on sale 1/2 off with sales going to support Ukraine\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.humblebundle.com/books/joy-coding-no-starch-press-books"\u003eJoy of Coding Humble Bundle\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nostarch.com/Effective_C"\u003eEffective C - An Introduction to Professional C Programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.informit.com/store/secure-coding-in-c-and-c-plus-plus-9780321822130"\u003eSecure Coding in C and C++, 2nd Edition\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.informit.com/store/cert-c-coding-standard-second-edition-98-rules-for-9780133805383"\u003eThe CERT C Coding Standard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://resources.sei.cmu.edu/downloads/secure-coding/assets/sei-cert-cpp-coding-standard-2016-v01.pdf"\u003eSEI CERT C++ Coding Standard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.iso.org/standard/61134.html"\u003eISO/IEC TS 17961\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n1718.pdf"\u003eISO/IEC TS 17961 - Review Draft\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-03-03T00:00:00Z",
    },
    {
      id: 19,
      sourceId: 4,
      title: "Teaching Embedded Development",
      link: "https://cppcast.com/teaching-embedded-dev/",
      description:
        'Khalil Estell joins Rob and Jason. They first talk about Matt Godbolt\u0027s recent keynote at CPPP on C++\u0027s Superpower. Then they talk to Khalil about teaching C++ embedded development and some of his thoughts on embedded development, including why not to avoid runtime polymorphism.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d0_UttFDnV3k"\u003eCPPP Keynote: C++\u0027s Superpower - Matt Godbolt\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/visualstudio/visual-studio-2022-17-1-is-now-available/"\u003eVisual Studio 2022 17.1 is now available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://16bpp.net/blog/post/making-a-cross-platform-mobile-desktop-app-with-qt-62/"\u003eMaking a cross platform mobile \u0026#38; desktop app with Qt 6.2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://marketplace.visualstudio.com/items?itemName\u003djumpinjackie.vscode-map-preview"\u003eVSCode Map Preview\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SJSU-Dev2/libembeddedhal"\u003elibembeddedhal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SJSU-Dev2"\u003eSan Jose State University GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/c/KhalilEstell"\u003eKhalil\u0027s YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-02-25T00:00:00Z",
    },
    {
      id: 20,
      sourceId: 4,
      title: "GDAL and PDAL",
      link: "https://cppcast.com/gdal-pdal/",
      description:
        'Howard Butler joins Rob and Jason. They first talk about an announcement from Swift on a C++ interoperability workgroup. Then they talk to Howard Butler about the C++ Geospatial libraries GDAL and PDAL, and his involvement with geospatial development.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://forums.swift.org/t/swift-and-c-interoperability-workgroup-announcement/54998"\u003eSwift and C++ interoperability workgroup announcement\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20220120-00/?p\u003d106178"\u003eThe mystery of the crash that seems to be on a std::move operation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/how-we-used-cpp20-to-eliminate-an-entire-class-of-runtime-bugs/"\u003eHow we used C++20 to eliminate an entire class of runtime bugs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://hobu.co/"\u003ehobu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gdal.org/"\u003eGDAL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/OSGeo/gdal"\u003eGDAL on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://pdal.io/"\u003ePDAL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/PDAL/PDAL"\u003ePDAL on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://copc.io/"\u003eCloud Optimized Point Cloud\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-02-18T00:00:00Z",
    },
    {
      id: 21,
      sourceId: 4,
      title: "5G Network Computing",
      link: "https://cppcast.com/5G-networks/",
      description:
        'Yacob Cohen-Arazi joins Rob and Jason. They first talk about an update to Microsoft\u0027s GSL library and the upcoming LLVM v14. Then they talk to Kobi about work he\u0027s done at Qualcomm with 5G networks and how 5G is about a lot more then just bandwidth improvements.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dXe5ffO6Ouwg"\u003eNerd Talk - Doug McIlroy \u0026#38; Brian Kernighan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/gsl-4-0-0-is-available-now/"\u003eGSL 4.0.0 is Available Now\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/gsl-lite/gsl-lite"\u003egsl-lite\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://belaycpp.com/2022/02/02/i-dont-know-which-container-to-use-and-at-this-point-im-too-afraid-to-ask/"\u003eI don\u0027t know which container to use (and at this point I\u0027m too afraid to ask)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.phoronix.com/scan.php?page\u003dnews_item\u0026#38;px\u003dLLVM-Clang-14-Ends"\u003eLLVM/Clang 14 ends Feature Development with better C++20 support, Armv9\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/San-Diego-CPP/"\u003eSan Diego C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qualcomm.com/company/careers"\u003eQualcomm Careers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-02-11T00:00:00Z",
    },
    {
      id: 22,
      sourceId: 4,
      title: "Unix and C History",
      link: "https://cppcast.com/unix-history/",
      description:
        'Brian Kernighan joins Rob and Jason. They first talk about the pros and cons of virtual teaching and training during COVID times, and the news that BOLT has been merged into LLVM. Then they talk to Brian about the history of UNIX and C development at Bell Labs.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://andreasfertig.blog/2021/12/more-than-a-year-of-virtual-classes-experience-the-good-parts/"\u003eMore than a year of virtual classes experience - The good parts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.phoronix.com/scan.php?page\u003dnews_item\u0026#38;px\u003dLLVM-Lands-BOLT"\u003eBOLT merged into LLVM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hackingcpp.com/cpp/cheat_sheets.html"\u003eC++ Cheat Sheets\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cs.princeton.edu/~bwk/"\u003eBrian Kernighan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3gmx82B"\u003eUnix: A History and a Memoir (Amazon)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3seVhOf"\u003eThe C Programming Language (Amazon)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-02-04T00:00:00Z",
    },
    {
      id: 23,
      sourceId: 4,
      title: "Docker Development and Modernizing OOD",
      link: "https://cppcast.com/docker-dev-modernizing-ood/",
      description:
        'Yacob Cohen-Arazi joins Rob and Jason. They first talk about the first ISO mailing of the year and some upcoming conference dates. Then they talk to Yacob about his experience building and running docker containers for C++ software development and his work updating code examples for an upcoming C++ Object Oriented book.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3rWRBQU"\u003eAmazon: Copy and Reference Puzzlers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/copyandreferencepuzzlers_book1/"\u003eLeanpub: Copy and Reference Puzzlers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2022/#mailing2022-01"\u003eISO January Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/RealTimeChris/DiscordCoreAPI"\u003eC++ Discord Bot Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://surveys.jetbrains.com/s3/clion-diary4"\u003eCLIon UX Study\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow.org/announcements/2021/12/2022-CfS/?mc_cid\u003dc81280ed44\u0026#38;mc_eid\u003d33cd130788"\u003eC++Now 2022 Call For Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cfp-for-2022-classes/?mc_cid\u003dc81280ed44\u0026#38;mc_eid\u003d33cd130788"\u003eCppCon 2022 Call for Proposals for CppCon Academy 2022 Classes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/the-2022-call-for-speakers-is-now-open.html?mc_cid\u003dc81280ed44\u0026#38;mc_eid\u003d33cd130788"\u003eC++ On Sea 2022 Call for Speakers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca/cfp.html?mc_cid\u003dc81280ed44\u0026#38;mc_eid\u003d33cd130788"\u003eCppNorth Call for Papers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/San-Diego-CPP/"\u003eSan Diego C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2020/01/using-docker-with-clion/"\u003eUsing Docker with CLion\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-01-27T00:00:00Z",
    },
    {
      id: 24,
      sourceId: 4,
      title: "Binary Exploits",
      link: "https://cppcast.com/binary-exploits/",
      description:
        'Marit Tokle and Christian Ressell join Rob and Jason. They first talk about a Y2K like bug that unexpectedly hit us in the new year. Then they talk about binary exploits, why they\u0027re still relevant, and a particular binary exploit that Marit and Christian demonstrated during their recent talk at NDC Techtown. They also talk about \u0027Capture The Flag\u0027 security competitions.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://rachelbythebay.com/w/2022/01/01/baddate/"\u003eYYMMDDHHMM just overflowed a signed 32 bit int\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/rzmxq9/james_web_space_telescope_runs_on_c_code/"\u003eJames Webb Space Telescope runs on C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/my-mentoring-program-fundamentals-for-c-professionals"\u003eMy Mentoring Program "Fundamentals for C++ Professionals"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://ndctechtown.com/agenda/demonstrating-binary-exploitation-with-a-recent-vulnerability-098d/0erkwaql9j2"\u003eNDC TechTown: Demonstrating binary exploitation with a recent vulnerability\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dPD-Q0nhkegM"\u003eDemonstrating binary exploitation - Marit Iren Rognli Tokle \u0026#38; Christian Resell\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://codeql.github.com/"\u003eCodeQL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ctftime.org/"\u003eCTF Time\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ctftime.org/team/81341/"\u003eCTF Team bootplug\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ctflearn.com/"\u003eCTF Learn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://overthewire.org/wargames/"\u003eOver The Wire\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-01-20T00:00:00Z",
    },
    {
      id: 25,
      sourceId: 4,
      title: "C++ Compile Time Parser Generator",
      link: "https://cppcast.com/compile-time-parser-generator/",
      description:
        'Rob and Jason are joined by Piotr Winter. They first talk about include guards vs pragma once, testing for constexpr and the preview of Catch v3. Then they talk to Piotr Winter about CTPG, the C++ Compile Time Parser Generator.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/rxb6r2/include_guards_or_pragma_once/"\u003eInclude guards or #pragma once\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2022/01/04/test-constexpr-friendliness/"\u003eTest an expression for constexpr friendliness\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/catchorg/Catch2/releases/tag/v3.0.0-preview4"\u003eCatch v3 Preview 4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/peter-winter/ctpg"\u003eC++ Compile Time Parser Generator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://peter-winter.com/"\u003ePeter Winter\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dSSYSqLWXgO4"\u003eDeadline24 2013 | Future Processing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-01-13T00:00:00Z",
    },
    {
      id: 26,
      sourceId: 4,
      title: "Modern C for Absolute Beginners",
      link: "https://cppcast.com/modern-c-beginners/",
      description:
        'Rob and Jason are joined by Slobodan Dmitrovic. They first talk about the latest update to the {fmt} library, another Raymond Chen blogpost, and a summary of ISO standardization progress made in 2021. Then they talk to Slobodan about his new book Modern C for Absolute Beginners.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/fmtlib/fmt/releases/tag/8.1.0"\u003e{fmt} v8.1.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20211229-00/?p\u003d106061"\u003eYou can\u0027t copy code with memcpy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://botondballo.wordpress.com/2022/01/03/2021-c-standardization-highlights/"\u003e2021 C++ Standardization Highlights\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3q1tzo7"\u003eModern C for Absolute Beginners\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppandfriends.com/"\u003eC++ and Friends\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2022-01-06T00:00:00Z",
    },
    {
      id: 27,
      sourceId: 4,
      title: "New Years 2022",
      link: "https://cppcast.com/new-years-2022/",
      description:
        'Rob and Jason discuss various news articles, libraries and announcements on the last episode of 2021 before the new year.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/rnwq2g/c_logging_library_something_ive_been_working_on/"\u003eC++ logging library - something I\u0027ve been working on, Pt. 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/rnqy8r/do_vectors_get_more_use_than_what_my_textbook/"\u003eDo vectors get more use than what my textbook implies?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nibblestew.blogspot.com/2021/12/this-year-receive-gift-of-free-meson.html"\u003eThis year receive the gift of a free Meson manual\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/microsoft-visual-studio-2022-and-floating-point-to-integer-conversions/"\u003eMicrosoft VS 2022 and Floating-point to Integer Conversions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/en/blog/posts/cpp/0901/"\u003eTop 10 bugs found in C++ projects in 2021\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/visual-studio-code-c-december-2021-update-clang-tidy/"\u003eVisual Studio Code C++ December 2021 Update: clang-tidy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hnOsmium0001/imgui-command-palette"\u003eImGui Command Palette\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/rin3at/brand_new_c20_serialization_library_one_header/"\u003eBrand new C++20 serialization library (one header)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2021/12/clion-update-roadmap-2022-1/"\u003eCLion Bug-Fix Update 2021.3.1 and Roadmap for 2022.1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/cpp-on-sea-2022.html"\u003eC++ on Sea 2022\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dafc6WEJV6VE\u0026#38;list\u003dPLHTh1InhhwT6vjwMy3RG5Tnahw0G9qIx6\u0026#38;index\u003d20"\u003eYour New Mental Model of constexpr - Jason Turner - CppCon 2021\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow.org/announcements/2021/12/2022-CfS/"\u003eC++Now 2022 Call For Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca/"\u003eC++ North\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-12-31T00:00:00Z",
    },
    {
      id: 28,
      sourceId: 4,
      title: "Distributing C++ Modules",
      link: "https://cppcast.com/distributing-cpp-modules/",
      description:
        'Rob and Jason are joined by Daniel Ruoso and Bret Brown from Bloomberg. They first talk about Jason\u0027s new Object Lifetime Puzzle book and a blost post from Kevlin Henney on Agile processes. Then they talk to Daniel and Bret about their research into using Modules at Bloomberg, and some of the changes still needed from compilers and build systems to use Modules in large scale software development.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.boost.org/users/history/version_1_78_0.html"\u003eBoost v1.78\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/objectlifetimepuzzlerslevel1book1"\u003eObject Lifetime Puzzlers Book 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kevlinhenney.medium.com/agility-speed-96057078fe40"\u003eAgility ‚â† Speed\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2409r0.pdf"\u003ep2409: Requirements for Usage of C++ Modules at Bloomberg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2473r0.pdf"\u003ep2473: Distributing   C++   Module   Libraries\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/pulse/what-agile-actually-daniel-ruoso/"\u003eWhat Agile is Actually About?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dR1E1tmeqxBY"\u003eCppCon - Lessons Learned from Packaging 10,000+ C++ Projects - Bret Brown \u0026#38; Daniel Ruoso - CppCon 2021\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dIZXNsim9TWI"\u003eCppCon - Modern CMake Modules - Bret Brown - CppCon 2021\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-12-16T00:00:00Z",
    },
    {
      id: 29,
      sourceId: 4,
      title: "Beautiful C++",
      link: "https://cppcast.com/beautiful-cpp-book/",
      description:
        'Rob and Jason are joined by Kate Gregory and Guy Davidson. They first talk about a free online game development course and updates to CLion. Then they talk to Kate and Guy about their upcoming book: Beautiful C++: 30 Core Guidelines for Writing Clean, Safe, and Fast Code.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dLpEdZbUdDe4\u0026#38;list\u003dPL_xRyXins848jkwC9Coy7B4N5XTOnQZzz"\u003eC++ Game Programming course on YouTube\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2021/12/clion-2021-3-remote-debugger-docker/"\u003eCLion 2021.3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.sonarsource.com/modernizing-your-code-with-cpp20"\u003eModernizing Your Code With C++20\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3dHJalC"\u003eBeautiful C++: 30 Core Guidelines for Writing Clean, Safe, and Fast Code on Amazon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gregcons.com/KateBlog/BeautifulC30CoreGuidelinesForWritingCleanSafeAndFastCode.aspx"\u003eKate Gregory\u0027s Blog - Beautiful C++: 30 Core Guidelines for Writing Clean, Safe, and Fast Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://godbolt.org/z/cg30-ch0.0"\u003eSample Code for Beautiful C++ on Compiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnorth.ca/"\u003eC++ North - The Canadian C++ Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://clementpirelli.wordpress.com/2021/12/08/cpp-reflection-ts-first-look/"\u003eC++ Reflection TS: A First Look\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://store.steampowered.com/app/1142710/Total_War_WARHAMMER_III/"\u003eTotal War: Warhammer III\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-12-09T00:00:00Z",
    },
    {
      id: 30,
      sourceId: 4,
      title: "Software Architecture with C++",
      link: "https://cppcast.com/cpp-software-architecture/",
      description:
        'Rob and Jason are joined by Adrian Ostrowski and Piotr Gaczowki. They first talk about profiling tools and reverse iterators. Then they talk to Adrian and Piotr about their book on C++ Software Architecture, and what all C++ developers can learn from it.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20211112-00/?p\u003d105908"\u003eAnother way of looking at C++ reverse iterators\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hackingcpp.com/cpp/tools/profilers.html"\u003eC++ Profiling and Benchmarking Tools in 2021\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2021/11/19/string-view-by-value-ps/"\u003eA footnote on "Three reasons to pass std::string_view by value"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.packtpub.com/product/software-architecture-with-c/9781838554590"\u003eSoftware Architecture with C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3p790F4"\u003eSoftware Architecture with C++ on Amazon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eIndicate the #cppcast hashtag and request your PVS-Studio one-month trial license here \u003ca href\u003d"https://pvs-studio.com/try_free"\u003ehttps://pvs-studio.com/try_free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eC++ tools evolution: static code analyzers:\n\u003ca href\u003d"https://pvs-studio.com/0873"\u003ehttps://pvs-studio.com/0873\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-12-02T00:00:00Z",
    },
    {
      id: 31,
      sourceId: 4,
      title: "Mdspan and Too Cute C++ Tricks",
      link: "https://cppcast.com/too-cute-mdspan/",
      description:
        'Rob and Conor are joined by Daisy Hollman. They first talk about C++23\u0027s approaching feature freeze including Daisy\u0027s work on the mdspan proposal. Then they talk to Daisy about her recent \u0027too cute\u0027 CppCon talk and whether you should be writing cute code in production.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pages.jetbrains.com/cppcon2021"\u003eJetBrains CppCon Talks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/qug17i/c23_near_the_finish_line/"\u003eC++23: Near the Finish Line\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.kitware.com/cmake-3-22-0-available-for-download/"\u003eCmake 3.22.0 available for download\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0009r13.html"\u003ep0009 mdspan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d2YKj2l3PlCI"\u003eDaisy Hollman - What you can learn from being too cute - Meeting C++ online\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://apps.apple.com/app/petrify/id1451177988"\u003ePetrify App\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pmd.github.io/latest/pmd_userdocs_cpd.html"\u003ePMD Source Code Analyzer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.includecpp.org/"\u003e#include \u003cC++\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-11-25T00:00:00Z",
    },
    {
      id: 32,
      sourceId: 4,
      title: "Deducing This",
      link: "https://cppcast.com/deducing-this/",
      description:
        'Rob and Jason are joined by Ga≈°per A≈æman. They first talk about some resources for learning C++ and learning how to work on the LLVM compiler. Then they talk to Ga≈°per about the Deducing This feature coming  to C++23, how the feature worked its way through the ISO committee and what it will change.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://adspthepodcast.com/"\u003eADSP: The Podcast\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.arraycast.com/"\u003eThe Array Cast \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppbyexample.com/"\u003eC++ By Example\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://jb.gg/cppcon21"\u003eJetBrains CppCon Early Access\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2021/11/cppcon-2021-trip-report/"\u003eCppCon 2021 trip report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lowlevelbits.org/how-to-learn-compilers-llvm-edition/"\u003eHow to learn Compilers LLVM Edition\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p0847r7.html"\u003ep0847 Deducing This\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2358r0.pdf"\u003eDefining Contracts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-11-11T00:00:00Z",
    },
    {
      id: 33,
      sourceId: 4,
      title: "Visual Studio 2022",
      link: "https://cppcast.com/vs2022/",
      description:
        'Rob and Jason are joined by Sy Brand from Microsoft. They first talk about the recent CppCon conference, the hybrid format and some of their favorite talks. Then they talk to Sy about the upcoming Visual Studio 2022 release, what\u0027s new in the IDE and new features and improvements for C++ developers.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-10"\u003eWG21 October Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://javierestrada.blog/2021/10/30/cppcon-2021-virtual-trip-report-a-user-story/"\u003eCppCon 2021 Virtual Trip Report, A User Story\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003draB_289NxBk"\u003eExtending and Simplifying C++: Thoughts on Pattern Matching using \u003ccode\u003eis\u003c/code\u003e and \u003ccode\u003eas\u003c/code\u003e - Herb Sutter\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.microsoft.com/en-us/visualstudio/releases/2022/release-notes-preview"\u003eVisual Studio 2022 Release Notes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://visualstudio.microsoft.com/launch/"\u003eVisual Studio 2022 Launch Day Event\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/microsoft/STL/projects/9"\u003eC++20 DR tracker\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-11-04T00:00:00Z",
    },
    {
      id: 34,
      sourceId: 4,
      title: "C++23 ISO Progress",
      link: "https://cppcast.com/cpp23-iso-progress/",
      description:
        'Rob and Jason are joined by Bryce Adelstein Lelbach. They first talk about SonarLint analysis, and searching algorithm performance and an observation on compiler diversity. Then they talk to Bryce about the proposals that are heading for C++23, including major changes to the executor and networking proposals.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.sonarsource.com/supercharge-cpp-analysis-sonarlint-for-clion"\u003eSupercharge your C++ analysis with SonarLint for Clion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://julienjorge.medium.com/efficiently-searching-an-array-with-gcc-clang-and-icc-4234ef3cdba3"\u003eEfficiently searching an array with GCC, Clang and ICC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/q6tgod/c_committee_polling_results_for_asynchronous/"\u003eC++ Committee polling results for asynchronous programming\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0443r13.html"\u003eP0443R13 - A Unified Executors Proposal for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p2300r0.html"\u003eP2300R0 - std::execution\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-10-28T00:00:00Z",
    },
    {
      id: 35,
      sourceId: 4,
      title: "JIT Compilation and Exascale Computing",
      link: "https://cppcast.com/jit-doe-labs/",
      description:
        'Rob and Jason are joined by Hal Finkel from the US Department of Energy. They first talk to Hal about the LLVM 13 release and why the release notes were lacking. Then they talk to Hal about his C++ JIT Proposal, the Clang prototype and how it could be used. They also talk about Hal\u0027s work at DOE, Exascale computing and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://lists.llvm.org/pipermail/llvm-announce/2021-October/000095.html"\u003eLLVM 13 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20211004-00/?p\u003d105754"\u003eSome lesser-known powers of std::optional\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/q5yeo6/barbarian_an_open_and_distributed_conan_package/"\u003eBarbarian, an open and distributed Conan package index!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hfinkel/llvm-project-cxxjit"\u003eClangJIT\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1609r1.html"\u003eP1609R1 C++ Should Support Just-in-Time Compilation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d6dv9vdGIaWs"\u003eHal Finkel "Faster Compile Times and Better Performance: Bringing Just-in-Time Compilation to C+"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://science.osti.gov/ascrI"\u003eUS Department of Energy: Advanced Scientific Computing Research\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-10-21T00:00:00Z",
    },
    {
      id: 36,
      sourceId: 4,
      title: "EVE - the Expressive Vector Engine",
      link: "https://cppcast.com/eve/",
      description:
        'Rob and Jason are joined by Jo√´l Falcou and Denis Yaroshevskiy. They first talk about the 6.2 release of Qt and the range-based for loop bug that won\u0027t be getting fixed in C++23. Then they talk to Joel and Denis about EVE, a C++20 SIMD library that evolved from Boost.SIMD.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qt.io/blog/qt-6.2-lts-released"\u003eQT 6.2 LTS Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rohanrhu/gdb-frontend"\u003eGDBFrontend\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/pye3iv/c_committee_dont_want_to_fix_rangebased_for_loop/"\u003eC++ Committee don‚Äôt want to fix range-based for loop in C++23 (broken for 10yrs)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jfalcou/eve"\u003eEVE on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://godbolt.org/z/39x3fY8sd"\u003eEVE example on Compiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2021.sched.com/event/nvAV?iframe\u003dno"\u003eCppCon 2021: SIMD in C++20: EVE of a new Era\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/schedule/talkview.php?tid\u003d131"\u003eMeeting C++ 2021 - EVE: A new, powerful open source C++20 SIMD library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppconf.ru/talks/eve-a-new-powerful-open-source-c-20-simd-library/"\u003eC++Russia EVE Talk\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dd6NcnyXjc3I"\u003eDenis Yaroshevskiy - my first SIMD - Meeting C++ online\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-10-14T00:00:00Z",
    },
    {
      id: 37,
      sourceId: 4,
      title: "Autonomous UAS",
      link: "https://cppcast.com/autonomous-uas/",
      description:
        'Rob and Jason are joined by Brandon Duick and Billy Sisson from Exyn Technologies. They first discuss the upcoming CppCon hybrid conference and a new tuple library for C++20. Then they talk to Brandon and Billy about the autonomous UAS/Drone software they work on at Exyn Technologies.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/program-announcement-2021/"\u003eCppCon 2021 Program Announced\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/codeinred/tuplet"\u003eTuplet: A lightweight Tuple Library for Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2021/10/03/p2447-span-from-initializer-list/"\u003eSpan should have a converting constructor from initializer_list\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.exyn.com/about/careers"\u003eExyn Technology Careers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dUwH9m5rPJlc"\u003eExyn - Autonomy Level 4\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dBaL98fhuMmE"\u003eFirst Dog to Fly a Drone\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dxT99zub7IUA"\u003eExynAI - Modular Autonomy for Mission Critical Data\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-10-07T00:00:00Z",
    },
    {
      id: 38,
      sourceId: 4,
      title: "Joedb",
      link: "https://cppcast.com/joedb/",
      description:
        'Rob and Jason are joined by Remi Coulom from Kayufu. They first discuss another blog posts about the ongoing ABI problems in C++ and another on common mistakes with comparison functions. Then they talk to Remi about Joedb, the Journal-Only Embedded Database.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sourcetrail.com/blog/discontinue_sourcetrail/"\u003eDicontinue Sourcetrail\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.dev/binary-banshees-digital-demons-abi-c-c++-help-me-god-please"\u003eBinary Banshees and Digital Demons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/pvchq8/djinnigenerator_release_v120/"\u003eDjinni generator release v1.2.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ggabriel96/opzioni"\u003eOpzioni\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/pulse/everybody-makes-mistakes-when-writing-comparison-functions-karpov/"\u003eEverybody Makes Mistakes When Writing Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Remi-Coulom/joedb"\u003eJoedb - Journal-Only Embedded Database\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kayufu.com/"\u003eKayufu - Artificial Intelligence in Games\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-09-30T00:00:00Z",
    },
    {
      id: 39,
      sourceId: 4,
      title: "CoreCpp 2021",
      link: "https://cppcast.com/corecpp-amir-avi/",
      description:
        'Rob and Jason are joined by Amir Kirsh and Avi Lachmish from Incredibuild. They first discuss Idle, a new C++ framework, the September ISO mailing and an Algorithm Intuition Chart. Then they talk to Amir and Avi about the recent CoreCpp conference, Bjarne\u0027s keynote and other talks from the conference.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Naios/idle"\u003eIdle: an asynchronous and hot-reloadable C++ dynamic component framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-09"\u003eSeptember ISO Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://original.fileswhatever.net/algorithms.php"\u003eAlgorithm Intuition Chart\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore Cpp Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/blog/bjarne-stroustrup-live-on-core-c-conference-qa-session"\u003eBjarne Stroustrup Live on Core C++ Conference ‚Äì Q\u0026#38;A Session\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dQ7HcwDE3lsU"\u003eCore C++ 2021: Bjarne Stroustrup - Thriving in a crowded and changing world\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/blog/rust-vs-c-and-is-it-good-for-enterprise"\u003eRust vs C++ and Is It Good for Enterprise\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-09-23T00:00:00Z",
    },
    {
      id: 40,
      sourceId: 4,
      title: "Dart and Crafting Interpreters",
      link: "https://cppcast.com/dart-crafting-interpreters/",
      description:
        'Rob and Jason are joined by Bob Nystrom from Google. They first discuss git commands explained via cats and an analysis of how Visual Studio 2022 could use all your RAM. Then they talk to Bob about some of the programming languages he\u0027s created, his two books \u0027Crafting Interpreters\u0027 and \u0027Game Programming Patterns\u0027 and his work on the Dart programming language at Google.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/pkru4h/safer_usage_of_c_in_chrome/"\u003eSafer Usage of C++ in Chrome\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://girliemac.com/blog/2017/12/26/git-purr/"\u003eGit commands explained with cats\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingembedded.com/News/items/Announcing-Meeting-Embedded-2021.html"\u003eMeeting Embedded 2021\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/en/blog/posts/csharp/0865/"\u003eHow Visual Studio 2022 ate up to 100GB of RAM\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3kbvnIa"\u003eCrafting Interpreters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/3hBlp1b"\u003eGame Programming Patterns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://dart.dev/"\u003eDart Programming Language\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://flutter.dev/"\u003eFlutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://journal.stuffwithstuff.com/"\u003eRobert Nystrom\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/munificent/vigil"\u003eVigil on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"https://jb.gg/cppcast"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-09-16T00:00:00Z",
    },
    {
      id: 41,
      sourceId: 4,
      title: "Podcasting and Advocating",
      link: "https://cppcast.com/sonar-source-dev-advocate/",
      description:
        'Rob and Jason are joined by Phil Nash. They first discuss another C++ podcasts interview with Sean Parent and a blog post from Bungie on their process for creating coding guidelines. Then they talk to Phil Nash about his new role at Sonar Source, his podcasts, C++ On Sea and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://adspthepodcast.com/2021/08/20/Episode-39.html"\u003eEpisode 39: How Steve Jobs Saved Sean Parent\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bungie.net/en/News/Article/50666"\u003eBungie C++ Guidelines \u0026#38; Razors\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sonarsource.com/"\u003eSonar Source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/"\u003eC++ on Sea\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpp.chat/"\u003ecpp.chat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nodiagnosticrequired.tv/"\u003eNo Diagnostic Required\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/class-2021-accelerated-tdd/"\u003eAccelerated TDD: For More Productive C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/bfgroup/Lyra"\u003eLyra on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-09-09T00:00:00Z",
    },
    {
      id: 42,
      sourceId: 4,
      title: "Learning C++ with Serenity",
      link: "https://cppcast.com/learning-cpp-serenity/",
      description:
        'Rob and Jason are joined by Linus Groh. They first discuss a new feature of Compiler Explorer and some ISO papers. Then they talk to Linus about his involvement in the Serenity project, learning C++ as he became a contributor.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://godbolt.org/z/WseTsM8YG"\u003eCompiler Explorer now supports multiple file compilation and linking\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-08"\u003eAugust 2021 Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/books/book.php?hash\u003d142dbe39af634133e6192e359296cb5d6500ebb1"\u003eIntroduction to Programming with C++ for Engineers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://linus.dev/"\u003eLinus\u0027 Website\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SerenityOS/serenity"\u003eSerenityOS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/c/AndreasKling"\u003eAndreas Kling\u0027s YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-09-02T00:00:00Z",
    },
    {
      id: 43,
      sourceId: 4,
      title: "Insight Toolkit",
      link: "https://cppcast.com/insight-toolkit/",
      description:
        'Rob and Jason are joined by Matt McCormick from Kitware. They first discuss a blog post on using C++20 modules with GCC11 and Qt Multimedia support in Web Assembly. Then they talk to Matt about the history of Insight Toolkit, some of its applications and its role in the origin of CMake.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.feabhas.com/2021/08/c20-modules-with-gcc11/"\u003eC++20 modules with GCC11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/p69plb/json_for_modern_c_3100/"\u003eJSON for Modern C++ 3.10.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://qtandeverything.blogspot.com/2021/08/qt-multimedia-has-new-friend.html"\u003eQt Multimedia has a new friend\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://itk.org/"\u003eInsight Toolkit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/InsightSoftwareConsortium/ITK"\u003eInsight Toolkit on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.slicer.org/"\u003e3D-Slicer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cmake.org/"\u003eCMake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://insightsoftwareconsortium.github.io/itk-js/"\u003eitk.js\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kitware.github.io/vtk-js/index.html"\u003evtk.js\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dockcross/dockcross"\u003edockcross\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-08-26T00:00:00Z",
    },
    {
      id: 44,
      sourceId: 4,
      title: "Efficient Programming with Components",
      link: "https://cppcast.com/efficient-programming-components/",
      description:
        'Rob and Jason are joined by Justin Meiners. They first talk about a big boost library update, and whether Valgrind is still useful compared to sanitizers. Then they talk to Justin Meiners about Alex Stepanov, his contribution to the STL and some of his courses that are still relevant to today\u0027s C++ programmers.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.boost.org/users/history/version_1_77_0.html"\u003eBoost v1.77.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/content/www/us/en/develop/blogs/adoption-of-llvm-complete-icx.html"\u003eIntel C/C++ compilers complete adoption of LLVM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://m-peko.github.io/craft-cpp/posts/valgrind-a-neglected-tool-from-the-shadows-or-a-serious-debugging-tool/"\u003eValgrind - A neglected tool from the shadows or a serious debugging tool?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLHxtyCq_WDLXryyw91lahwdtpZsmo4BGD"\u003eEfficient Programming with Components - YouTube Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://justinmeiners.github.io/efficient-programming-with-components/"\u003eEfficient Programming with Components - Notes by Justin Meiners\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://justinmeiners.github.io/efficient-programming-with-components/12_merge_sort.html#Merge-with-fewer-comparisonsl"\u003eMerge with fewer comparisons (using goto)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-08-19T00:00:00Z",
    },
    {
      id: 45,
      sourceId: 4,
      title: "News and Catching Up",
      link: "https://cppcast.com/august-2021-news/",
      description:
        'Rob and Jason talk about C++ news, upcoming conferences, tooling updates and a bit about the C++ projects they work on in their day jobs.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://ndctechtown.com/speakers/jason-turner"\u003eNDC TechTown Keynote and Class\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/class-2021-practical-performance-practices/"\u003eCppCon Practical Performance Practices CppCon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/big-update-with-big-thinks-for-a-big-program/"\u003eBig Update with Big Thanks for a Big Program\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://labs.bishopfox.com/tech-blog/youre-doing-iot-rng"\u003eYou\u0027re Doing IoT RNG\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/D2422R0.html"\u003eRemove nodiscard annotations from the standard library specification\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developercommunity.visualstudio.com/t/std::span-is-not-zero-cost-because-of-th/1429284"\u003estd::span is not zero-cost because of the ms abi\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/ozzhhk/does_anyone_ever_use_goto_in_their_code/"\u003e/r/cpp - Does anyone ever use goto in their code?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/p00vrk/github_actions_to_setup_gccclangmingww64/"\u003e/r/cpp - Github actions to setup gcc/clang/mingw\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/p1ce7t/am_i_going_to_be_burned_at_the_stake_for_using/"\u003e/r/cpp - Am I going to be burned at the stake for using basic_string\u003cint\u003e as an integer array?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/2021/08/03/resharper-cpp-2021-2/#immutability_inspections"\u003eReSharper C++ 2021.2: Type Conversion Hints, Immutability Inspections, Inline Function\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/moving-a-project-to-cpp-named-modules/"\u003eMoving a project to C++ named Modules\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-08-12T00:00:00Z",
    },
    {
      id: 46,
      sourceId: 4,
      title: "Performance Tuning",
      link: "https://cppcast.com/performance-tuning/",
      description:
        'Rob and Matt are joined by Denis Bakhvalov. They first talk about building Minesweeper in C++ with SFML and a paper on throughput prediction on intel microarchitectures. Then they talk to Denis about his blog, book and video series focusing on C++ performance, and his vision of the future tooling and techniques of writing performant C++ code.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmyGrhTNUAPY"\u003eMaking the Classic Minesweeper Game using C++ and SFML\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/edit-your-c-code-while-debugging-with-hot-reload-in-visual-studio-2022/"\u003eHot Reload support for C++ Applications\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/gabime/spdlog/releases/tag/v1.9.1"\u003eSpdlog 1.9.1 released. Support for compile-time format string validation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arxiv.org/pdf/2107.14210.pdf"\u003eAccurate throughput prediction of basic blocks on recent intel microarchitectures\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://easyperf.net/"\u003eeasyperf.net\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://book.easyperf.net/perf_book"\u003ePerformance Analysis and Tuning on Modern CPUs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dendibakh/perf-ninja"\u003ePerformance Ninja Course\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dZSR4NlFGVPI\u0026#38;t\u003d9574s"\u003eLLVM+CGO Performance Workshop - Performance Tuning: Future Compiler Improvements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://proebsting.cs.arizona.edu/law.html"\u003eProebsting\u0027s Law\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/strlen"\u003ePVS-Studio Learns What strlen is All About\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-08-05T00:00:00Z",
    },
    {
      id: 47,
      sourceId: 4,
      title: "STLab",
      link: "https://cppcast.com/adobe-software-tech-lab/",
      description:
        'Rob and Jason are joined by Sean Parent and Dave Abrahams. They first talk to Dave about his history with C++, Boost and the Swift programming language. Then they talk with Sean and Dave about Adobe\u0027s Software Technology Lab and their plans to focus on Concurrency in C++.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://andreasfertig.blog/2021/07/cpp20-a-neat-trick-with-consteval/"\u003eA Neat trick with consteval\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppstories.com/2021/constexpr-new-cpp20/"\u003eConstexpr memory allocation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/yuchdev/CppBooks"\u003eComprehensive Catalog of C++ Books\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://stlab.cc/"\u003estlab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/stlab"\u003estlab on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-07-29T00:00:00Z",
    },
    {
      id: 48,
      sourceId: 4,
      title: "HPX and DLA Future",
      link: "https://cppcast.com/hpx-dla-future/",
      description:
        'Rob and Jason are joined by Hartmut Kaiser and Mikael Simberg. They first discuss some blog posts on returning multiple values from a function and C++ Ranges. Then they talk to Hartmut Kaiser and Mikael Simberg on the latest version of HPX, how easy it is to gain performance improvements with HPX, and DLA Futures, the Distributed Linear Algebra library built using HPX.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/en/blog/posts/0843/"\u003eAn Unexpected Article About Our Unicorn: Who Is the PVS-Studio Mascot?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2021/07/09/how-to-return-several-values-from-a-function-in-c/"\u003eHow to Return Several Values from a Function in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://andreasfertig.blog/2021/06/cpp20-ranges-benefits-avoid-dangling-pointers/"\u003eC++20 ranges benefits: avoid dangling pointers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://hpx.stellar-group.org/"\u003eHPX\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/STEllAR-GROUP/hpx"\u003eHPX on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hpx.stellar-group.org/2021/07/14/hpx-1-7-0-released/"\u003eHPX 1.7.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/eth-cscs/DLA-Future"\u003eDLA Future on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-07-22T00:00:00Z",
    },
    {
      id: 49,
      sourceId: 4,
      title: "Improving Performance",
      link: "https://cppcast.com/improving-performance/",
      description:
        'Rob and Jason are joined by Ivica Bogosavljevic from Johny\u0027s Software Lab. They first talk about an open sourced 3d game engine and C++ documentation tools. Then they talk to Ivica Bogosavljevic from Johny\u0027s Software Lab where he writes about methods to improve performance in C++ applications.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/o3de/o3de"\u003eOpen 3D Engine\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://sixtyfps.io/blog/documentation-tools-for-cpp-libraries.html"\u003eDoc Tools for C++ Libraries\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cppcon-2021-call-for-submissions/"\u003eCppCon 2021 call for submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetingcpp.com/meetingcpp/news/items/Announcing-the-second-set-of-AMAs-for-2021.html"\u003eSecond set of Meeting C++ AMAs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://johnysswlab.com/"\u003eJohny\u0027s Software Lab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://easyperf.net/"\u003eeasyperf\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/clang"\u003ePVS-Studio Team: Switching to Clang Improved PVS-Studio C++ Analyzer\u0027s Performance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/beta_clion"\u003eBeta-Testing of PVS-Studio Plugin for JetBrains CLion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pvs-studio.com/broadcasting"\u003ePVS-Studio podcast transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-07-15T00:00:00Z",
    },
    {
      id: 50,
      sourceId: 4,
      title: "Tipi.build",
      link: "https://cppcast.com/tipi-build/",
      description:
        'Rob and Jason are joined by Damien Buhl and Yannic Staudt from tipi.build. They first talk about a new text encoding library and whether const should be the default for variables. Then they talk about tipi.build, the Compiler-as-a-Service that understands C++ code and can build it without scripts.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.dev/any-encoding-ever-ztd-text-unicode-cpp"\u003eAny Encoding, Ever - ztd.text and Unicode for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://belaycpp.com/2021/06/30/should-every-variable-be-const-by-default/"\u003eShould every variable be const by default?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://marcoarena.wordpress.com/2021/06/23/reversing-words-of-a-string-with-ranges-thatsarotate/"\u003eReversing words of a string with ranges -#thatsarotate\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://tipi.build/"\u003etipi.build\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://tipi.build/join"\u003eJoin tipi.build beta\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://tipi.build/blog"\u003etipi.build blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/TipiBuild"\u003e@TipiBuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-07-08T00:00:00Z",
    },
    {
      id: 51,
      sourceId: 4,
      title: "LFortran",
      link: "https://cppcast.com/lfortran/",
      description:
        'Rob and Jason are joined by Ond≈ôej ƒåert√≠k from Los Alamos National Laboratory. They first talk about ISO Papers and Github\u0027s CoPilot AI programmer. Then they talk to Ond≈ôej about LFortran, a modern LLVM based Fortran compiler that can compile Fortran code into C++. \n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-06"\u003eJune 2021 ISO Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/s9w/cpp-lit"\u003eC++ Library Include Times\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://copilot.github.com/"\u003eGitHub Copilot\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cppcon-2021-field-trip/"\u003eCppCon Field Trip\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://lfortran.org/"\u003eLFortran\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://fortran-lang.org/"\u003eFortran\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/fortran-lang/fpm/"\u003eFortran Package Manager\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-07-01T00:00:00Z",
    },
    {
      id: 52,
      sourceId: 4,
      title: "Regression Testing with Touca",
      link: "https://cppcast.com/touca/",
      description:
        'Rob and Jason are joined by Pejman Ghorbanzade. They first talk about changes to the format library to enable better compile time errors, and some conference news from CppCon, C++ on Sea and NDC TechTown. Then they talk to Pejman about Touca, a new tool he\u0027s created for continuous regression testing.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dfeneyrou/palanteer"\u003ePalanteer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.zverovich.net/2021/06/16/safe-formatting-api.html"\u003eA quest for safe text formatting API\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/index.html"\u003eC++ On Sea starting soon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cppcon-2021-call-for-submissions/"\u003eCppCon call for submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ndctechtown.com/cfp"\u003eNDC TechTown call for papers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://touca.io/"\u003eTouca\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.touca.io/starting-vision/"\u003eTouca\u0027s vision for the future of regression testing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/trytouca/touca-cpp"\u003eTouca SDK on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppcast"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-06-25T00:00:00Z",
    },
    {
      id: 53,
      sourceId: 4,
      title: "Modernizing DOSBox",
      link: "https://cppcast.com/dosbox/",
      description:
        'Rob and Jason are joined by Patryk Obara. They first talk about \u003cformat\u003e in Visual Studio 2019 and a Trip Report from Herb Sutter on the Summer ISO meeting. Then they talk to Patryk Obara about the dosbox project itself and the dosbox staging repository where he\u0027s been working to modernize dosbox.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/format-in-visual-studio-2019-version-16-10/"\u003e\u0026#60;format\u0026#62; in Visual Studio 2019 v16.10\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2021/06/09/trip-report-summer-2021-iso-c-standards-meeting-virtual/"\u003eTrip report: Summer 2021 ISO C++ Standards meeting (virtual)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/nytrak/c_coroutines_tutorial_part4/"\u003ePainless coroutines part 4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://dosbox-staging.github.io/"\u003eDOSBox Staging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dosbox-staging/dosbox-staging"\u003eDOSBox Staging on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.dosbox.com/"\u003eDOSBOX\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppcast"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-06-18T00:00:00Z",
    },
    {
      id: 54,
      sourceId: 4,
      title: "DAW JSON Link",
      link: "https://cppcast.com/daw-json-link/",
      description:
        'Rob and Jason are joined by Darrell Wright. They first talk about a gameboy emulator written by Ben Smith and a new regression testing tool. Then they talk to Darrell Wright about DAW JSON Link, his JSON serialization library.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ArthurSonzogni/FTXUI"\u003eFTXUI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://binji.github.io/posts/pokegb/"\u003ePOKEGB gameboy emulator that only plays Pokemon blue (68 lines of C++)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.touca.io/starting-vision/"\u003eAutomated regression testing with Touca\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/beached/daw_json_link"\u003eDAW JSON Link on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://beached.github.io/daw_json_link/html/"\u003eDAW JSON Link Documentation\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-06-11T00:00:00Z",
    },
    {
      id: 55,
      sourceId: 4,
      title: "Incredibuild in the Cloud",
      link: "https://cppcast.com/incredibuild-cloud/",
      description:
        'Rob and Jason are joined by Dana Rochman and Amir Kirsh from Incredibuild. They first discuss conference news and a blog post from Andreas Kling. Then they talk to Dana and Amir about the latest from Incredibuild, including new support for accelerating builds in the cloud, and build caching.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/speakers-schedule-and-a-90-programme.html"\u003eC++ On Sea Schedule\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://awesomekling.github.io/I-quit-my-job-to-focus-on-SerenityOS-full-time/"\u003eI quit my job to focus on Serenity OS Full time\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/blog/top-13-c-libraries-to-watch-out-for"\u003e13 C++ Libraries To Watch Out For\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-06-04T00:00:00Z",
    },
    {
      id: 56,
      sourceId: 4,
      title: "Spack",
      link: "https://cppcast.com/spack/",
      description:
        'Rob and Jason are joined by Todd Gamblin and Greg Becker. They first discuss a documentation tool, a blog post about floating point numbers, and yet another post about ABI changes. Then they talk to Todd and Greg from Lawrence Livermore National Laboratory (LLNL) who both work on Spack, the popular open source package manager aimed at HPC.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/marzer/poxy"\u003ePoxy: a Doxygen frontend with extra fancy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2021/05/12/mostly-harmless-an-account-of-pseudo-normal-floating-point-numbers"\u003eMostly harmless: An account of pseudo-normal floating point numbers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2021/05/07/std-iterator-as-a-base-class/"\u003eRemoving an empty base class can break ABI\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://spack.io/"\u003eSpack\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/spack/spack"\u003eSpack on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://spack-tutorial.readthedocs.io/"\u003eSpack Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://slack.spack.io/"\u003eSpack Slack\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dyuhV7iKRIJU"\u003eBuild all the things with Spack: a package manager for more than C++ - Todd Gamblin - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/potassco/clingo"\u003eClingo: A grounder and solver for logic programs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://computing.llnl.gov/projects/build"\u003eBuild: Solving the Software Complexity Puzzle\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-05-28T00:00:00Z",
    },
    {
      id: 57,
      sourceId: 4,
      title: "ABI Stability",
      link: "https://cppcast.com/abi-stability/",
      description:
        'Rob and Jason are joined by Marshall Clow. They first discuss some bugs Microsoft found using ASAN in open source projects, and new libraries. Then they talk to Marshall Clow, longtime maintainer of libc++, on his perspective on the C++ ABI, and why stability is important.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/finding-bugs-with-addresssanitizer-patterns-from-open-source-projects/"\u003eFinding Bugs with AddressSanitizer: Patterns from Open Source Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mikke89/RmlUi/releases/tag/4.0"\u003eRmlUI 4.0 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/nbeqfv/not_enough_standards_my_c1720_library_for/"\u003eNot Enough Standards, my C++17/20 library for cross-platform utilities\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/2021/"\u003eMeeting C++ 2021 Announced\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7RoTDjLLXJQ"\u003eWhat is an ABI, and Why is Breaking it Bad? - Marshall Clow - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-05-21T00:00:00Z",
    },
    {
      id: 58,
      sourceId: 4,
      title: "Djinni",
      link: "https://cppcast.com/djinni/",
      description:
        'Rob and Jason are joined by Harald Achitz. They first discuss performance updates for debug builds coming in the next version of Visual Studio. Then they talk about Djinni, the cross platform language binding generator tool initially developed by Dropbox that is now being supported by the C++ Mobile Development community.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/2x-3x-performance-improvements-for-debug-builds/"\u003e2x-3x Performance Improvements for Debug Builds\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vcpkg.io/en/index.html"\u003eVcpkg site now has search\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nibblestew.blogspot.com/2021/05/should-we-break-abi-is-wrong-question.html"\u003eShould we break ABI is the wrong question\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://djinni.xlcpp.dev/"\u003eDjinni\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cross-language-cpp/djinni"\u003eDjinni on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mobilecpp.slack.com/"\u003eMobile C++ Slack\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.swedencpp.se/"\u003eC++ User Groups of Sweden\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcom.org/"\u003eC++ Community Organizers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-05-14T00:00:00Z",
    },
    {
      id: 59,
      sourceId: 4,
      title: "SonarSource Analysis Tools",
      link: "https://cppcast.com/sonarsource-analysis/",
      description:
        'Rob and Jason are joined by Lo√Øc Joly from SonarSource. They first discuss compiler updates in GCC and MSVC as well as survey results of most used C++ features. Then they talk to Lo√Øc about the SonarSource static analysis tools for C++, what sorts of bugs they discover, and what goes into creating a new analysis rule.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/microsoft/STL/wiki/Changelog#expected-in-vs-2019-1610-preview-3"\u003eVS 2019 STL is C++20 feature complete\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/pipermail/gcc/2021-April/235922.html"\u003eGCC 11.1 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/blog/items/Meeting-Cpp-survey-results--the-most-popular-Cpp-standard-features.html"\u003eMeeting C++ survey results: the most popular C++ standard features\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sonarsource.com/cpp/"\u003eSonarSource\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.sonarsource.com/the-neverending-story-of-writing-a-rule-for-argument"\u003eThe NeverEnding Story of writing a rule for argument passing in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-05-07T00:00:00Z",
    },
    {
      id: 60,
      sourceId: 4,
      title: "Defer is better than Destructors",
      link: "https://cppcast.com/jeanheyd-defer/",
      description:
        'Rob and Jason are joined by JeanHeyd Meneide. They first discuss alternative operators in C++, upcoming virtual conferences and papers in the April ISO mailing. Then they talk to JeanHeyd about his work on the C and C++ committees, including embed, defer and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/mw0khm/just_discovered_c_has_keywords_andornot_etc/"\u003eJust discovered C++ has keywords \u0027and\u0027/\u0027or\u0027/\u0027not\u0027 etc.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://visualstudio.microsoft.com/pure-virtual-cpp-event-2021/"\u003ePure Virtual C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-04"\u003eApril Mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://robertseacord.com/wp/2021/03/20/defer-mechanism-or-c-the-movie/"\u003eDefer Mechanism for C: The Movie\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/p1967r3.html"\u003ep1967 Preprocessor embed - Binary Resource Inclusion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0052r9.pdf"\u003ep0052 Generic Scope Guard and RAII Wrapper for the Standard Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/no-us-without-you-elifdef-elifndef-c-n2645"\u003eNo Us Without You - elifdef and elifndef\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://soasis.org/cosy/"\u003eCoSy Tech Con\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppcast"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-04-30T00:00:00Z",
    },
    {
      id: 61,
      sourceId: 4,
      title: "ScummVM",
      link: "https://cppcast.com/scummvm/",
      description:
        'Rob and Jason are joined by Eugene Sandulenko. They first discuss the announcement of Visual Studio 2022 and Facebook open sourcing a new machine learning library. Then they talk to Eugene Sandulenko all about ScummVM, how the project got started and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/visualstudio/visual-studio-2022/"\u003eVisual Studio 2022 coming this summer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/flashlight/flashlight"\u003eFlashlight - a C++ standalone library for machine learning open sourced by Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/CppDevSurvey-2021-04-summary.pdf"\u003e2021 Annual C++ Developer Survey "Lite"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.scummvm.org/"\u003eScummVM\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppcast"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-04-23T00:00:00Z",
    },
    {
      id: 62,
      sourceId: 4,
      title: "C++Builder",
      link: "https://cppcast.com/cpp-builder/",
      description:
        'Rob and Jason are joined by David Millington from Embarcadero. They first discuss a blog post on Thread Sanitizer and a very unique implementation of unique_ptr. Then they talk to David Millington from Embarcadero about C++ Builder, it\u0027s history and the state of the tool today. Including some of its extensions built into their version of Clang.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://hacks.mozilla.org/2021/04/eliminating-data-races-in-firefox-a-technical-report/"\u003eEliminating Data Races in Firefox\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/blog/items/Mathematical-constants-in-Cpp20.html"\u003eMathematical constants in C++20\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/mp5kss/nft_backed_implementation_of_stdunique_ptr/"\u003eNFT backed implementation of std::unique_ptr\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dCBuilder"\u003eC++Builder\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1384.pdf"\u003eN1384 - PME: Properties, Methods and Events\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1600.html"\u003eN1600 - C++/CLI Properties\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2004/n1615.pdf"\u003eN1615 - C++ Properties -- a Library Solution\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-04-16T00:00:00Z",
    },
    {
      id: 63,
      sourceId: 4,
      title: "Rigel Engine",
      link: "https://cppcast.com/rigel-engine/",
      description:
        'Rob and Jason are joined by Nikolai Wuttke. They first discuss a blog post series from Raymond Chen on coroutines and the upcoming pure virtual C++ conference. Then they talk to Nikolai Wuttke about Rigel Engine, a modern C++ reimplementation of Duke Nukem II.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://codingtidbit.com/2021/04/01/c23-and-to-be-replaced-by-operator/"\u003eC++23: -\u0026#62; and :: to be replaced by . operator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20210329-00/?p\u003d105015"\u003eC++ coroutines: The mental model for coroutine promises\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/thepowersgang/mrustc/"\u003eMutabah\u0027s Rust Compiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/sign-up-for-the-pure-virtual-cpp-2021-conference/"\u003ePure Virtual C++ 2021 Conference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lethal-guitar/RigelEngine"\u003eRigel Engine on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://rigelengine.nikolai-wuttke.de"\u003ePlay Rigel Engine online\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-04-09T00:00:00Z",
    },
    {
      id: 64,
      sourceId: 4,
      title: "One Lone Coder",
      link: "https://cppcast.com/one-lone-coder/",
      description:
        'Rob and Jason are joined by David Barr (aka javidx9). They first discuss Microsoft open sourcing calculator, an update to CMake and the March 2021 ISO Mailing. Then they talk to David about his YouTube channel, One Lone Coder, what inspired him to start it, and PixelGameEngine, the 2D game engine he works on with the One Lone Coder community.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://gitlab.com/avr-libstdcxx"\u003eFreestanding avr-libstdc++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arstechnica.com/gadgets/2019/03/calc-exe-is-now-open-source-theres-surprising-depth-in-its-ancient-code/"\u003eCalc.exe is now open source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://discourse.cmake.org/t/cmake-3-20-0-available-for-download/2999"\u003eCmake 3.20.0 available for download\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-03"\u003eISO C++ March Mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/javidx9"\u003ejavidx9 - One Lone Coder YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.twitch.tv/javidx9"\u003ejavidx9 - Twitch Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://community.onelonecoder.com/"\u003eOne Lone Coder Community\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embarcadero.com/products/cbuilder/start-for-free?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliateOutreach\u0026#38;utm_content\u003dBannerCppCast"\u003eC++ Builder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-04-02T00:00:00Z",
    },
    {
      id: 65,
      sourceId: 4,
      title: "Event Streaming",
      link: "https://cppcast.com/event-streaming/",
      description:
        'Rob and Jason are joined by Alex Gallego. They first discuss blog posts from Visual C++ on Intellisense updates and a tutorial for programming Starcraft AI. Then they talk to Alex Gallego about Red Panda, the event streaming platform written in C++ that\u0027s compatible with the Kafka API.\n        \u003ch3\u003eEpisode Transcripts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/tags/?q\u003dBroadcasting"\u003ePVS-Studio Episode Transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/milostosic/MTuner"\u003eMTuner\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/intellisense-improvements-in-visual-studio-2019/"\u003eIntellisense Improvements In Visual Studio 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dFEEkO6__GKw"\u003eSTARTcraft - Complete Beginner Starcraft: Broodwar AI Programming Tutorial with C++ / BWAPI STARTcraft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/git/git/blob/master/banned.h"\u003eGit source has a banned.h file that blocks use of certain C functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://vectorized.io/"\u003eVectorized.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/vectorizedio/redpanda"\u003eRedPanda on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vectorized.io/blog/fast-and-safe/"\u003eThe Kafka API is great; now let\u0027s make it fast!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/qt-6"\u003eDate Processing Attracts Bugs or 77 Defects in Qt 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/covid-19"\u003eCOVID-19 Research and Uninitialized Variables\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-03-19T00:00:00Z",
    },
    {
      id: 66,
      sourceId: 4,
      title: "Reducing Memory Allocations",
      link: "https://cppcast.com/reducing-memory-allocations/",
      description:
        'Rob and Jason are joined by Arnaud Desitter. They first discuss blog posts on parameter passing, fuzzing and push_back vs emplace_back. Then they talk to Arnaud Desitter about his successes improving application performance by reducing memory allocations found using heaptrack.\n        \u003ch3\u003eEpisode Transcripts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/tags/?q\u003dBroadcasting"\u003ePVS-Studio Episode Transcripts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://mort.coffee/home/clang-compiler-hacking/"\u003eHacking on Clang is surprisingly easy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://wolchok.org/posts/parameter-passing/"\u003eParameter Passing in C and C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fireeye.com/blog/threat-research/2021/03/fuzzing-image-parsing-in-windows-uninitialized-memory.html"\u003eFuzzing Image Parsing in Windows, Part Two: Uninitialized Memory\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2021/03/03/push-back-emplace-back/"\u003eDon\u0027t blindly prefer emplace_back to push_back\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dZXTI5iWHhrg"\u003eReducing Memory Allocations in a Large C++ Application - Arnaud Desitter [ C++ on Sea 2020 ]\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/adesitter/accu_presentations/blob/master/ReducingMemoryAllocations_CppOnSea_2020.pdf"\u003eReducing Memory Allocations in a Large C++ Application - Slides- Arnaud Desitter [ C++ on Sea 2020 ]\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/KDE/heaptrack"\u003eheaptrack\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/evil_comparison_functions"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/top_10_bug_cpp"\u003eTop 10 Bugs Found in C++ Projects in 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-03-12T00:00:00Z",
    },
    {
      id: 67,
      sourceId: 4,
      title: "The Old New Thing",
      link: "https://cppcast.com/old-new-thing/",
      description:
        'Rob and Jason are joined by Raymond Chen from Microsoft. They first talk about Herb Sutter\u0027s virtual ISO Plenary Trip Report and some new features voted into the C++23 draft. Then they talk to Raymond Chen from Microsoft about his career working on Windows and the Old New Thing blog.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2021/02/22/trip-report-winter-2021-iso-c-standards-meeting-virtual/"\u003eTrip report: Winter 2021 ISO C++ standards meeting (virtual)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bcairns.medium.com/learn-c-qt-and-qml-the-easy-way-8d2fb830fb2d"\u003eLearn C++, Qt and QML the easy way\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eRaymond‚Äôs blog \u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/"\u003eThe Old New Thing\u003c/a\u003e. Here‚Äôs \u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20120628-00/?p\u003d7263"\u003ethe post that made his July 4 family picnic a little more stressful\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003eRaymond is managing editor of the \u003ca href\u003d"https://github.com/microsoft/Windows-universal-samples"\u003eWindows Universal Samples\u003c/a\u003e and the \u003ca href\u003d"https://github.com/microsoft/Windows-classic-samples/"\u003eWindows Classic Samples\u003c/a\u003e repos on GitHub.\u003c/li\u003e\n\u003cli\u003eHere‚Äôs a \u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLlrxD0HtieHge3_8Dm48C0Ns61I6bHThc"\u003eYouTube playlist\u003c/a\u003e of Raymond‚Äôs One Dev Minute short videos.\u003c/li\u003e\n\u003cli\u003eRaymond can be found on GitHub as \u003ca href\u003d"https://github.com/oldnewthing/"\u003e@oldnewthing\u003c/a\u003e, and his necktie‚Äôs Twitter account is \u003ca href\u003d"https://twitter.com/ChenCravat"\u003e@ChenCravat\u003c/a\u003e.\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-03-05T00:00:00Z",
    },
    {
      id: 68,
      sourceId: 4,
      title: "Vcpkg Registries",
      link: "https://cppcast.com/vpkg-registries/",
      description:
        'Rob and Jason are joined by Nicole Mazzuca from Microsoft. They first talk about a differential equation library, and modules support in build2 and meson. Then they talk to Nicole from Microsoft\u0027s vcpkg team about some new features in vcpkg to enable teams to host their own libraries.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/lkcjki/solving_differential_equations_with_llvm/"\u003eSolving Differential Equations with LLVM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://build2.org/blog/build2-cxx20-modules-gcc.xhtml"\u003eComplete C++20 Modules Support with GCC in build2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mesonbuild.com/Release-notes-for-0-57-0.html"\u003eMeson Build System 0.57.0 is out w/ experimental suport for C++ Modules, Qt6, ThinLTO and more\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/registries-bring-your-own-libraries-to-vcpkg/"\u003eRegistries: Bring your own libraries to vcpkg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@alex.birsan/dependency-confusion-4a5d60fec610"\u003eDependency Confusion: How I Hacked Into Apple, Microsoft and Dozens of Other Companies\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/evil_comparison_functions"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/top_10_bug_cpp"\u003eTop 10 Bugs Found in C++ Projects in 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-02-26T00:00:00Z",
    },
    {
      id: 69,
      sourceId: 4,
      title: "Trading Systems",
      link: "https://cppcast.com/trading-systems-carl-cook/",
      description:
        'Rob and Jason are joined by Carl Cook from Optiver. They first talk discuss an announcement from Khronos that SYCL 2020 has been released, and a blog post from Microsoft on updates to the Visual Studio Code C++ extension. Then they talk to Carl Cook from Optiver about how they use C++ to power everything they do.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.phoronix.com/scan.php?page\u003dnews_item\u0026#38;px\u003dKhronos-SYCL-2020-Released"\u003eKhronos Releases SYCL 2020 for C++ Heterogeneous Parallel Programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/visual-studio-code-c-extension-cross-compilation-intellisense-configurations/"\u003eVS Code C++ Extension: Cross-Compilation IntelliSense Configurations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/QuantlabFinancial/cpp_tip_of_the_week"\u003eModern C++ Tip of the Week\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.optiver.com/"\u003eOptiver\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/evil_comparison_functions"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/top_10_bug_cpp"\u003eTop 10 Bugs Found in C++ Projects in 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-02-19T00:00:00Z",
    },
    {
      id: 70,
      sourceId: 4,
      title: "Going Cross Platform",
      link: "https://cppcast.com/going-cross-platform/",
      description:
        'Rob and Jason are joined by Sebastian Theophil from think-cell. They first talk discuss a blog post on building a 1 billion LOC project with the Threadripper 3990X and a browser extension for easily searching for C++ reference help. Then they talk to Sebastian about his teams efforts to port their Windows C++ codebase onto MacOS and some of the challenges they dealt with, as well as recent efforts to start porting some of the code into Web Assembly.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.embarcadero.com/threadripper-3990x-the-quest-to-compile-1-billion-lines-of-c-on-64-cores/"\u003eThreadripper 3990X: The Quest to Compile 1 Billions lines of C++ on 64 cores\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/lbg4bj/looking_for_approachable_open_source_projects_to/"\u003eLooking for Approachable Open Source Projects to Contribute to\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpp.extension.sh/changelog/#v0-2-2021-01-31"\u003eC++ Search Extension v0.2 released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/career/jobs/development.html"\u003ethink-cell: Join us as a C++ developer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppconf-piter.ru/en/2020/spb/talks/7n4qbinocb8yk01lqx7f0q/"\u003eWindows, macOS and the Web: Lessons from cross-platform development at think-cell\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/think-cell/tcjs"\u003etcjs library for generating type-safe JavaScript bindings for C++/Emscripten\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-02-12T00:00:00Z",
    },
    {
      id: 71,
      sourceId: 4,
      title: "Clang Power Tools and C++ Myths",
      link: "https://cppcast.com/clang-power-tools-myths/",
      description:
        'Rob and Jason are joined by Victor Ciura. They first talk about different ways to filter a C++ container and a blog post on the Visual C++ blog from the Diablo 4 development team. They then talk to Victor about the Clang Power Tools plugin for Visual Studio which has recently been made free for both open source and commercial use. They also talk about C++ Myths.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppstories.com/2021/filter-cpp-containers/"\u003e12 Different Ways to Filter Containers in Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/MiSo1289/more_concepts"\u003eMore_concepts library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/blizzard-diablo-iv-debugs-linux-core-dumps-from-visual-studio/"\u003eBlizzard Diablo IV debugs Linux core dumps from Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cppstories.com/2021/natvis-tutorial/"\u003eVisual Studio\u0027s Native Debugging Framework Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/blog/next-steps-for-clang-power-tools.html"\u003eNext steps for Clang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dBu1AEze14Ns"\u003eC++ Mythbusting with Victor and Jason\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-02-05T00:00:00Z",
    },
    {
      id: 72,
      sourceId: 4,
      title: "SOLID Design Principles",
      link: "https://cppcast.com/solid-klaus-iglberger/",
      description:
        'Rob and Jason are joined by Klaus Iglberger. They first talk about changes to make the Win32 API more accessible, some C++20 coroutine examples and ISO news. Then they talk to Klaus Iglberger about the SOLID design principles, why they still matter and what C++ developers should know about them.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.windows.com/windowsdeveloper/2021/01/21/making-win32-apis-more-accessible-to-more-languages/"\u003eMaking Win32 APIs More Accessible to More Languages\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/l4lcar/do_people_have_some_motivating_examples_for/"\u003eMotivated Examples for coroutines\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2021/#mailing2021-01"\u003eJanuary 2021 ISO Mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dNtraj80qN2k"\u003eBreaking Dependencies: The SOLID Principles - Klaus Iglberger - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/mcpp/training/trainingslisting.php?tid\u003d19"\u003eMeeting C++ Training: Modern C++ Design Patterns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/class-2020-modern-cpp-design/"\u003eCppCon 2020: Modern C++ Design Patterns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/2020/sessions/workshop_modern-cpp-design-patterns.html"\u003eCpp On Sea: Modern C++ Design Patterns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtMW08JkFrBA"\u003eYOW! 2013 Kevlin Henney - The SOLID Design Principles Deconstructed\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-01-28T00:00:00Z",
    },
    {
      id: 73,
      sourceId: 4,
      title: "Cheerp",
      link: "https://cppcast.com/cheerp-alessandro-pignotti/",
      description:
        'Rob and Jason are joined by Alessandro Pignotti. They first talk about a linker project, a better assert for constexpr code. Then they talk about Cheerp, LeaningTech\u0027s C++ WebAssembly compiler, how it differs from emscripten, Cheerp optimizations and some of LeaningTech\u0027s other Cheerp products.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rui314/mold"\u003emold: A Modern Linker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/ko9g8i/c_jobs_q1_2021/"\u003eC++ Jobs Q1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/kylb82/a_slightly_better_assert_using_c20s_stdis/"\u003eA slightly better assert using C++20\u0027s is_constant_evaluated\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20210114-00/?p\u003d104714"\u003eHow can I write a C++ class that iterates over its base classes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://leaningtech.com/pages/cheerp.html"\u003eCheerp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/leaningtech/extreme-webassembly-2-the-sad-state-of-webassembly-tail-calls-f5d48ef82a87"\u003eExtreme WebAssembly 2: the sad state of WebAssembly tail calls\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7JUs4c99-mo"\u003eCheerpX: a WebAssembly-based x86 virtual machine in the browser, Yuri Iozzelli\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://repl.leaningtech.com/"\u003eCheerpX repl\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-01-21T00:00:00Z",
    },
    {
      id: 74,
      sourceId: 4,
      title: "Priorities for C++23",
      link: "https://cppcast.com/priorities-for-23-corentin-jabot/",
      description:
        'Rob and Jason are joined by Corentin Jabot. They first talk about a Visual Studio blog post on performance improvements in the \u0027inner build loop\u0027, and a ray tracer built into CMake. Then they talk to Corentin about his work in the C++ ISO committee on the Library Evolution Working Group and his thoughts on what could and should make it into C++23.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dqNX-tQ7w0Vg"\u003ef(t)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/faster-c-iteration-builds/"\u003eFaster C++ Iteration Builds\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://64.github.io/cmake-raytracer/"\u003eRay Tracing in pure Cmake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://shafik.github.io/c++/2021/01/03/is_zero_a_butterfly.html"\u003eIs Zero a Butterfly?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/std/"\u003eWhat is the standard Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2172r0.pdf"\u003eP2172 - What do we want from a modularized Standard Library?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-01-15T00:00:00Z",
    },
    {
      id: 75,
      sourceId: 4,
      title: "Open Frameworks and Creative Coding",
      link: "https://cppcast.com/open-frameworks-creative-coding/",
      description:
        'Rob and Jason are joined by Zach Lieberman, professor at MIT\u0027s Media Lab and co-founder of the School for Poetic Computation. They first talk about Herb Sutter\u0027s 2020 wrap up blog post and the ISO mailing from December 2020. Then Zach discusses Open Frameworks, a C++ toolkit he co-created 10 years ago for creative coding.\n        \u003ch3\u003eTranscript\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0813/"\u003eText Broadcast of CppCast 281 from PVS Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2020/12/30/firsts-in-2020-or-a-little-dose-of-good-news/"\u003eFirsts in 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-12"\u003eLast 2020 ISO Mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://openframeworks.cc/"\u003eOpen Frameworks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://openframeworks.cc/ofBook/chapters/foreword.html"\u003eOpen Frameworks Book\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ofxaddons.com/categories"\u003eofxAddons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.shadertoy.com/"\u003eShaderToy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thebookofshaders.com/"\u003eThe Book of Shaders\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dDKbtTPYZEig"\u003eGraffiti Research Lab L.A.S.E.R Tag\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.nytimes.com/interactive/2018/us/addiction-heroin-opioids.html"\u003eA Visual Journery Through Addiction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.design-io.com/projects/connectedworlds"\u003eConnected Worlds\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.katevassgalerie.com/blog/vera-molnar-pioneer-of-computer-art"\u003eVera Molnar: Pioneer of Computer Art\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.awn.com/mag/issue2.5/2.5pages/2.5moritzwhitney.html"\u003eDigital Harmony: The Life of John Whitney, Computer Animation Pioneer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://en.wikipedia.org/wiki/Muriel_Cooper"\u003eMuriel Cooper\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2021-01-07T00:00:00Z",
    },
    {
      id: 76,
      sourceId: 4,
      title: "Goodbye 2020",
      link: "https://cppcast.com/goodbye-2020/",
      description:
        'Rob and Jason are discuss various news articles, libraries and announcements on the last episode of 2020 before the new year.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embo.io/"\u003eEmbo++ 2021\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/kln8c8/runtime_access_of_stdtuple_elements/"\u003eRuntime access to tuple elements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/kl9w8f/project_from_scratch_in_c_for_beginners/"\u003eYouTube C++ Series - Project from Scratch for C++ Beginners\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/klib5n/bona_a_c20_based_modern_file_information_viewer/"\u003eBona - C++20 based modern file information viewer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/kka4o7/concepts_appreciation_thread_i_dont_have_any/"\u003eConcepts appreciation thread\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/kj364n/c_logging_library_something_ive_been_working_on/"\u003eA new C++ Logging Library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-12-31T00:00:00Z",
    },
    {
      id: 77,
      sourceId: 4,
      title: "TurtleBrowser",
      link: "https://cppcast.com/turtle-browser-patricia-aas/",
      description:
        'Rob and Jason are joined by Patricia Aas from TurtleSec. They first talk about updates to a Web Assembly compiler Cheerp and an announcement for a new systems programming language conference. Then they talk to Patricia about her current project building a new web browser using modern C++, Qt 5 and the Chromium engine. They also discuss Patricia\u0027s consulting business and managing it during the pandemic.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.ralfj.de/blog/2020/12/14/provenance.html"\u003ePointers are Complicated II, or: We need better language specs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/leaningtech/cheerp-2-6-compiling-cpp-to-wasm-and-javascript-cea4d2f67466"\u003eCheerp 2.6 - compiling C++ to WebAssembly and JavaScript\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/why-another-c++-c-rust-zig-systems-programming-conference"\u003eWhy Another C++ (And More) Conference\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/turtlebrowser/turtlebrowser"\u003eTurtleBrowser on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003da0aY3rOD0Ss"\u003eTrying to build an Open Source browser in 2020 - Patricia Aas\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://turtlesec.no/"\u003eTurtleSec\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-12-24T00:00:00Z",
    },
    {
      id: 78,
      sourceId: 4,
      title: "SerenityOS",
      link: "https://cppcast.com/serenity-os/",
      description:
        'Rob and Jason are joined by Andreas Kling. They first talk about the Qt 6.0 Release as well as another new C++ podcast that has been announced. They then talk to Andreas Kling about SerenityOS, the C++ Operating System he is building along with others in the Open Source community.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qt.io/blog/qt-6.0-released"\u003eQt 6.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/kc48b1/how_to_make_an_operating_system_using_c_in_depth/"\u003eHow to Make an Operating System using C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nodiagnosticrequired.tv/"\u003eNew Channel from the JetBrains crew\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.iso.org/standard/79358.html"\u003eC++20 Published\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://serenityos.org/"\u003eSerenityOS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SerenityOS/serenity"\u003eSerenity on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/andreaskling"\u003eAndreas Kling\u0027s YouTube\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wholetomato.com/downloads?utm_source\u003dCppCast\u0026#38;utm_medium\u003dAffiliate\u0026#38;utm_content\u003dPodcastSponsorship"\u003eVisual Assist\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-12-17T00:00:00Z",
    },
    {
      id: 79,
      sourceId: 4,
      title: "Virtual Teaching and Plenary",
      link: "https://cppcast.com/patrice-roy-virtual-teaching/",
      description:
        'Rob and Jason are joined by Patrice Roy. They first talk discuss JeanHeyd Meneide\u0027s blog post regarding ABI breakage in C and C++. Then they talk to Patrice Roy about his experience teaching C++ during the COVID pandemic, the first ISO Virtual Plenary and more.\n        \u003ch3\u003eTranscript\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0806/"\u003eCppCast 277: Virtual Teaching and Plenary from PVS Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/intmax_t-hell-c++-c"\u003eA Special Kind of Hell - intmax_t in C and C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/foonathan/lexy"\u003eLexy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2020/12/clion-2020-3-debug-misra-qt/"\u003eClion 2020.3 Released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dbMSrNBcir4Y"\u003eSome Things C++ Does Right - Patrice Roy - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-12-10T00:00:00Z",
    },
    {
      id: 80,
      sourceId: 4,
      title: "Networking TS",
      link: "https://cppcast.com/robert-leahy-networking-ts/",
      description:
        'Rob and Jason are joined by Robert Leahy. They first talk about an open source flappy bird clone and the C++ framework it was built with. Then they talk to Robert Leahy about the Networking TS that will hopefully be a major feature of C++23.\n        \u003ch3\u003eTranscript\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/cppcast_276"\u003eCppCast 276: Networking TS Transcript from PVS Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://preshing.com/20201126/a-small-open-source-game-in-cpp/"\u003eA Small Open Source Game in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/k2cozv/the_c_20_initialization_flowchart/"\u003eThe C++20 initialization flowchart\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lordsoftech.com/programming/error-codes-are-far-slower-than-exceptions/"\u003eError codes are far slower than exceptions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/k58a2u/beman_dawes_has_passed_away_boost_filesystem_wg21/"\u003eBeman Dawes has passed away\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dxgXFZ-rYc4w"\u003eThe Networking TS from Scratch: I/O Objects - Robert Leahy - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2013/n3747.pdf"\u003eN3747 - A Universal Model for Asynchronous Operations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2161r2.pdf"\u003eP2161 - Remove Default Candidate Executor\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-12-03T00:00:00Z",
    },
    {
      id: 81,
      sourceId: 4,
      title: "Fuzz Testing on the GPU",
      link: "https://cppcast.com/fuzz-testing-gpu/",
      description:
        'Rob and Jason are joined by Artem Dinaburg and Ryan Eberhardt. They first talk about a new version of CMake that was just released, an interview with Bjarne Stroustrup and another month of new ISO papers. Then they talk to Artem and Ryan who talk about fuzz testing, including a new fuzz testing project being worked at Trail of Bits to enable fuzz testing on the GPU.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://discourse.cmake.org/t/cmake-3-19-0-available-for-download/2198"\u003eCmake 3.19 available for download\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.techrepublic.com/article/c-programming-language-how-it-became-the-invisible-foundation-for-everything-and-whats-next/"\u003eHow C++ became the invisible foundation for everything, and what\u0027s next\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-11"\u003eNovember Monthly Mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.trailofbits.com/2020/10/22/lets-build-a-high-performance-fuzzer-with-gpus/"\u003eLet\u0027s build a high-performance fuzzer with GPUs!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arxiv.org/pdf/2008.06537.pdf"\u003eThe Relevance of Classic Fuzz Testing: Have We Solved This One?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gamozolabs.github.io/fuzzing/2018/10/14/vectorized_emulation.html"\u003eVectorized Emulation: Hardware accelerated taint tracking at 2 trillion instructions per second\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/trailofbits/deepstate"\u003eDeepState - Parameterized Unit Testing Framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lifting-bits/mcsema"\u003eMCSema - Tool to translate binaries to LLVM bitcode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lifting-bits/remill"\u003eRemill - Library of CPU instruction semantics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lifting-bits/anvill"\u003eAnvill - Tool to make translated bitcode look closer to what a compiler would emit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lifting-bits/rellic"\u003eRellic - Translates LLVM bitcode to C using Clang\u0027s AST library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-11-27T00:00:00Z",
    },
    {
      id: 82,
      sourceId: 4,
      title: "Concepts and Algorithm Intuition",
      link: "https://cppcast.com/concepts-algorithm-intuition/",
      description:
        'Rob and Jason are joined by Conor Hoekstra. They first talk about new and updated libraries in Boost and Herb Sutter\u0027s trip report covering news from the recent virtual ISO plenary meeting where the first new features were voted into C++23. Then they talk to Conor about some of his recent conference talks on Algorithm Intuition and Concepts vs typeclasses.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/jrjj2n/butano_a_modern_c_high_level_engine_for_the_gba/"\u003eButano: a modern C++ high level engine for the GBA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.boost.org/users/history/in_progress.html"\u003eNew Boost libraries in v1.75\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2020/11/13/trip-report-autumn-iso-c-standards-meeting-virtual/"\u003eTrip report: Autumn ISO C++ standards meeting (virtual)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/codereport/Talks/blob/master/README.md"\u003eConor\u0027s Conference Talks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://adspthepodcast.com/"\u003eADSP: The Podcast\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-11-19T00:00:00Z",
    },
    {
      id: 83,
      sourceId: 4,
      title: "Video Games, Robotics and Audio",
      link: "https://cppcast.com/joel-lamotte/",
      description:
        'Rob and Jason are joined by Jo√´l Lamotte. They first talk about C++20 Modules support in GCC and MSVC and a micro benchmarking library. Then they talk to Jo√´l about how he got involved in C++, and his experiences working on indie video games, robotics and his recent transition to the audio industry working on a web assembly powered website.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p0847r5.html"\u003eP0847R5 Deducing This\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.phoronix.com/scan.php?page\u003dnews_item\u0026#38;px\u003dGCC-Modules-Code-Review"\u003eC++20 Modules Compiler Code Under Review, Could still land for GCC 11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/p-ranav/criterion"\u003eCriterion micro-benchmarking library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/a-tour-of-cpp-modules-in-visual-studio/"\u003eA Tour of C++ Modules in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://soundcloud.com/mjklaim/sets/best-of-klaims-music"\u003eBest of Klaim\u0027s Music on Soundcloud\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://soundcloud.com/mjklaim/sets/glacierbound-ost-hometeam-gamedev"\u003eGlacierbound OST on Soundcloud\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hometeamgamedev.com/"\u003eHomeTeam GameDev\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jellynote.com/en"\u003eJellynote\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-11-12T00:00:00Z",
    },
    {
      id: 84,
      sourceId: 4,
      title: "Unicode Progress and C++/C Study Group",
      link: "https://cppcast.com/unicode-cpp-c-studygroup/",
      description:
        'Rob and JeanHeyd are joined by Aaron Ballman and Peter Brett, both members of the ISO C++ committee. They first talk about an extension for Visual Studio and Visual Code for visualizing struct layout and a blog post proposing a  safer boolean type. Then they talk about Aaron and Peter about progress being made at virtual ISO meetings and the upcoming virtual Plenary meeting.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Viladoman/StructLayout"\u003eStructLayout Visual C++ Extension\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vector-of-bool.github.io/2020/10/26/strong-bool.html"\u003eFun with Concepts: Do You Even Lift, Bool?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetingcpp.com/blog/items/My-thoughts-on--The----Community-.html"\u003eMeeting C++: My thoughts on "The... Community?"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-10"\u003eISO C++ October 2020 Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1787r4.html"\u003eP1787: Declarations and where to find them\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/sg16-unicode/sg16"\u003eWG21 SG16 Unicode study group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/editing-the-c-standard"\u003eEditing the C Standard\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-11-05T00:00:00Z",
    },
    {
      id: 85,
      sourceId: 4,
      title: "ThinLTO",
      link: "https://cppcast.com/teresa-johnson-thinlto/",
      description:
        'Rob and Jason are joined by Teresa Johnson from Google. They first discuss the Qt6 beta release and a blog post proposing range_ref, a lightweight view for ranges. Then they talk to Teresa about ThinLTO, the scalable and incremental Link Time Optimization built into LLVM.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qt.io/blog/qt-6.0-beta-released"\u003eQt 6.0 Beta Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://artificial-mind.net/blog/2020/10/24/range_ref"\u003eRange_ref\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Jason-Turner-and-Rob-Irving-join-Meeting-Cpp-2020-for-an-shared-AMA.html"\u003eRob and Jason AMA\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clang.llvm.org/docs/ThinLTO.html"\u003eThinLTO\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dp9nH2vZ2mNo"\u003eCppCon 2017: Teresa Johnson "ThinLTO: Scalable and Incremental Link-Time Optimization"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/schedule/talkview.php?tid\u003d81"\u003eMeeting C++ 2020 - ThinLTO Whole Program Optimization: Past, Present and Future\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-download-cppcast-t"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-azure-devops"\u003ePVS-Studio: analyzing pull requests in Azure DevOps using self-hosted agents \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/pvs-open-libraries"\u003eWhy it is important to apply static analysis for open libraries that you add to your project\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-10-30T00:00:00Z",
    },
    {
      id: 86,
      sourceId: 4,
      title: "Programming History, JIT Compilations and Generic Algorithms",
      link: "https://cppcast.com/ben-deane-jit-history/",
      description:
        'Rob and Jason are joined by Ben Deane from Quantlab. They first discuss the 11.0 update of Clang and an a blog post highlighting some of the smaller features that were added in C++17. They then talk to Ben about some of his recent CppCon talks including one on what we can learn from the history of programming languages and another on the ability to JIT C++ code.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://releases.llvm.org/11.0.0/tools/clang/docs/ReleaseNotes.html"\u003eClang 11.0.0 is out\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/08/17smallercpp17features.html"\u003e17 Smaller but Handy C++17 Features\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.quantlab.com/careers"\u003eCareers at Quantlab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dInMh3JxbiTs"\u003eConstructing Generic Algorithms: Principles and Practice - Ben Deane - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dI3ov8HcdVKw"\u003eJust-in-Time Compilation: The Next Big Thing? - Ben Deane \u0026#38; Kris Jusiak - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dip_SR9CQrxk"\u003eHow We Used To Be - Ben Deane - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-10-23T00:00:00Z",
    },
    {
      id: 87,
      sourceId: 4,
      title: "Bazel",
      link: "https://cppcast.com/bazel/",
      description:
        'Rob and Jason are joined by Luk√°cs Berki and Julio Merino from Google\u0027s Bazel team. They discuss CppCon trip reports, the cpp subreddit and a video on C++ 20 Concepts. Then Luk√°cs and Julio talk all about the advantages of Bazel and some of the key features of Google\u0027s open source build tool.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.testdouble.com/talks/2015-09-10-how-i-use-test-doubles/"\u003eMy favorite way to TDD\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/2020_wrapup/"\u003eCppCon Trip Reports\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/j8t9fu/rcpp_status_update/"\u003er/cpp status update\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d0ft3XR4ffNE"\u003eConcepts in C++20\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://bazel.build/"\u003eBazel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/bazelbuild/bazel"\u003eBazel on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://jmmv.dev/2020/10/bazel-jni.html"\u003eThe final boss: Bazel\u0027s own JNI code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-10-16T00:00:00Z",
    },
    {
      id: 88,
      sourceId: 4,
      title: "Meeting C++ 2020",
      link: "https://cppcast.com/meeting-cpp-2020/",
      description:
        'Rob and Jason are joined by Jens Weller from Meeting C++. They discuss a blog post on Immediately Invoked Function Expressions, a syntactic sugar library and JeanHeyd Meneid\u0027s blog and video about the C++ Community. Then they talk with Jens about the upcoming Meeting C++ conference, on line user groups and job fairs and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://codingcards.org/cpp/1"\u003eCoding Cards\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://foonathan.net/2020/10/iife-metaprogramming/"\u003eTechnique: Immediately Invoked Function Expression for Metaprogramming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/HO-COOH/SugarPP"\u003eSugarPP: syntactic üç¨ for programming in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/the-community"\u003eThe Community\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/survey/?src\u003dCppCast"\u003eMeeting C++ Survey\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/2020"\u003eMeeting C++ 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://online.meetingcpp.com/"\u003eMeeting C++ Online\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dA3oc-7K1ejE"\u003eBurnout - Jens Weller - Meeting C++ 2019 secret lightning talks\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-10-09T00:00:00Z",
    },
    {
      id: 89,
      sourceId: 4,
      title: "Performance Matters",
      link: "https://cppcast.com/performance-matters/",
      description:
        'Rob and Jason are joined by Emery Berger from the University of Massachusetts Amherst. They first discuss updates to GCC and the September ISO mailing. Then they talk to Emery Berger about Performance tooling and how improvements in Performance should be measured.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2020/09/24/new-c-features-in-gcc-10/"\u003eNew C++ features in GCC 10\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-09"\u003eSeptember C++ ISO Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2020/09/25/stdexchange-patterns-fast-safe-expressive-and-probably-underused/"\u003estd::exchange patterns: Fast, Safe, Expressive and Probably Underused\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://sephwalker.typeform.com/to/UqePuZBF"\u003einclude \u003cc++\u003e Meeting C++2020 scholarship\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dkoTf7u0v41o"\u003ePlenary: Performance Matters - Emery Berger - CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://people.cs.umass.edu/~emery/pubs/gcvsmalloc.pdf"\u003eQuantifying the Performance of Garbage Collection vs. Explicit Memory Management\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ccurtsinger/stabilizer"\u003eStabilizer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/plasma-umass/coz"\u003eCoz\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-10-01T00:00:00Z",
    },
    {
      id: 90,
      sourceId: 4,
      title: "CppCon 2020 Wrapup",
      link: "https://cppcast.com/cppcon-2020-wrapup/",
      description:
        'Rob and Jason are joined by Jon Kalb. They talk about the first on-line CppCon conference and plans for the future.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/"\u003eCppCon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLHTh1InhhwT6VxYHtoWIvOup9gz0p95Qr"\u003eCppCon 2020 YouTube Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow.org/"\u003eC++Now\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-09-23T00:00:00Z",
    },
    {
      id: 91,
      sourceId: 4,
      title: "Microsoft Announcements at CppCon 2020",
      link: "https://cppcast.com/msvc-cppcon-2020/",
      description:
        'Rob and Jason are joined by Julia Reid, Sy Brand and Augustin Popa from Microsoft. They talk about the virtual CppCon, favorite talks and the virtual conference experience. Then they talk about some of the announcements being made by the Microsoft Visual C++ team during the CppCon conference talks.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/microsoft-cpp-team-at-cppcon-2020/"\u003eMicrosoft C++ Team at CppCon 2020\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/c-in-visual-studio-code-reaches-version-1-0/"\u003eC++ in Visual Studio Code reaches version 1.0!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/vcpkg-accelerate-your-team-development-environment-with-binary-caching-and-manifests/"\u003evcpkg: Accelerate your team development environment with binary caching and manifests\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/a-multitude-of-updates-in-visual-studio-2019-version-16-8-preview-3/"\u003eA Multitude of Updates in Visual Studio 2019 version 16.8 Preview 3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/standard-c20-modules-support-with-msvc-in-visual-studio-2019-version-16-8/"\u003eStandard C++20 Modules support with MSVC in Visual Studio 2019 version 16.8\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/c-coroutines-in-visual-studio-2019-version-16-8/"\u003eC++ Coroutines in Visual Studio 2019 Version 16.8\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/debug-linux-core-dumps-in-visual-studio/"\u003eDebug Linux core dumps in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/project-onefuzz-new-open-source-developer-tool-to-find-and-fix-bugs-at-scale/"\u003eProject OneFuzz: new open source developer tool to find and fix bugs at scale\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-09-17T00:00:00Z",
    },
    {
      id: 92,
      sourceId: 4,
      title: "stdpar",
      link: "https://cppcast.com/stdpar-david-olsen/",
      description:
        'Rob and Jason are joined by David Olsen from NVIDIA. They first discuss the news from the ISO Committee that C++20 has been approved and work on C++23 will continue virtually. Then they talk with David about his work on NVIDIA\u0027s C++ compiler to run parallel algorithm code on the GPU and a proposal he\u0027s working on to introduce 16-bit floats to standard C++.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2020/09/06/c20-approved-c23-meetings-and-schedule-update/"\u003eC++20 approved, C++23 meetings and schedule update\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://stackoverflow.blog/2020/09/02/if-everyone-hates-it-why-is-oop-still-so-widely-spread/"\u003eIf everyone hates it, why is OOP still so widely spread?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/new-safety-rules-in-c-core-check/"\u003eNew safety rules in C++ Core Check\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developer.nvidia.com/blog/accelerating-standard-c-with-gpus-using-stdpar/?ncid\u003dpartn-19574#cid\u003dhpc06_partn_en-us"\u003eAccelerating Standard C++ with GPUs using stdpar\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1467r4.html"\u003eP1467R4 Extended floating-point types and standard names\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-09-10T00:00:00Z",
    },
    {
      id: 93,
      sourceId: 4,
      title: "Unit Testing",
      link: "https://cppcast.com/testing-oleg-rabaev/",
      description:
        'Rob and Jason are joined by Oleg Rabaev. They first discuss some papers from the latest ISO mailing and a new feature in Microsoft\u0027s vcperf tool. Then they talk to Oleg Rabaev about Unit Testing methodologies and why it\u0027s important to write testable code.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2020/08/2020-08-mailing-available"\u003e2020-08 mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/introducing-vcperf-timetrace-for-cpp-build-time-analysis/"\u003eIntroducing vcperf /timetrace for C++ build time analysis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/ijbaf5/question_regarding_optional_virtual_destructor_in/"\u003eQuestion regarding optional virtual destructor in C++20\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bloomberg.com/professional/blog/category/apps-programming/"\u003eBloomberg Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-09-03T00:00:00Z",
    },
    {
      id: 94,
      sourceId: 4,
      title: "Cross Platform Mobile Telephony",
      link: "https://cppcast.com/telephony-dave-hagedorn/",
      description:
        'Rob and Jason are joined by Dave Hagedorn. They first discuss a blog post from JeanHeyd Meneide on exception free containers. Then they talk to Dave Hagedorn from TextNow about his teams efforts to transition an existing iOS/Android app to using a cross platform C++ library.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/freestanding-noexcept-allocators-vector-memory-hole"\u003eHere I Stand, Free - Allocators and an Inclusive STL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/p-ranav/awesome-hpp"\u003eAwesome hpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/tuple/"\u003eStandard library development made easy with C++20\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/CppMtl/events/272792676/"\u003eC++ Montreal Meetup Some things C++ does right\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://engineering.textnow.com/"\u003eTextNow Enginering Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://engineering.textnow.com/"\u003eTextNow Careers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-08-27T00:00:00Z",
    },
    {
      id: 95,
      sourceId: 4,
      title: "STX",
      link: "https://cppcast.com/stx-basit-ayantunde/",
      description:
        'Rob and Jason are joined by Basit Ayantunde. They first discuss a blog post on plain old data types and Visual Studio\u0027s Address Sanitizer support. Then they talk to Basit about the STX library.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://mariusbancila.ro/blog/2020/08/10/no-more-plain-old-data/"\u003eNo more plain old data\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/asan-for-windows-x64-and-debug-build-support/"\u003eAddressSanitizer for Windows: x64 and Debug Build Support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetingcpp.com/meetingcpp/news/items/Meeting-Cpp-2020-programme---online-tickets-available-.html"\u003eMeeting C++ Online Tickets Available\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lamarrr/STX"\u003eSTX\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/lamarrr"\u003eBasit\u0027s Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-08-20T00:00:00Z",
    },
    {
      id: 96,
      sourceId: 4,
      title: "Modern C++ for Absolute Beginners",
      link: "https://cppcast.com/modern-cpp-absolute-beginners/",
      description:
        'Rob and Jason are joined by Slobodan Dmitroviƒá. They first discuss a new C++ compiler from NVIDIA to compile conformant C++ code to GPUs. Then they talk to Slobodan about his book: Modern C++ for Absolute Beginners.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://claremacrae.co.uk/blog/2020/07/approvaltests-training-course"\u003eApproval Tests Training Course\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developer.nvidia.com/blog/accelerating-standard-c-with-gpus-using-stdpar/"\u003eAccelerating Standard C++ with GPUs using stdpar\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/sign-up-for-the-private-preview-of-visual-studio-support-for-codespaces/"\u003eSign up for Private Preview of VS support for Codespaces\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2DMShDs"\u003eAmazon: Modern C++ for Absolute Beginners\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.apress.com/gp/book/9781484260463"\u003eApress: Modern C++ for Absolute Beginners\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-08-13T00:00:00Z",
    },
    {
      id: 97,
      sourceId: 4,
      title: "Go",
      link: "https://cppcast.com/ian-taylor-go/",
      description:
        'Rob and Jason are joined by Ian Lance Taylor from Google. They first discuss an announcement from Conan and a blog post about embedding files into C++ applications using string literals. Then they talk to Ian Lance Taylor about the Go programming language.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.conan.io/2020/07/28/Launching-Conan-2.0-Tribe.html"\u003eJoin the new Conan 2.0 Tribe\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mort.coffee/home/fast-cpp-embeds/"\u003eC++ 70x faster file embeds using string literals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Online-Cpp-User-Group-Meetings-in-August-2020.html"\u003eOnline meetups\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://golang.org/"\u003eGo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/golang/go"\u003eGo\u0027s GitHub repository\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-08-06T00:00:00Z",
    },
    {
      id: 98,
      sourceId: 4,
      title: "Visual Effects",
      link: "https://cppcast.com/josh-filstrup-vfx/",
      description:
        'Rob and Jason are joined by Josh Filstrup from Netflix. They first discuss an update to wxWidgets and a bug fix update in GCC. Then they talk to Josh about his background in Programming Languages and how he transitioned to work in the Visual Effects industry, including his current job at the studio engineering group at Netflix.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://wxwidgets.org/news/2020/07/wxwidgets-3.1.4-released/"\u003ewxWidgets 3.14 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/hwc5sc/gcc_102_released/"\u003eGCC 10.2 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw"\u003eC++ On Sea videos coming online\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://openusd.org"\u003eUSD\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://vfxplatform.com/"\u003eVFX Platform\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lwn.net/Articles/647636/"\u003eResurrecting the SuperH architecture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dROjAwpFsoIU"\u003eDCDigital - REAL Dreamcast 1080p HDMI Output\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dfHNmRkzxHWs\u0026#38;feature\u003dyoutu.be\u0026#38;t\u003d587"\u003eCppCon 2014: Chandler Carruth "Efficiency with Algorithms, Performance with Data Structures"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-07-30T00:00:00Z",
    },
    {
      id: 99,
      sourceId: 4,
      title: "TensorFlow",
      link: "https://cppcast.com/andrew-selle-tensorflow/",
      description:
        'Rob and Jason are joined by Andrew Selle from Google. They first discuss Ranges support being added to Visual Studio, and Compiler Explorer\u0027s support for using some libraries. Then they talk to Andrew Selle from Google about Machine Learning with Tensorflow and Tensorflow Lite which he was one of the initial architects for.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/initial-support-for-c20-ranges/"\u003eInitial support for Ranges in MSVC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/compiler-explorer/compiler-explorer/issues/2079"\u003eSupport for Libraries in Compiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cmake.org/cmake/help/v3.18/release/3.18.html"\u003eCmake 3.18 Release\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.tensorflow.org/"\u003eTensorFlow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tensorflow.org/about"\u003eTensorFlow users\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tensorflow.org/lite"\u003eTensorFlow on small and mobile devices\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://eigen.tuxfamily.org/index.php?title\u003dMain_Page"\u003eEigen library for linear algebra using expression templates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tensorflow.org/install/lang_c"\u003eC Bindings for TensorFlow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ai.google/responsibilities/"\u003eAI Responsibilities\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0747/"\u003ePVS-Studio is now in Compiler Explorer!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/for-students/"\u003eFree PVS-Studio for Students and Teachers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-07-23T00:00:00Z",
    },
    {
      id: 100,
      sourceId: 4,
      title: "LLVM Hacking And CPU Instruction Sets",
      link: "https://cppcast.com/bruno-cardoso/",
      description:
        'Rob and Jason are joined by Bruno Cardoso Lopes. They first discuss an update to Mesonbuild and CppCon going virtual. Then they talk about Bruno\u0027s work on Clang including clang modules and work on a pattern matching implementation.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://mesonbuild.com/Release-notes-for-0-55-0.html"\u003eMeson Release Notes 0.55\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dMagR2KY8MQI\u0026#38;feature\u003dyoutu.be"\u003eWriting an LLVM Optimization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/going-virtual/"\u003eCppCon Going Virtual\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://ieeexplore.ieee.org/document/7284075"\u003eSHRINK: Reducing the ISA complexity via instruction recycling\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ieeexplore.ieee.org/document/5336198"\u003eSPARC16: A New Compression Approach for the SPARC Architecture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1247r0.html"\u003eP1247R0 - Disabling static destructors\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-07-16T00:00:00Z",
    },
    {
      id: 101,
      sourceId: 4,
      title: "Hyperion Renderer",
      link: "https://cppcast.com/hyperion-renderer-karl-li-david-adler/",
      description:
        'Rob and Jason are joined by Yining Karl Li and David Adler from Disney Animation Studios. They first discuss C++ conformance changes in Visual Studio 2019. Then Karl and David talk about the Hyperion Renderer and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/c20-features-and-fixes-in-vs-2019-16-1-through-16-6/"\u003eC++20 Features and Fixes in VS 2019 16.1 through 16.6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/leaningtech/jsexport-cpp-in-the-browser-made-easy-710b2982046e"\u003eJSExport: C++ in the browser made easy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.magnum.graphics/announcements/2020.06/"\u003eMagnum 2020.06 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/full-schedule-nico-josuttis-keynote-and-remo-as-a-platform.html"\u003eCpp On Sea: Full schedule, Nico Josuttis Keynote and Remo as a platform\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.disneyanimation.com/technology/innovations/hyperion"\u003eDisney\u0027s Hyperion Renderer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://disney-animation.s3.amazonaws.com/uploads/production/publication_asset/70/asset/Sorted_Deferred_Shading_For_Production_Path_Tracing.pdf"\u003eSorted Deferred Shading for Production Path Tracing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://disney-animation.s3.amazonaws.com/uploads/production/publication_asset/177/asset/a.pdf"\u003eThe Design and Evolution of Disney‚Äôs Hyperion Renderer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vfxplatform.com/"\u003eVFX Reference Platform\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-07-09T00:00:00Z",
    },
    {
      id: 102,
      sourceId: 4,
      title: "SYCL 2020",
      link: "https://cppcast.com/sycl-michael-wong/",
      description:
        'Rob and Jason are joined by Michael Wong from CodePlay. They first discuss GCC 11 changing its default dialect to C++17 and polymorphic allocators. Then Michael shares an announcement of a new version of SYCL that was just released. And shares information about the multiple standards groups he is a member or chair of.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/git/?p\u003dgcc.git;a\u003dcommitdiff;h\u003d0801f419440c14f6772b28f763ad7d40f7f7a580"\u003eGCC 11: Change the default dialect to C++17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.build-bench.com/"\u003eBuild Bench\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2020/06/pmr-hacking.html"\u003ePolymorphic Allocators, std::vector Growth and Hacking\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.khronos.org/sycl/"\u003eSYCL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2000r0.pdf"\u003eP2000\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dF4GzsA00s5I"\u003eMichael Wong "Writing Safety Critical Automotive C++ Software for High Performance AI Hardware:"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d0Thv72yhxxw"\u003eCppCon 2016: Gordon Brown \u0026#38; Michael Wong "Towards Heterogeneous Programming in C++"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"https://www.viva64.com/en/b/0727/?promo\u003dcppcast"\u003e"Checking the GCC 10 Compiler with PVS-Studio"\u003c/a\u003e covering 10 heroically found errors despite the great number of macros in the GCC code.\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-07-02T00:00:00Z",
    },
    {
      id: 103,
      sourceId: 4,
      title: "Azure IoT",
      link: "https://cppcast.com/azure-iot-tara-walker/",
      description:
        'Rob and Jason are joined by Tara Walker from Microsoft. They first discuss the results of JetBrains C++ ecosystem survey and an article about bugs in Command \u0026#38; Conquer. Then Tara tells Rob and Jason all about Azure IoT, including the announcement of a new C++ SDK for embedded MCUs.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2020/06/dev-eco-cpp-2020/"\u003eThe Developer Ecosystem in 2020: How C++ is Doing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0741/"\u003eThe Code of the Command \u0026#38; Conquer Game: Bugs From the 90\u0027s. Volume one\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@vgasparyan1995/compile-time-merge-sort-c-bb0ace62cc23"\u003eCompile-time Merge Sort [C++]\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://aka.ms/embeddedcsdk"\u003eAzure SDK for Embedded C\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://azure.microsoft.com/en-us/services/iot-hub/"\u003eAzure IoT Hub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.eclipse.org/paho/"\u003ePaho\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tensorflow.org/lite/microcontrollers"\u003eTensorFlow Lite for Microcontrollers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"https://www.viva64.com/en/b/0727/?promo\u003dcppcast"\u003e"Checking the GCC 10 Compiler with PVS-Studio"\u003c/a\u003e covering 10 heroically found errors despite the great number of macros in the GCC code.\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-06-25T00:00:00Z",
    },
    {
      id: 104,
      sourceId: 4,
      title: "Modules Present and Future",
      link: "https://cppcast.com/modules-gaby-dos-reis/",
      description:
        'Rob and Jason are joined by Gabriel Dos Reis from Microsoft. They first discuss the recent articles about Microsoft switching from C++ to Rust and let Gaby set the record straight. Then Gaby talks about the final state of Modules, how Microsoft is using them internally, and Gaby\u0027s plans for the future of Modules and much more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/h7czqf/cppcast_web_assembly/fukzqy9/"\u003er/cpp comments on Web Assembly Use Cases\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thenewstack.io/microsoft-rust-is-the-industrys-best-chance-at-safe-systems-programming/"\u003eMicrosoft: Rust is the Industry\u0027s \u0027Best Chance\u0027 at Safe Systems Programming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/h0flxv/why_is_std_implementation_so_damn_ugly/"\u003eWhy is std implementation so damn ugly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLsCm1Hs016LWIjOrEftUA42ZwxsF30vZB"\u003eItalian C++ Conference 2020 Videos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dow2zV0Udd9M"\u003ePractical C++20 Modules and the future of tooling around C++ Modules with Cameron DaCamara\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dxO7JG0GarG4"\u003ePeeking Safely at a Table with Concepts with Gabriel Dos Reis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtjSuKOz5HK4"\u003eCppCon 2019: Gabriel Dos Reis "Programming with C++ Modules: Guide for the Working"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dMP6SJEBt6Ss"\u003eCPPP 2019 - C++ Modules: What You Should Know - Gabriel Dos Reis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://rustsec.org/advisories/"\u003eRustSec Advisory Database\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-06-18T00:00:00Z",
    },
    {
      id: 105,
      sourceId: 4,
      title: "Web Assembly",
      link: "https://cppcast.com/web-assembly-ben-smith/",
      description:
        'Rob and Jason are joined by Ben Smith from Google, chair of the Web Assembly working group. They first discuss a blog post on how to ask for C++ coding help, conference news and a discussion on C++ IDEs and tools. Then Ben talks to them about the current state of Web Assembly, the future and alternative uses for Web Assembly like Virtual Machines and Emulators.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://marzer.github.io/tomlplusplus/"\u003eToml++ v1.3.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gregcons.com/KateBlog/HowToAskForCCodingHelp.aspx"\u003eHow to ask for C++ coding help\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/updated-talks-and-announcing-herb-sutter-as-keynote-speaker.html"\u003eC++ On Sea Updates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/gy08ip/which_ide_do_you_use_or_if_you_prefer_text/"\u003eHuge discussion on C++ IDEs and editing tools\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://webassembly.org/"\u003eWeb Assembly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://wasmtime.dev/"\u003eWasmtime\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://wasmer.io/"\u003eWasmer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d5N4b-rU-OAA"\u003eCppCon 2019: Ben Smith "Applied WebAssembly: Compiling and Running C++ in Your Web Browser"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dr-A78RgMhZU"\u003eA Talk Near the Future of Python (a.k.a., Dave live-codes a WebAssembly Interpreter)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-06-11T00:00:00Z",
    },
    {
      id: 106,
      sourceId: 4,
      title: "Move Semantics",
      link: "https://cppcast.com/move-semantics-nico-josuttis/",
      description:
        'Rob and Jason are joined by author and ISO committee member Nico Josuttis. They first discuss a blog post on faster integer parsing and CppCon registration opening up. Then they talk to Nico about the book he is currently finishing on C++ Move Semantics and other books he\u0027s written in the past. They also discuss proposals that Nico has worked on for the ISO committee.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blacklivesmatter.com/"\u003eBlack Lives Matter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.aclu.org/"\u003eACLU\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.hiddengeniusproject.org/15-tech-organizations-actively-supporting-black-coders/"\u003e15 Tech Organizations Actively Supporting Black Coders\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.blacktechforblacklives.com/"\u003eBlack Tech for Black Lives\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kholdstare.github.io/technical/2020/05/26/faster-integer-parsing.html"\u003eFaster integer parsing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pldi20.sigplan.org/track/pldi-2020-ask-me-anything#program"\u003eBjarna AMA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/regopen2020/?mc_cid\u003d196b8c9ecf\u0026#38;mc_eid\u003d33cd130788"\u003eCppCon Registration Open\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cppmove.com/"\u003eC++ Move Semantics - The Complete Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dWRQ1xqYBKgc"\u003eCppCon 2019: Nicolai Josuttis "When C++ Style Guides Contradict"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0660r8.pdf"\u003ep0660 - Stop Tokens and a Joining Thread\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cppstdlib.com"\u003eThe C++ Standard Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.tmplbook.com"\u003eC++ Templates - The Complete Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cppstd17.com"\u003eC++17 - The Complete Guide\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://clangpowertools.com/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_campaign\u003dpromo_cppcast"\u003eClang Power Tools\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-06-04T00:00:00Z",
    },
    {
      id: 107,
      sourceId: 4,
      title: "Rider for Unreal Engine",
      link: "https://cppcast.com/rider-unreal-anastasia-kazakova/",
      description:
        'Rob and Jason are joined by Anastasia Kazakova. They first discuss news from Herb Sutter that the November ISO meeting has been postponed and a new Visual Studio preview release. Then they talk to Anastasia Kazakova from JetBrains about Rider for Unreal Engine and other updates to CLion and ReSharper for C++ as well as information about the C++ ecosystem.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcast.com/miodrag-milanovic/"\u003eMAME Emulation Project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes-preview#16.7.0-pre.1.0"\u003eVS 2019 16.7 Preview 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2020/05/20/the-new-york-iso-c-meeting-is-postponed/"\u003eNew York ISO C++ meeting is postponed\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/KindDragon/vld/wiki/Using-Visual-Leak-Detector"\u003eVisual Leak Detector\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/lp/rider-unreal/"\u003eRider for Unreal Engine\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/dotnet/2020/04/22/rider-unreal-engine-eap"\u003eBlog posts with FAQ and some details on Rider for UE\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2020/04/clion-turns-5/"\u003eCLion turns 5, birthday tale from Phil Nash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2020/02/dealing-with-makefiles/"\u003eCLion Makefiles prototype\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/company/annualreport/2019/"\u003eJetBrains turned 20, main news\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-05-28T00:00:00Z",
    },
    {
      id: 108,
      sourceId: 4,
      title: "Catch2 and std::random",
      link: "https://cppcast.com/catch2-random-martin-horenovsky/",
      description:
        'Rob and Jason are joined by Martin Ho≈ôe≈àovsk√Ω. They first discuss some ISO papers and Jason learning Rust from his cousin Jonathan. Then Martin tells them about his work maintaining Catch 2, including his plans for future updates of the unit testing library. Martin also talks about SAT solvers and problems with std::random.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-05"\u003e2020-05 Standards mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dEzQ7YIIo1rY"\u003eJonathan Teach Jason Rust!\u003c/a\u003e)\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/fidita/c_events_affected_by_coronavirus/"\u003eC++ Events affected by Coronavirus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/catchorg/Catch2"\u003eCatch2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dOZq11vRGCNw"\u003eCppCon 2019: Martin Ho≈ôe≈àovsk√Ω "Solve Hard Problems Quickly Using SAT Solvers"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2058r0.pdf"\u003eP2058 Make std::random_device Less Inscrutable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2059r0.pdf"\u003eP2059 Make Pseudo-random Numbers Portable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2060r0.pdf"\u003eP2060 Make Random Number Engines Seedable\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRead the article \u003ca href\u003d"https://www.viva64.com/en/b/0727/?promo\u003dcppcast"\u003e"Checking the GCC 10 Compiler with PVS-Studio"\u003c/a\u003e covering 10 heroically found errors despite the great number of macros in the GCC code.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-05-21T00:00:00Z",
    },
    {
      id: 109,
      sourceId: 4,
      title: "Physical Units",
      link: "https://cppcast.com/physical-units-mateusz-pusz/",
      description:
        'Rob and Jason are joined by Mateusz Pusz. They first discuss the 10.1 update of GCC and an article from Raymond Chen. Then they talk to Mateusz about his physical units library and his efforts to get physical units into the standard.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.swedencpp.se/worldwide"\u003eWorldwide C++ user groups events\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://teamup.com/kserbups66uis3d8j6"\u003eC++ Community events\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/pipermail/gcc/2020-May/232334.html"\u003eGCC 10.1 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/oldnewthing/20200508-52/?p\u003d103735"\u003eThe C++ preprocessor doesn\u0027t understand anything about C++, and certainly not templates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mpusz/units"\u003emp-units\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d0YW6yxkdhlU"\u003eA C++ Approach to Physical Units (CppCon talk)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://wg21.link/p1935"\u003eP1935: A C++ Approach to Physical Units\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://train-it.eu/trainings/cpp/9-advanced-modern-cpp"\u003eAdvanced Modern C++ Training\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/training/trainingslisting.php?tid\u003d4"\u003eMeeting C++ Trainings\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRead the article \u003ca href\u003d"https://www.viva64.com/en/b/0727/?promo\u003dcppcast"\u003e"Checking the GCC 10 Compiler with PVS-Studio"\u003c/a\u003e covering 10 heroically found errors despite the great number of macros in the GCC code.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-05-14T00:00:00Z",
    },
    {
      id: 110,
      sourceId: 4,
      title: "MSVC\u0027s STL and vcpkg",
      link: "https://cppcast.com/msvc-stl-vcpkg-billy-oneal/",
      description:
        'Rob and Jason are joined by Billy O\u0027Neal from Microsoft. They first discuss some news from various conferences and user groups that are going online. Then they talk to Billy O\u0027Neal from Microsoft\u0027s Visual C++ team. He tells them how he joined the team and some of the projects he\u0027s worked on, including some recent work on vcpkg.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dKqo-jIq4V3I"\u003eModules the beginner\u0027s guide - Daniela Engert - Meeting C++ 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/ga8yhs/c_london_goes_online/"\u003eC++ London goes online\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/gaqdxq/were_welcoming_you_to_corecpp/"\u003eWe\u0027re welcoming you to CoreCpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/cpp-on-sea-online.html"\u003eC++ On Sea On Line\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/qarmin/Instrukcje-i-Tutoriale/blob/master/AnalizatoryCC%2B%2BENG.md#useful-tools-for-checking-and-fixing-cc-code-and-others-languages-too"\u003eUseful tools for checking and fixing C/C++ code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.envoyproxy.io/"\u003eEnvoy Proxy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/microsoft/STL/wiki/Changelog"\u003eMicrosoft STL Changelog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/vcpkg-2020-04-update-and-product-roadmap/"\u003eVcpkg 2020.04 Update and Product Roadmap\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Microsoft/binskim"\u003ebinskim\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRead the article \u003ca href\u003d"https://www.viva64.com/en/b/0727/?promo\u003dcppcast"\u003e"Checking the GCC 10 Compiler with PVS-Studio"\u003c/a\u003e covering 10 heroically found errors despite the great number of macros in the GCC code.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-05-07T00:00:00Z",
    },
    {
      id: 111,
      sourceId: 4,
      title: "Envoy Proxy",
      link: "https://cppcast.com/matt-klein-envoy/",
      description:
        'Rob and Jason are joined by Matt Klein from Lyft. They first discuss an update to Microsoft\u0027s Guidelines Support Library with changes to span. Then they talk to Matt Klein who dicusses Envoy Proxy and how it\u0027s used in Cloud Native applications.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/richgel999/status/1254287736535646209"\u003eTweet re: SPMD Lambdas\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cppcon-2020-call-for-submissions/"\u003eCppCon 2020 Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/gsl-3-0-0-release/"\u003eGSL 3.0.0 Release\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.envoyproxy.io/"\u003eEnvoy Proxy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/envoyproxy/envoy"\u003eEnvoy Proxy on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRead the article \u003ca href\u003d"https://www.viva64.com/en/b/0727/?promo\u003dcppcast"\u003e"Checking the GCC 10 Compiler with PVS-Studio"\u003c/a\u003e covering 10 heroically found errors despite the great number of macros in the GCC code.\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-04-30T00:00:00Z",
    },
    {
      id: 112,
      sourceId: 4,
      title: "Postmodern C++ Revisited",
      link: "https://cppcast.com/postmodern-cpp-revisted/",
      description:
        'Rob and Jason are joined by Tony Van Eerd. They first discuss some conference news, including Microsoft\u0027s upcoming Pure Virtual C++ Conference. Then Tony Van Eerd joins them to discuss his Postmodern C++ talk, and some of his work on the C++ standards committee.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/sign-up-for-pure-virtual-c-conference-2020/"\u003eSign up for Pure Virtual C++ Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/TheLartians/ModernCppStarter"\u003eModernCppStarter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Announcing-Meeting-Cpp-2020-.html"\u003eAnnouncing Meeting C++ 2020!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dZx_Tjp9WIII"\u003eTony van Eerd: Postmodern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1085r0.md"\u003ep1085R0 Should Span be Regular?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003eUse code JetBrainsForCppCast during checkout at \u003ca href\u003d"http://www.jetbrains.com/"\u003eJetBrains.com\u003c/a\u003e for a 25% discount\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-04-23T00:00:00Z",
    },
    {
      id: 113,
      sourceId: 4,
      title: "Rosetta",
      link: "https://cppcast.com/rosetta-andrew-jack/",
      description:
        'Rob and Jason are joined by Andrew Leaver-Fay from UNC and Jack Maguire from Menten AI. They first discuss a proposal to update both C and C++ and create a unified common core for the languages. Then they talk to Andrew and Jack about Rosetta, a C++ protein modeling library, it\u0027s history being ported from Fortran and some of its use cases such as creating HIV vaccines.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg14/www/docs/n2494.pdf"\u003eC2x Proposal: A Common C/C++ Core\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2020/04/live-webinar-clion-ama/"\u003eClion AMA Session on May 7\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2020/04/third-annual-cpp-foundation-developer-survey-lite"\u003eThird Annual C++ Foundation Developer Survey "Lite"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.rosettacommons.org/software"\u003eRosetta Commons - Software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://menten.ai/"\u003eMenten AI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.biorxiv.org/content/10.1101/752485v1"\u003eDesigning Peptides on a Quantum Computer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://boinc.bakerlab.org/"\u003eRosetta@home\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://fold.it/"\u003efold.it\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-04-16T00:00:00Z",
    },
    {
      id: 114,
      sourceId: 4,
      title: "Making Nu Languages",
      link: "https://cppcast.com/nu-programming-languages-jonathan-turner/",
      description:
        'Rob and Jason are joined by Jonathan Turner. They first discuss updates to {fmt} and SourceTrail. Then they talk to Jonathan Turner about some of the languages he\u0027s worked on; including Chaiscript with Jason, Typescript at Microsoft and Rust at Mozilla. They then talk about his current project: NuShell.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtozuzV5YZ7U"\u003eStopping A Laser Beam in Mid-Air\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d8YONOexk0Ek"\u003eStopping a laser beam in mid-air with Tom Scott (BTS)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/fmtlib/fmt/releases/tag/6.2.0"\u003e{fmt} 6.2 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sourcetrail.com/blog/release_2020_1/"\u003eSourcetrail 2020.1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2020/03/31/asterisk-and-ampersand/"\u003eWhen is *x also \u0026#38;x\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.nushell.sh/"\u003eNushell\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.typescriptlang.org/"\u003eTypescript\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.rust-lang.org/"\u003eRust\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003ds87cTnmfM0k"\u003eGrowing TypeScript and Rust\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-04-09T00:00:00Z",
    },
    {
      id: 115,
      sourceId: 4,
      title: "Intro to Modules",
      link: "https://cppcast.com/daniela-engert-intro-modules/",
      description:
        'Rob and Jason are joined by Daniela Engert. They first discuss a blog post on a new static analyzer feature in GCC 10 and Jason\u0027s plans to port the classic DOOM game to C++. Then Daniela gives Jason and Rob an introduction to Modules in C++20.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2020/03/26/static-analysis-in-gcc-10/"\u003eStatic analysis in GCC 10\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.icce.rug.nl/documents/cplusplus/"\u003eC++ Annotations v11.4.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus/status/1243942956022632448"\u003eJason\u0027s live Doom port to C++ Friday morning\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/slides/2019/modules-the-beginners-guide-meetingcpp2019.pdf"\u003eModules: The Beginner\u0027s Guide Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAz-hi8tKLGY"\u003eSocializing with {fmt} - Daniela Engert - Meeting C++ 2018\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-04-02T00:00:00Z",
    },
    {
      id: 116,
      sourceId: 4,
      title: "C++ Build Insights",
      link: "https://cppcast.com/cpp-build-insights/",
      description:
        'Rob and Jason are joined by Kevin Cadieux and Sy Brand. They first discuss a blog post on Memory Access Patterns and the Clang 10 release. Then they talk about C++ Build Insights, Kevin tells us how vcperf can be used to find places where build performance can be improved in your code. Sy then goes over some of the other recent updates to Visual Studio and Visual Studio Code.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2014/05/vector-of-objects-vs-vector-of-pointers.html"\u003eVector of Objects vs Vector of Pointers and Memory Access Patterns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-03"\u003ePost-Prague Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/fodkif/llvmclang_1000_is_released/"\u003eClang 10.0.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://aka.ms/vs_cppcast"\u003eDownload Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/introducing-c-build-insights/"\u003eIntroducing C++ Build Insights\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/analyze-your-builds-programmatically-with-the-c-build-insights-sdk/"\u003eAnalyze your builds programmatically with the C++ Build Insights SDK\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developercommunity.visualstudio.com/idea/810960/have-full-integration-of-build-insights-within-vis.html"\u003eHave full integration of Build Insights within Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-03-26T00:00:00Z",
    },
    {
      id: 117,
      sourceId: 4,
      title: "Meson and the Meson Manual",
      link: "https://cppcast.com/jussi-pakkanen-meson-manual/",
      description:
        'Rob and Jason are joined by Jussi Pakkanen. They first discuss the ongoing effects that the Corona Virus is having on the C++ Community. Then they talk to Jussi Pakkanen who gives them an update on what\u0027s changed in Mesonbuild since he was first on show 201 episodes earlier. Jussi also shares some info about the Meson Manual which is available as an e-book.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/fidita/c_events_affected_by_coronavirus/"\u003eC++ Events affected by Corona Virus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mbasso/asm-dom"\u003easm-dom\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://codingtidbit.com/2020/03/15/deleaker-review/"\u003eDeleaker review\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://mesonbuild.com/"\u003eThe Meson Build System\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meson-manual.com/"\u003eThe Meson Manual\u003c/a\u003e use coupon code: cppcast2020\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003diLN6wL7ExHU"\u003e"Behind (and under) the scenes of the Meson build system" - Jussi Pakkanen (LCA 2020)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-03-19T00:00:00Z",
    },
    {
      id: 118,
      sourceId: 4,
      title: "PVS-Studio Static Analysis",
      link: "https://cppcast.com/yuri-minaev-static-analysis/",
      description:
        'Rob and Jason are joined by Yuri Minaev from PVS-Studio. They first discuss a blog posts on ISO\u0027s recent decision not to break the C++ ABI in C++23 and getting rid of volatile in the Qt codebase. Then they talk to Yuri Minaev, one of the developers at PVS Studio working on the static analyzer. They discuss some of the forms of analysis that the tool excels at and how it\u0027s changed the way Yuri programs.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/maxk-org/hogl"\u003eHOly Grail of Logging\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/abi/"\u003eThe Day the Standard Library Died\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/the-performance-benefits-of-final-classes/?WT.mc_id\u003dsocial-reddit-marouill"\u003eThe Performance Benefits of Final Classes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kdab.com/getting-rid-of-volatile-in-some-of-qt/"\u003eGetting rid of \u0027volatile\u0027 in (some of) Qt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/a/yuri-minaev/"\u003eYuri Minaev Blog Posts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-03-12T00:00:00Z",
    },
    {
      id: 119,
      sourceId: 4,
      title: "Packs and Pipelines",
      link: "https://cppcast.com/barry-revzin-packs-pipelines/",
      description:
        'Rob and Jason are joined by Barry Revzin. They first discuss a blog post about how to declare a class\u0027s data members and methods. They then discuss some of his contributions to C++20 including some necessary fixes to spaceship operator, and some proposals he is working on for C++23 including pack declaration and a new pipe operator.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/blog/20200212-tcmalloc"\u003eAnnouncing TCMalloc\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://howardhinnant.github.io/classdecl.html"\u003eHow I Declare my class and why\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/odygrd/quill"\u003eQuill Asynchronous Low Latency Logging Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://slashslash.info/2020/02/are-you-ready-for-cnow/"\u003eAre you ready for C++Now?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1061r1.html"\u003eP1061R1 Structured Bindings can introduce a Pack\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1185r2.html"\u003eP1185R2 \u0026#60;\u003d\u0026#62; !\u003d \u003d\u003d\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1858r1.html"\u003eP1858R1 Generalized pack declaration and usage\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2011r0.html"\u003eP2011R0 A pipeline-rewrite operator\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-03-05T00:00:00Z",
    },
    {
      id: 120,
      sourceId: 4,
      title: "Maintaining QtCore",
      link: "https://cppcast.com/thiago-macieira-qtcore/",
      description:
        'Rob and Jason are joined by Thiago Macieira from Intel. They first talk about Visual Studio\u0027s Qt support, and articles from Bjarne Stroustrup and Herb Sutter. They then talk about Thiago\u0027s history with Qt, including his former role as Qt Release Manager and his contributions to QtCore, QtNetwork and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qa-systems.com/academy/"\u003eJason\u0027s C++ Training Courses in Stuttgart\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://fuchsia.googlesource.com/fuchsia/+/refs/heads/master/docs/project/policy/programming_languages.md#Languages-C-2"\u003eFuchsia Programming Language Policy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/qt-to-support-visual-studio-linux-projects/?WT.mc_id\u003dsocial-reddit-marouill"\u003eQt to support Visual Studio Linux projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2020/02/bjarne-stroustrup-on-cpp20s-significance"\u003eBjarne Stroustrup on C++20\u0027s significance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2020/02/17/move-simply/"\u003eMove, simply\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://wiki.qt.io/New_Features_in_Qt_5.15"\u003eNew Features in Qt 5.15\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://clearlinux.org/"\u003eClear Linux Project\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-02-27T00:00:00Z",
    },
    {
      id: 121,
      sourceId: 4,
      title: "Prague Trip Report",
      link: "https://cppcast.com/hana-dusikova-prague-trip-report/",
      description:
        'Rob and Jason are joined by Hana Dusikova from Avast. They talk about the final changes that went into the C++20 draft which should become the official new standard in 3 or 4 months. They also discuss the direction of C++23 and some of the papers that were proposed in Prague.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAvPiGstxV_g\u0026#38;feature\u003demb_logo"\u003eC++20 is here!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/f47x4o/202002_prague_iso_c_committee_trip_report_c20_is/"\u003e2020-02 Prague ISO C++ Committee Trip Report ‚Äî üéâ C++20 is Done!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0592r4.html"\u003eTo boldly suggest an overall plan for C++23\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1863r0.pdf"\u003eABI - Now or Never\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1881r1.html"\u003eEpochs: a backward-compatible language evolution mechanism\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p1040r5.html"\u003estd::embed\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003ePVS-Studio.\u003c/a\u003e Write #cppcast in the message field on the download page and get one month license\u003c/li\u003e\n\u003cli\u003eRead the article \u003ca href\u003d"http://bit.ly/2STw7D9"\u003e"Zero, one, two, Freddy\u0027s coming for you"\u003c/a\u003e about a typical pattern of typos related to the usage of numbers 0, 1, 2\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-02-21T00:00:00Z",
    },
    {
      id: 122,
      sourceId: 4,
      title: "C++ on a Watch",
      link: "https://cppcast.com/brad-larson-cpp-watch/",
      description:
        'Brad started programming in BASIC when he was 9, primarily on the Apple IIe, transitioning to QBASIC in high school.  He graduated from Kansas State University in 2005 with a BS in Computer Science and a minor in Embedded Systems.  While at K-State he enjoyed working on the solar car racing team, which built and raced a vehicle across the US and Canada. After graduating in 2005, Brad started work at Garmin, where he has worked on a variety of projects including Palm PDAs, Brew phone platforms, Android, iOS, and Automotive devices.  He currently leads a team focused on bike computers and fitness watches.  In his free time Brad enjoys working on home improvement projects, spending time with his wife and their 5 kids, and hobby programming.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://surveys.jetbrains.com/s3/a18-developer-ecosystem-survey-2020"\u003eDeveloper Ecosystem Survey\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2020/02/prague.html"\u003eFive Awesome C++ Papers for the Prague ISO Meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/speakers/"\u003eCore C++ Announcement\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developer.garmin.com/connect-iq/"\u003eGarmin Connect IQ SDK\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-02-13T00:00:00Z",
    },
    {
      id: 123,
      sourceId: 4,
      title: "Large Scale C++",
      link: "https://cppcast.com/john-lakos-large-scale-cpp/",
      description:
        'Rob and Jason are joined by author John Lakos. They first talk about a funny C++ themed freestyle rap video commissioned by Victor Zverovich and a C++20 reference card produced by Bartlomiej Filipek. Then John discusses his new book, Large Scale C++ Volume I: Process and Architecture. In addition to discussing the book John shares some of his thoughts on allocators, modules, move semantics and contracts.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qa-systems.de/akademie/"\u003eJason\u0027s C++ Training Courses in Stuttgart\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/ewsgg4/a_freestyle_rap_from_the_british_comedian_chris/"\u003eFreestyle C++ Rap  for the next meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/evobp3/c20_reference_card_examples/"\u003eC++20 Reference card\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/380Pikv"\u003eLarge-Scale C++ Volume I: Process and Architecture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003debn1C-mTFVk"\u003eCppCon 2019: John Lakos "Value Proposition: Allocator-Aware (AA) Software"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003ddDR93TfacHc"\u003eC++Now 2019: John Lakos "Value Proposition: Allocator-Aware (AA) Software"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dK_fTl_hIEGY"\u003eCppCon 2018: John Lakos "C++ Modules and Large-Scale Development"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dko6uyw0C8r0"\u003eLocal (Arena) Memory Allocators Part 1 - John Lakos - Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dfN7nVzbRiEk"\u003eLocal (Arena) Allocators Part II - John Lakos - Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dRLezJuqNcEQ"\u003eCppCon 2019: Alisdair Meredith, Pablo Halpern "Getting Allocators out of Our Way"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmmyIZzqh5ls"\u003eCppCon 2019: Joshua Berne "Contract use: Past, Present, and Future"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dKFJ5p-T-S7Q"\u003eCppCon 2019: Rostislav Khlebnikov "Avoid Misuse of Contracts!"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-02-06T00:00:00Z",
    },
    {
      id: 124,
      sourceId: 4,
      title: "WxWidgets",
      link: "https://cppcast.com/vadim-zeitlin-wxwidgets/",
      description:
        'Rob and Jason are joined by Vadim Zeitlin one of the maintainers of WxWidgets. They first talk about a blog post describing a fantastic bug and another responding to the changes announced by Qt. Then Vadim tells them about how he got involved contributing to WxWidgets, the cross platform C++ GUI library.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/tanker-blog/fantastic-bugs-and-where-to-find-them-3c95afe06357"\u003eFantastic Bugs and Where to Find Them\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/c-modules-conformance-improvements-with-msvc-in-visual-studio-2019-16-5/"\u003eC++ Modules conformance improvements with MSVC in VS 2019 16.5\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/esamj3/concepts_merged_to_clang_trunk/"\u003eConcepts merged to clang trunk\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://valdyas.org/fading/software/about-qt-offering-changes-2020/"\u003eAbout Qt Offering Changes 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.wxwidgets.org/"\u003eWxWidgets\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/wxWidgets"\u003eWxWidgets on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-01-30T00:00:00Z",
    },
    {
      id: 125,
      sourceId: 4,
      title: "Circle",
      link: "https://cppcast.com/circle-language/",
      description:
        'Rob and Jason are joined by Sean Baxter. They first talk about a blog post and some papers headed for the upcoming ISO meeting in Prague. Then they discuss Circle, the compiler and language extension for C++17.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://travisdowns.github.io/blog/2020/01/20/zero.html"\u003eThe Hunt for the Fastest Zero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2005r0.html"\u003e2D Graphics: A Brief Review\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/#mailing2020-01"\u003eC++ Standards Committee Papers pre-Prague mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.circle-lang.org/"\u003eCircle\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/seanbaxter/circle"\u003eCircle on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2020/p2062r0.pdf"\u003eP2062 The Circle Meta-model\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-01-23T00:00:00Z",
    },
    {
      id: 126,
      sourceId: 4,
      title: "Conference Organizing",
      link: "https://cppcast.com/cpp-conference-organizing/",
      description:
        'Rob and Jason are joined by Phil Nash, Adi Shavit and Fred Tingaud. They talk with the three meetup and conference organizers about their motivations for launching new C++ conferences last year and discuss some of the work involved in doing so.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dY1o4rc9P1FQ\u0026#38;feature\u003dyoutu.be"\u003eCppCon 2019: Saar Raz "How to Implement Your First Compiler Feature: The Story of Concepts in Clang"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.conan.io/2020/01/13/New-Conan-Center-Improves-Search-Discovery.html"\u003eThe New ConanCenter Improves Search and Discovery\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/c-inliner-improvements-the-zipliner/"\u003eC++ Inliner Improvements: The Zipliner\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/survey"\u003eMeeting C++ Community Survey\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/"\u003eC++ on Sea\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++ Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppp.fr/"\u003eCPPP 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-01-16T00:00:00Z",
    },
    {
      id: 127,
      sourceId: 4,
      title: "Clang Hacking",
      link: "https://cppcast.com/saar-raz-clang-hacking/",
      description:
        'Rob and Jason are joined by Saar Raz. They first discuss blog posts covering a new project management tool for C++ and another about improving Clang support for large integer arrays. Then they talk to Saar Raz about his work to add Concepts support to the Clang compiler.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://vector-of-bool.github.io/2020/01/06/new-decade.html"\u003eA new decade a new tool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/arrays/"\u003eWaiting for std::embed: Very large arrays in clang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cppmove.com/"\u003eC++ Move Semantics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++: May 26-27, 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/saarraz/clang-concepts-monorepo/"\u003eClang Concepts Repo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://concepts.godbolt.org/"\u003eCompiler Explorer with Clang Concepts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/Hack-Tell-Boston/"\u003eHack \u0026#38;\u0026#38; Tell Boston\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dqawSiMIXtE4"\u003eCppCon 2019: Saar Raz "C++20 Concepts: A Day in the Life"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dY1o4rc9P1FQ"\u003eCppCon 2019: Saar Raz "How to Implement Your First Compiler Feature: The Story of Concepts in Clang"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-01-09T00:00:00Z",
    },
    {
      id: 128,
      sourceId: 4,
      title: "C++ 2020 News",
      link: "https://cppcast.com/cpp-2020-news/",
      description:
        'Rob and Jason discuss C++ news and the new year after the Holiday season.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.parasoft.com/misra-autosar-merger"\u003eThe Merger of MISRA C++ and AUTOSAR C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.pythonsheets.com/appendix/python-gdb.html"\u003ePython Interpreter in GNU Debugger\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2019/12/27/template-typename-fun/"\u003eHoliday fun with template\u003cclass\u003e and template\u003ctypename\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/p-ranav/tabulate"\u003eTabulate\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLRyNF2Y6sca27wjBvjc5yg3F1QqZgazKb"\u003eMeeting C++ 2019 Talks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://eventos.uc3m.es/40350/section/22663/using-std_cpp-2020.html"\u003eUsing std::cpp call for papers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppconf-moscow.ru/en/callforpapers/"\u003eC++ Russia call for proposals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2019/12/2020-CfS/"\u003eC++Now call for proposals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.google.com/forms/d/e/1FAIpQLSeyDk8Hf7Q-cQ9KvDVtBR-hxZNSGgK0OvexRm-yoxQAF9bheA/viewform"\u003eCore Hard call for proposals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qt.io/blog/qt-world-summit-2020-announced-save-the-date"\u003eQt World Summit call\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppp.fr/cfp/"\u003eCPPP all for papers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLs3KjaCtOwSY_Awyliwm-fRjEOa-SRbs-"\u003eC++Weekly ep 200, Christmas Class 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2020-01-02T00:00:00Z",
    },
    {
      id: 129,
      sourceId: 4,
      title: "OpenVDB",
      link: "https://cppcast.com/ken-museth-openvdb/",
      description:
        'Rob and Jason are joined by Ken Museth the CEO of Voxel Tech. They first discuss a blog post about std::embed and the new version of Qt that was just released. Then they talk to Ken Museth about OpenVDB a C++ library for working with volumetric data used in Visual Effects, Scientific Simulations and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/full-circle-embed"\u003eGoing Full Circle on Embed in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qt.io/blog/qt-5.14-has-released"\u003eQt 5.14 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2019/12/2020-call-for-student-volunteers/"\u003eC++Now 2020 Accepting Student/Volunteer Applications\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.openvdb.org/"\u003eOpenVDB\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/AcademySoftwareFoundation/openvdb"\u003eOpenVDB\u0027s GitHub Repository\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d5FwOc4OSOR0"\u003e2014 Sci-Tech Awards: Ken Museth, Peter Cucka and Mihai Ald√©n\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-12-19T00:00:00Z",
    },
    {
      id: 130,
      sourceId: 4,
      title: "Difficult Bugs",
      link: "https://cppcast.com/satabdi-das/",
      description:
        'Rob and Jason are joined by Satabdi Das. They first discuss a new Visual Studio update and an article written by Bjarne Stroustrup. Then Satabdi talks about debugging and why it\u0027s beneficial to write or give conference talks on difficult to fix bugs, she also talks about her work on a hardware emulator and static analyzers.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.microsoft.com/en-us/visualstudio/releases/2019/release-notes"\u003eVisual Studio 2019 16.4.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1962r0.pdf"\u003eHow can you be so certain? Bjarne Stroustrup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/p-ranav/indicators"\u003eIndicators: Activity Indicators for Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003djTTf_sUUhaQ"\u003eCppCon 2019: Satabdi Das "A Series of Unfortunate Bugs"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://majantali.net/2018/10/debugging-long-programs/"\u003eHow to debug long running programs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/Hack-Tell-Boston/"\u003eHack \u0026#38;\u0026#38; Tell Boston\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.recurse.com/"\u003eThe Recurse Center\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-12-12T00:00:00Z",
    },
    {
      id: 131,
      sourceId: 4,
      title: "Cache Friendliness",
      link: "https://cppcast.com/bjorn-fahller-cache-friendliness/",
      description:
        'Rob and Jason are joined by Bj√∂rn Fahller. They first discuss articles on the C++ ABI and a blog post on performance analysis. Then Bj√∂rn talks about cache friendliness, C++ contracts and type safety.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/cpp20-and-resharper-cpp/"\u003eC++20 and ReSharper C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://travisdowns.github.io/blog/2019/11/19/toupper.html"\u003eClang-format tanks performance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://nibblestew.blogspot.com/2019/11/some-intricacies-of-abi-stability.html"\u003eSome intricacies of ABI stability\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dDzk1frUXq10"\u003eProgramming with Contracts in C++20 - Bj√∂rn Fahller [C++ on Sea 2019]\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dSWHvNvY-PHw"\u003eType safe C++ ‚Äì LOL! :-) - Bjorn Fahller [ACCU 2018]\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-12-04T00:00:00Z",
    },
    {
      id: 132,
      sourceId: 4,
      title: "The C++ ABI",
      link: "https://cppcast.com/titus-winters-abi/",
      description:
        'Rob and Jason are joined by Titus Winters from Google. They first discuss some news of C++ tools, including Sourcetrail going open source and C++ Build Insights for Visual Studio. Then Titus goes into what the C++ ABI is, what breaking the ABI means, and whether or not we should consider breaking the ABI in future versions of C++. Titus also shares some a preview of his upcoming book \u0027Software Engineering at Google.\u0027\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/Pittsburgh-C-Meetup-Group/"\u003ePittsburgh C++ Meetup Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sourcetrail.com/blog/open_source/"\u003eSourcetrail is now free and open source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/11/perfguidecpu.html"\u003eGuide to Performance Analysis and Tuning\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/introducing-c-build-insights/"\u003eIntroducing C++ Build Insights\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1863r0.pdf"\u003eABI Now or Never\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/345qeqJ"\u003eSoftware Engineering at Google: Lessons Learned from Programming Over Time\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dv_yzLe-wnfk"\u003eCppCon 2019: Titus Winters "Maintainability and Refactoring Impact of Higher-Level Design Features"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dLJh5QCV4wDg"\u003eCppCon 2019: Chandler Carruth, Titus Winters "What is C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.hyrumslaw.com/"\u003eHyrum\u0027s Law\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hello.backtrace.io/sw-crash-management-for-embedded-devices-12/5/2019?utm_campaign\u003dIoT%2FEmbedded%20Devices%20-%20Webinar%20-%20SW%20Crash%2012%2F5%2F2019%20-%20CPP%20Cast\u0026#38;utm_source\u003dCPPCast"\u003eSoftware Crash Management for Embedded Devices and IOT Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-11-21T00:00:00Z",
    },
    {
      id: 133,
      sourceId: 4,
      title: "Belfast Trip Report",
      link: "https://cppcast.com/timur-doumler-belfast/",
      description:
        'Rob and Jason are joined by Timur Doumler. They discuss some of the news that occurred at the C++ ISO meeting in Belfast where the committee responded to some of the National Body comments on the C++20 draft. Timur also goes over some of his proposals and the progress on adding an Audio API to C++.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/cppmaryland/"\u003eMaryland C++ User Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/dtuov8/201911_belfast_iso_c_committee_trip_report/?st\u003dk2uhkz6y\u0026#38;sh\u003d25cc3c0e"\u003e2019-11 Belfast ISO C++ Committee Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0593r2.html"\u003ep0593r2 - Implicit creation of objects for low-level object manipulation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2019/11/09/trip-report-autumn-iso-c-standards-meeting-belfast/"\u003eTrip Report: Autumn ISO C++ standards meeting (Belfast)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d_qzMpk-22cc"\u003eCppCon 2019: Timur Doumler "Type punning in modern C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d2jJumNzcp6Y"\u003eTimur Doumler ‚Äî Initialisation in modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtsG95Y-C14k"\u003eCppCon 2018: Timur Doumler "Can I has grammar?"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1386r2.pdf"\u003ep1386 - A Standard Audio API for C++:Motivation, Scope, and Basic Design\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1774r1.pdf"\u003ep1774 - Portable optimisation hints\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1912r0.pdf"\u003ep1912 Interconvertible object representations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-11-14T00:00:00Z",
    },
    {
      id: 134,
      sourceId: 4,
      title: "CRTP and Israel joining the C++ ISO",
      link: "https://cppcast.com/inbal-levi/",
      description:
        'Rob and Jason are joined by Inbal Levi. They first discuss some news including a new C++20 unit testing framework and Microsoft bringing ASAN to Visual Studio. Then Inbal talks about the Curiously Recurring Template Pattern and her efforts to start an Israel National Body for the C++ ISO Committee.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://lemire.me/blog/2019/09/28/doubling-the-speed-of-stduniform_int_distribution-in-the-gnu-c-library/"\u003eDoubling the speed of std::uniform_int_distribution in the GNU C++ library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lemire.me/blog/2019/10/16/benchmarking-is-hard-processors-learn-to-predict-branches/"\u003eBenchmarking is hard: processors learn to predict branches\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/boost-experimental/ut"\u003eBoost.UT C++20 macro-free Unit Testing Framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/thebigfour"\u003eC++20 The Big Four\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/addresssanitizer-asan-for-windows-with-msvc/"\u003eASAN for Windows with MSVC\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003djBnIMEb2GhA"\u003eCppCon 2019: Inbal Levi "Back to Basics: Virtual Dispatch and its Alternatives"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++ 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-11-07T00:00:00Z",
    },
    {
      id: 135,
      sourceId: 4,
      title: "Unicode for C++23",
      link: "https://cppcast.com/jeanheyd-meneide-unicode/",
      description:
        'Rob and Jason are joined by JeanHeyd Meneide. They first discuss an ISO paper about the pros and cons of introducing ABI breaking changes into the C++ standard. Then JeanHeyd talks about the talk he gave at CppCon and his efforts to get unicode support into C++23. JeanHeyd also gives an update on his std::embed proposal.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1863r0.pdf"\u003eABI Now or Never\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vector-of-bool.github.io/2019/10/21/rngs-static-ovr.html"\u003eEliminating the Static Overhead of Ranges\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://itnext.io/the-case-for-c-4122a5b47130"\u003eThe Case for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cfp.cpponsea.uk/"\u003eC++ On Sea CFP\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dBdUipluIf1E\u0026#38;"\u003eCppCon 2019: JeanHeyd Meneide "Catch ‚¨ÜÔ∏è: Unicode for C++23"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/portfolio/text"\u003eText for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ThePhD/embed"\u003eEmbed (Library)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://godbolt.org/z/PPAWM0"\u003eEmbed on Godbolt\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/support/"\u003eSupport (Patreon/GitHub Sponsors)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eWrite the hashtag #cppcast when requesting the license here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0671/"\u003eOne Day from PVS-Studio User Support\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-10-31T00:00:00Z",
    },
    {
      id: 136,
      sourceId: 4,
      title: "Becoming involved with the C++ committee",
      link: "https://cppcast.com/nevin-liber/",
      description:
        'Rob and Jason are joined by Nevin Liber from Argonne National Lab. They first discuss a blog post discussing issues implementing small buffer optimizations in a constexpr context. Then they talk with Nevin about how he got involved with the ISO C++ committee and some of the proposals he\u0027s worked on.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/small-bit-vector"\u003ePack the Bits - Adventures in small_bit_vector\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/#mailing2019-10"\u003eISO 2019-10 Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/lp/paymentchanges"\u003eMeetup: Payment changes comings soon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/registration/"\u003eC++ On Sea Registration\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.anl.gov/"\u003eArgonne National Lab\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-10-24T00:00:00Z",
    },
    {
      id: 137,
      sourceId: 4,
      title: "Election Security",
      link: "https://cppcast.com/patricia-aas-election-security/",
      description:
        'Rob and Jason are joined by Patricia Aas from TurtleSec. They first discuss blog posts on module linkage and Visual Studio integration of clang tidy. Patricia then talks about her recent efforts to highlight the work of female engineer role models. Lastly they discuss Patricia\u0027s efforts to improve election security in her own country and the concept of software independence with election software.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003devV1brjMuH8"\u003eNDC TechTown 2019 Keynote: Elections: Trust and Critical Infrastructure - Patricia Aas\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://turtlesec.no/"\u003eTurtleSec\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://techwomen.no/"\u003eTech Women Norway\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/OsloCpp"\u003eOslo C++ Users Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://discordapp.com/invite/ZPErMGW"\u003e#include\u003cC++\u003e discord\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-10-17T00:00:00Z",
    },
    {
      id: 138,
      sourceId: 4,
      title: "Commodore 64 and Tilt Five AR",
      link: "https://cppcast.com/jeri-ellsworth-tiltfive/",
      description:
        'Rob and Jason are joined by Jeri Ellsworth the CEO of Tilt Five. Jeri and Jason first geek out about the Commodore 64 with Jeri telling her story of building the C64 Direct-to-TV. Then she tells us about her new companies product the Tilt Five AR headset which is built with the tabletop gamer in mind and has SDKs for C++ and Unity.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://en.wikipedia.org/wiki/C64_Direct-to-TV"\u003eC64 Direct-to-TV\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tiltfive.com/"\u003eTilt Five\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kickstarter.com/projects/tiltfive/holographic-tabletop-gaming"\u003eKickstarter - Tilt Five: Holographic Tabletop Gaming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d3719onxbeI0"\u003eUpdate 1 - Tilt Five SDK\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-10-10T00:00:00Z",
    },
    {
      id: 139,
      sourceId: 4,
      title: "Vehicle Control Software",
      link: "https://cppcast.com/philipp-schrader/",
      description:
        'Rob and Jason are joined by Philipp Schrader. They first discuss some post CppCon news and the LLVM 9.0 release. Then Phil talks about the work he\u0027s doing at Peloton Technology to enable the \u0027platooning\u0027 of trucks with software written in C++.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003du_ij0YNkFUs\u0026#38;list\u003dPLHTh1InhhwT6KhvViwRiTR7I5s09dLCSw"\u003eCppCon 2019 Keynotes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://xania.org/201909/cppcon-2019-trip-report"\u003eCppCon 2019 Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://lists.llvm.org/pipermail/llvm-dev/2019-September/135304.html"\u003eLLVM 9.0.0 Release\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003eEnter #cppcast in the Message field and get a month-license instead of 7-day license\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio/?utm_source\u003dpodcast\u0026#38;utm_medium\u003dbanner\u0026#38;utm_campaign\u003dcppcast"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-10-03T00:00:00Z",
    },
    {
      id: 140,
      sourceId: 4,
      title: "Visual C++ Announcements at CppCon 2019",
      link: "https://cppcast.com/msvc-cppcon-2019/",
      description:
        'Rob and Jason are joined by Marian Luparu, Sy Brand and Stephan T Lavavej in this special episode recorded at CppCon. They discuss some of the big announcements made by the Visual C++ team at CppCon. Including the open sourcing of  MSVC\u0027s STL, adding ASAN support to Visual Studio, C++17 conformance and much more.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/open-sourcing-msvcs-stl/"\u003eOpen Sourcing MSVC‚Äôs STL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/visualstudio/intelligent-productivity-and-collaboration-from-anywhere/"\u003eIntelligent Productivity and Collaboration, from Anywhere\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://aka.ms/vsfutures-signup"\u003eSign up for Private Preview of Visual Studio Cloud Environments\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/microsoft-c-team-at-cppcon-2019/"\u003eMicrosoft C++ Team at CppCon 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003eEnter #cppcast in the Message field and get a month-license instead of 7-day license\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio/?utm_source\u003dpodcast\u0026#38;utm_medium\u003dbanner\u0026#38;utm_campaign\u003dcppcast"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-09-26T00:00:00Z",
    },
    {
      id: 141,
      sourceId: 4,
      title: "Provable Functions at CppCon 2019",
      link: "https://cppcast.com/lisa-lippincott-cppcon/",
      description:
        'Rob and Jason are joined by Lisa Lippincott in this special episode recorded at CppCon. They first discuss some of the conference highlights and favorite talks so far. Then Lisa gives an overview of her \u0027Truth of a Procedure\u0027 talk. Later they talk about Lisa\u0027s work on the ISO committee, her thoughts on Contracts and much more.\n        \u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dDfNJR0wYRK4"\u003eC++Now 2019: Lisa Lippincott "The Truth of a Procedure"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dQFIOE1jKv30"\u003eC++Now 2018: Lisa Lippincott "The Shape of a Program"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0466r4.pdf"\u003eLayout-compatibility and Pointer-interconvertibility Traits\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0907r4.html"\u003eSigned Integers are Two\u0027s Complement\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-09-19T00:00:00Z",
    },
    {
      id: 142,
      sourceId: 4,
      title: "C++ Extensions",
      link: "https://cppcast.com/miro-knejp-cpp-extensions/",
      description:
        'Rob and Jason are joined by Miro Knejp. They first discuss a blog post from Tanker covering their strategy to successfully use C++ for cross-platform mobile development. Then Miro gives them a preview of his upcoming CppCon talk and tells us about some of the C++ extensions that are out there and probably won\u0027t ever be standardized.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://dev.to/tanker/reacting-to-dropbox-another-take-on-cross-platform-c-development-42o0"\u003eReacting to Dropbox: another take on cross-platform C++ development\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/tool-time-2019/"\u003eTool Time 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/2019-call-for-open-content/"\u003eCall for Open Content Sessions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetingcpp.com/meetingcpp/news/items/Highlighting-the-Student-and-Support-Tickets-for-Meeting-Cpp-2019.html"\u003eStudent and Support Tickets for Meeting C++ 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2019.sched.com/event/Sfrv"\u003eNon-conforming C++: the Secrets the Committee is Hiding From You\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dKe1mJiGO-pU\u0026#38;feature\u003dyoutu.be"\u003epinned_vector - Miro Knejp \u0026#38; Jakob Schwei√ühelm - Meeting C++ 2018\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-09-12T00:00:00Z",
    },
    {
      id: 143,
      sourceId: 4,
      title: "Professional CMake",
      link: "https://cppcast.com/craig-scott-cmake/",
      description:
        'Rob and Jason are joined by Craig Scott. They first discuss a recent blog post from PVS-Studio analyzing some bugs in CMake. Then Craig talks about how he got involved in CMake development, and his e-book \u0027Professional CMake: A Practical Guide.\u0027\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0658/"\u003eCMake: the Case when the Project\u0027s Quality is Unforgivable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0260/"\u003ePVS Studio The Last Line Effect\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SerenityOS/serenity"\u003eSerenity: Graphical x86 operating system written entirely in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Talks-and-Speakers-of-Meeting-Cpp-2019-are-online-.html"\u003eTalks and Speakers of Meeting C++ 2019 are online\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://crascit.com/professional-cmake/"\u003e"Professional CMake: A Practical Guide"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2019.sched.com/event/SfnH/deep-cmake-for-library-authors?iframe\u003dno"\u003eCppCon: Deep CMake for Library Authors\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://scottmeyers.blogspot.com/2015/05/publishing-effective-modern-c-part-1.html"\u003ePublishing Effective Modern C++, Part 1\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003eEnter #cppcast in the Message field and get a month-license instead of 7-day license\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio/?utm_source\u003dpodcast\u0026#38;utm_medium\u003dbanner\u0026#38;utm_campaign\u003dcppcast"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-09-05T00:00:00Z",
    },
    {
      id: 144,
      sourceId: 4,
      title: "C++ Epochs",
      link: "https://cppcast.com/vittorio-romeo-epochs/",
      description:
        'Rob and Jason are joined by Vittorio Romeo from Bloomberg. They first discuss some changes in the recent Visual Studio update for cross platform linux development, and some post-Cologne ISO developments. Then Vittorio goes into more detail on his proposal for C++ epochs, which could allow the language to more easily introduce breaking changes in the future.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/c-cross-platform-development-with-visual-studio-2019-version-16-3-vcpkg-cmake-configuration-remote-headers-and-wsl/"\u003eC++ Cross-Platform Development with VS 2019 16.3 vcpkg, Cmake config, remote headers and WSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2019/08/18/post-cologne-mailing/"\u003ePost-Cologne mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://vittorioromeo.info/index/blog/fixing_cpp_with_epochs.html"\u003eFixing C++ with Epochs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/class-2019-cpp111403/"\u003eC++ 11/14 for C++03 Developers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2YOH7re"\u003eEnter #cppcast in the Message field and get a month-license instead of 7-day license\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio/?utm_source\u003dpodcast\u0026#38;utm_medium\u003dbanner\u0026#38;utm_campaign\u003dcppcast"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-08-29T00:00:00Z",
    },
    {
      id: 145,
      sourceId: 4,
      title: "AWS Lambda",
      link: "https://cppcast.com/marco-magdy/",
      description:
        'Rob and Jason are joined by Marco Magdy from Amazon. They first discuss Dropbox\u0027s announcement of abandoning their C++ mobile platform strategy in favor of Swift and Kotlin. Then Marco goes over what AWS Lambda is, what you can do with it and some of the challenges he faced bringing C++ support to AWS Lambda.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.dropbox.com/tech/2019/08/the-not-so-hidden-cost-of-sharing-code-between-ios-and-android/"\u003eThe (not so) hidden cost of sharing code between iOS and Android\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://timur.audio/trip-report-july-2019-iso-c-committee-meeting-cologne-germany?fbclid\u003dIwAR3Asm0P4qRnttQ6eSCx5C7ECr6S-O5Hg5e8lugbSiweX8KOtohXv0z2yuI"\u003eTrip report: July 2019 ISO C++ committee meeting, Cologne, Germany\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://aws.amazon.com/blogs/compute/introducing-the-c-lambda-runtime/"\u003eIntroducing the C++ Lambda Runtime\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2019.sched.com/event/SfsS/the-design-of-the-c-runtime-for-aws-lambda"\u003eThe Design of the C++ Runtime for AWS Lambda\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/awslabs/aws-lambda-cpp"\u003eC++ implementation of the AWS Lambda runtime\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-08-22T00:00:00Z",
    },
    {
      id: 146,
      sourceId: 4,
      title: "mdspan and /r/cpp",
      link: "https://cppcast.com/bryce-lelbach-mdspan/",
      description:
        'Rob and Jason are joined by Bryce Adelstein Lelbach from NVIDIA. They discuss the mdspan proposal that first introduced Bryce to the C++ ISO committee. They also review Bryce\u0027s role as moderator for the /r/cpp subreddit and talk about the upcoming CppCon 2019 conference.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/resharper-cpp-2019-2/"\u003eResharper 2019.2 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/game-performance-improvements-in-visual-studio-2019-version-16-2/"\u003eGame Performance Improvements in Visual Studio 2019 16.2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/cn657d/the_german_center_for_aerospace_dlr_just_open/"\u003eThe German Center for Aerospace (DLR) just open sourced CosmoScout VR, which is a universe \u0027simulator\u0027 written in modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://wg21.link/p0009"\u003eP0009r9: mdspan: A Non-Owning Multidimensional Array Reference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1684r0.pdf"\u003eP1684r0: mdarray: An Owning Multidimensional Array Analog of mdspan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1767r0.html"\u003eP1767r0: Packaging C++ Modules\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/"\u003e/r/cpp/\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/"\u003eCppCon 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dFJIn1YhPJJc"\u003eCppCon 2018: Bryce Adelstein Lelbach "The C++ Execution Model"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-08-15T00:00:00Z",
    },
    {
      id: 147,
      sourceId: 4,
      title: "Secure Coding",
      link: "https://cppcast.com/matt-butler/",
      description:
        'Rob and Jason are joined by Matt Butler to discuss his perspective on the ISO Cologne meeting and Secure Coding.\n        \u003cp\u003eMatthew Butler is a security researcher who has been using C++ professionally since 1990. He has spent the past three decades as a systems architect and software engineer developing systems for network security, law enforcement and national defense. He primarily works in signals intelligence and security on platforms ranging from embedded micro-controllers to FPGAs to large-scale, real-time platforms.\u003c/p\u003e\n\u003cp\u003eHe is on the staff of both CppCon and C++Now as well as a member of the C++ Standards Committee. He spends most of his time in EWG, SG12 (Undefined Behavior and Vulnerabilities), SG14 (Low Latency) and, now, SG21 (Contracts). He is also a member of WG23 (Programming Language Vulnerabilities).\u003c/p\u003e\n\u003cp\u003eHe prefers the role of predator when dealing with hackers and lives in the Rocky Mountains with his wife and daughter.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/cmk7ek/what_happened_to_c20_contracts/"\u003eWhat happened to C++20 Contracts?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vittorioromeo.info/index/blog/fixing_cpp_with_epochs.html"\u003eFixing C++ with epochs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/child-care/"\u003eChild Care at CppCon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Butler\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://maddphysics.com/"\u003eMatt Butler\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dn4Yf2tBeAbE"\u003eCppCon 2018: Matthew Butler "Secure Coding Best Practices: Your First Line is the Last Line of Defense"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dpgEc__9Cltc"\u003eC++Now 2019: Matthew Butler "Secure Coding Best Practices - Threat Hunting"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1705r0.html"\u003eP1705 - Enumerating Undefined Behavior\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0639/"\u003eErrors that static code analysis does not find because it is not used\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0636/"\u003ePVS-Studio in the Clouds - Running the Analysis on Travis CI\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-08-08T00:00:00Z",
    },
    {
      id: 148,
      sourceId: 4,
      title: "Approval Tests",
      link: "https://cppcast.com/clare-macrae/",
      description:
        'Rob and Jason are joined by Clare Macrae to discuss Approval Tests and how they can be used to quickly test legacy C++ code.\n        \u003cp\u003eClare is an independent consultant, helping teams streamline their work with legacy and hard-to-test C++ and Qt code.\u003c/p\u003e\n\u003cp\u003eShe has worked in software development for over 30 years, and in C++ for 20 years.\u003c/p\u003e\n\u003cp\u003eSince 2017, she has used her spare time to work remotely with Llewellyn Falco on \u003ca href\u003d"https://github.com/approvals/ApprovalTests.cpp"\u003eApprovalTests.cpp\u003c/a\u003e, to radically simplify testing of legacy code. She has enjoyed this so much that she recently went independent, to focus even more on helping others to work more easily with legacy code.\n¬†¬†¬†¬†\nClare was until recently a Principal Scientific Software Engineer at Cambridge Crystallographic Data Centre. She is the original author of their popular 3D crystal structure visualisation program \u003ca href\u003d"https://www.ccdc.cam.ac.uk/mercury/"\u003eMercury\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.kitware.com/cmake-3-15-0-available-for-download/"\u003eCmake 3.15 available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/clang-llvm-support-for-msbuild-projects/"\u003eClang/LLVM Support for MSBuild Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/cdzy8w/leaf_a_lightweight_errorhandling_library_seeking/"\u003eLEAF light-weight error-handling lib seeking Boost review manager\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eClare Macrae\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ClareMacraeUK"\u003e@ClareMacraeUK\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://claremacrae.co.uk/"\u003eClare Macrae\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/approvals/ApprovalTests.cpp"\u003eC++ Approval Tests\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://approvaltests.com/"\u003eApproval Tests\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.includecpp.org/"\u003e#include \u003cC++\u003e\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gregcons.com/KateBlog/HappyOneofourbirthdaysInclude.aspx"\u003eHappy one-of-our-birthdays #include!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.gofundme.com/f/sponsoring-diverse-cppcon-2019-attendees?pc\u003d\u0026#38;rcid\u003dr01-156331121458-e1203fc6dedf4e8f"\u003eSponsoring Diverse CppCon 2019 Attendees\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.google.com/forms/d/e/1FAIpQLSc7Ctwydv5yu0egr8lOoWz5q1JXYkyDpBoaMAtsW1qPy8Kq2Q/viewform"\u003e#include \u003cC++\u003e sponsorship for CppCon 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0639/"\u003eErrors that static code analysis does not find because it is not used\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0636/"\u003ePVS-Studio in the Clouds - Running the Analysis on Travis CI\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-08-01T00:00:00Z",
    },
    {
      id: 149,
      sourceId: 4,
      title: "Cologne Trip Report",
      link: "https://cppcast.com/botond-ballo-tom-honermann/",
      description:
        'Rob and Jason are joined by Botond Ballo and Tom Honermann to discuss what features were added and removed from the C++20 draft paper at the ISO meeting in Cologne.\n        \u003cp\u003eBotond Ballo is a software engineer at Mozilla, where he has been working on the Firefox web browser\u0027s rendering engine for 6 years. He\u0027s been attending C++ standards meetings for about the same time, and blogging about them to keep the C++ user community informed about standardization progress. In the committee, his interests include general language evolution, reflection, and tooling. Botond likes to hack on IDEs and other developer tools in his spare time. Offline, you might spot him climbing rocks or reading fantasy novels.\u003c/p\u003e\n\u003cp\u003eTom Honermann is a software engineer at Synopsys where he has been working on the Coverity static analyzer for the past 8 years.  His first C++ standard committee meeting was Lenexa in 2015.  He currently chairs the SG16 text and Unicode study group and participates in the SG2 modules, SG13 HMI/IO, and SG15 tooling study groups.  His contributions to C++20 include the new char8_t builtin type.  A C++ minion with 20 years professional experience.  Husband and father of two awesome boys.\u003c/p\u003e\n\u003ch3\u003eBotond Ballo\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/BotondBallo"\u003e@BotondBallo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://botondballo.wordpress.com/"\u003eBotond Ballo\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTom Honermann\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/tahonermann"\u003e@tahonermann\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://honermann.net/blog/"\u003eTom Honermann\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/cfk9de/201907_cologne_iso_c_committee_trip_report_the/"\u003e2019-07 Cologne ISO C++ Committee Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1607r0.pdf"\u003ep1607 - Minimizing Contracts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-07-25T00:00:00Z",
    },
    {
      id: 150,
      sourceId: 4,
      title: "GitKraken",
      link: "https://cppcast.com/tyler-angwanek/",
      description:
        'Rob and Jason are joined by Tyler Ang-Wanek to discuss leveraging C++ in an ElectronJS app like GitKraken.\n        \u003cp\u003eTyler Ang-Wanek has been developing software professionally for the past 3.5 years. He works as a senior developer at Axosoft, on the GitKraken team. His work primarily shifts among developing native node modules for use in GitKraken, architectural work for code and APIs around GitKraken, and developing new features for GitKraken. He is the creator of the node module Node Sentinel File Watcher (NSFW), a native file watcher written for GitKraken that has made its way into Atom and VSCode. One of his major accomplishments includes taking leadership of the open source native node module NodeGit. After much hard work on the NodeGit repo and within the community, Tyler joined the leadership group for LibGit2.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2017/06/02/write-template-metaprogramming-expressively/"\u003eExpressive C++ Template Metaprogramming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://codingtidbit.com/2019/07/07/bring-your-c-code-to-the-web/?fbclid\u003dIwAR1Z4tBJGBq9maRFbXmTeWpd5zfR1VQPWfHNGSrjpfl7XAfx2Qxtaap-vUU"\u003eBring your C++ Code to the Web\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Voting-results-for-Meeting-Cpp-2019.html"\u003eVoting results for Meeting C++ 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTyler Ang-Wanek\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/twwanek"\u003e@twwanek\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.gitkraken.com/"\u003eGitKraken\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.axosoft.com/"\u003eAxosoft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.axosoft.com/gitkraken-v6-0/"\u003eGitKraken v6.0: The Fastest GitKraken Ever!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-07-11T00:00:00Z",
    },
    {
      id: 151,
      sourceId: 4,
      title: "CMake and VTK",
      link: "https://cppcast.com/robert-maynard/",
      description:
        'Rob and Jason are joined by Robert Maynard from Kitware to discuss CMake and VTK.\n        \u003cp\u003eRobert Maynard is a principal engineer at Kitware and spends most of his time as a primary developer of VTK-m. VTK-m is a HPC toolkit of scientific visualization algorithms for highly concurrent processor and accelerator architectures. It uses a fine-grained concurrency model for data analysis and visualization algorithms allowing for seamless execution on GPU\u0027s or many-core CPUs.\u003c/p\u003e\n\u003cp\u003eWhen not working on VTK-m, Robert is either; writing CMake code, teaching CMake, or working to improve CMake.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.indiegogo.com/projects/cppcheck-detect-more-uninitalized-variable-usage/#/"\u003eCppCheck detect more uninitalized variable usage\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2019/06/26/pro-p1485/"\u003eIn support of P1485 "Better keywords for coroutines"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.accu.org/?p\u003d1974"\u003eThe power of Hidden Friends in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/poster-submissions-2019/"\u003eCppCon Poster Submissions 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.npr.org/sections/health-shots/2019/06/11/729314248/to-save-the-science-poster-researchers-want-to-kill-it-and-start-over"\u003eTo Save The Science Poster, Researchers Want To Kill It And Start Over\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRobert Maynard\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/@robertjmaynard"\u003e@robertjmaynard\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cmake.org/"\u003eCMake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cmake.org/cmake/help/v3.15/release/3.15.html"\u003eCMake 3.15 Release Notes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vtk.org/"\u003eVTK\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-07-04T00:00:00Z",
    },
    {
      id: 152,
      sourceId: 4,
      title: "Functional Programming in C++",
      link: "https://cppcast.com/ivan-cukic/",
      description:
        'Rob and Jason are joined by Ivan ƒåukiƒá to discuss his book on Functional Programming with C++.\n        \u003cp\u003eIvan ƒåukiƒá is the author of "Functional Programming in C++" published by Manning.\u003c/p\u003e\n\u003cp\u003eHe is one of the core developers of KDE, the largest free/libre open source C++ project.\u003c/p\u003e\n\u003cp\u003eHe is also teaching modern C++ techniques and functional programming at the Faculty of Mathematics in Belgrade and has been using C++ for more than 20 years. He has been researching functional programming in C++ before and during his PhD studies, and uses the techniques in real-world projects.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/rust-and-c-plus-plus-in-cardiff/"\u003eRust and C++ Cardiff\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/lp/devecosystem-2019/cpp/"\u003eState of Developer Ecosystem 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/The-voting-on-the-talks-for-Meeting-Cpp-2019-begins-.html"\u003eVoting on the talks for Meeting C++ 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/?fbclid\u003dIwAR3BpsuvFJS0OSD1XuXOMtM0wCuI_rk1eO4hn0jWKXxTiberwyvbB8gxBLE#mailing2019-06"\u003ePre-Cologne Mailing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eIvan ƒåukiƒá\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/@ivan_cukic"\u003e@ivan_cukic\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cukic.co/to/fp-in-cpp"\u003eFunctional Programming in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0798r3.html"\u003ep0798R3 Monadic operations for std::optional\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0323r8.html"\u003ep0323R8 std::expected\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/arximboldi/immer/"\u003eImmer library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003deelpmWo2fuU"\u003eRanges for distributed and asynchronous systems - Ivan ƒåukiƒá - ACCU 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003da2MmURgc6cU"\u003eFunctional reactive programming in C++ - Ivan ƒåukiƒá - Meeting C++ 2016\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-06-27T00:00:00Z",
    },
    {
      id: 153,
      sourceId: 4,
      title: "Movable Iterators",
      link: "https://cppcast.com/corentin-jabot/",
      description:
        'Rob and Jason are joined by Corentin Jabot to discuss some of his proposals for C++20.\n        \u003cp\u003eCorentin Jabot is a freelancer developer and member of the French National Body and the C++ committee where he participates in the tooling, Unicode and library evolution working groups.\nHe has been doing C++ for about 10 years and currently works with Mobsya, a swiss non-profit making educational robots for kids.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/catchorg/Catch2/releases/tag/v2.9.0"\u003eCatch v2.9.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLn4wYlDYx4bszUM8uUJi55czMYuilXfaR\u0026#38;fbclid\u003dIwAR07tpgwDsUXKq54XNl6Z_1NnR-Mmxdbp2boAlRj9syFfGXA6bs5YAQOTjA"\u003eCore C++ 2019 Videos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/06/fsm-variant-game.html"\u003eSpace Game: A std::variant Based State Machine\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCorentin Jabot\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Cor3ntin"\u003e@Cor3ntin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/"\u003ecor3ntin\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/P1207R2.pdf"\u003ep1207: Movability of Single-pass iterators\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/p1206r1.pdf"\u003ep1206: ranges::to: A function to convert any range to a container\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/P1634R0.html"\u003ep1634: Naming guidelines for modules\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/P1634R0.html"\u003ep1628: Unicode character properties\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-06-20T00:00:00Z",
    },
    {
      id: 154,
      sourceId: 4,
      title: "Factorio",
      link: "https://cppcast.com/michal-kovarik/",
      description:
        'Rob and Jason are joined by Michal Kova≈ô√≠k to discuss his work creating the Factorio video game with C++.\n        \u003cp\u003eMichal is 34 years old and started programming when he was 11. C (and C++ soon after) became his favorite language soon afterwards.\nAfter quitting University after 2 years he was a regular programmer in a company for 4 years. He then started his own computer game project, which he\u0027s been working on for 7 years already. The game is much more successful than anticipated (with more than 1.7 million sales) while still in early access. We are close to finishing the game and deciding what to do next.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/user/BoostCon/featured"\u003eC++Now 2019 Videos being uploaded\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/clear-functional-c-documentation-with-sphinx-breathe-doxygen-cmake/?fbclid\u003dIwAR3-sFzYXaJA2n_gd5VVoODpEFG1_pGoLUyQKTH3C5b_dKpHThwPZVYw910"\u003eClear, Functional C++ Docs with Sphinx + Breathe + Doxygen + Cmake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.trailofbits.com/2019/05/31/fuzzing-unit-tests-with-deepstate-and-eclipser/?fbclid\u003dIwAR1SAe-cMzyz4MgIjsihaU_kewnomBci36pEeNcuM-nA1Df-_gIvbV70vrs"\u003eFuzzing Unit Tests with DeepState and Eclipser\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMichal Kova≈ô√≠k\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/kovarex"\u003eMichal Kova≈ô√≠k\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.factorio.com/"\u003eFactorio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-06-14T00:00:00Z",
    },
    {
      id: 155,
      sourceId: 4,
      title: "Pattern Matching",
      link: "https://cppcast.com/michael-park/",
      description:
        'Rob and Jason are joined by Michael Park to discuss his Pattern Matching library and standards proposal.\n        \u003cp\u003eMichael Park is a software engineer at Facebook, working on the C++ libraries and standards team. His focus for C++ is to introduce pattern matching to facilitate better code.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.timur.audio/initialisation-in-c17-the-matrix"\u003eInitialization in C++ the Matrix\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/cmake-3-14-and-performance-improvements/"\u003eCMake 3.14 and Performance Improvements\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2019/05/compiler-explorer-with-code-execution-support-now-in-early-beta"\u003eCompiler Explorer Execution Support\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMichael Park\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mcypark"\u003e@mcypark\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mpark"\u003eMichael Park\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mpark.github.io/"\u003eMichael Park\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow2019.sched.com/event/Mj3u"\u003eC++Now Pattern Matching: Match Me If You Can\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1371r0.pdf"\u003eP1371R0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dHaZ1UQXnuC8"\u003eCppCon 2017: Michael Park "MPark.Patterns: Pattern Matching in C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mpark/patterns"\u003eMPark.Patterns\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-06-05T00:00:00Z",
    },
    {
      id: 156,
      sourceId: 4,
      title: "Simplifying C++",
      link: "https://cppcast.com/herb-sutter-simplifying-cpp/",
      description:
        'Rob and Jason are joined by Herb Sutter to discuss C++20 and some of his proposals that aim to Simplify C++.\n        \u003cp\u003eHerb Sutter is an author, chair of the ISO C++ committee, and a systems languages architect at Microsoft.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.knatten.org/2019/05/24/no-one-knows-the-type-of-char-char/"\u003eNo one knows the type of char + char\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/c++now-2019-trip-report"\u003eC++ Now 2019 Trip Report, Extension Points and Summer Opportunities\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/beached/daw_json_link"\u003eJSON Link\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHerb Sutter\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/herbsutter"\u003e@herbsutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hsutter"\u003eHerb Sutter\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/"\u003eSutter\u0027s Mill\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1000r1.pdf"\u003eP1000 - C++ IS Schedule\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1185r1.html"\u003eP1185 - \u0026#60;\u003d\u0026#62; !\u003d \u003d\u003d\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1186r1.html"\u003eP1186 - When do you actually use \u0026#60;\u003d\u0026#62;\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dos7cqJ5qlzo"\u003eKeynote: De-fragmenting C++: Making exceptions more affordable and usable - Herb Sutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d80BZxujhY38"\u003eCppCon 2018: Herb Sutter "Thoughts on a more powerful and simpler C++ (5 of N)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2Iesl1U"\u003eC++ Coding Standars: 101 Rules, Guidelines, and Best Practices\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-05-28T00:00:00Z",
    },
    {
      id: 157,
      sourceId: 4,
      title: "Constexpr Evaluation",
      link: "https://cppcast.com/daveed-vandevoorde/",
      description:
        'Rob and Jason are joined by Daveed Vandevoorde to discuss his contributions to the C++ standard and his recent work on constexpr evaluation.\n        \u003cp\u003eDavid ("Daveed") Vandevoorde is a Belgian computer scientist who lives near Princeton, NJ, USA. He is vice-president of engineering at the Edison Design Group (EDG), where he contributes primarily to the implementation of their C++ compiler front end. He is an active member of the C++ standardization committee where he is primarily active in the core language evolution work. His recent work in that context has primarily been about extending the capabilities of ‚Äúconstexpr evaluation‚Äù. Daveed is also one of the five members of the committee‚Äôs ‚Äúdirection group‚Äù. He is the primary author of the well-regarded ‚ÄúC++ Templates: A Complete Guide‚Äù (now available in its second edition).\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://usingstdcpp.org/2019/05/12/report-from-using-stdcpp-2019/"\u003eReport from using std::cpp 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://shafik.github.io/c++/undefined%20behavior/2019/05/11/explporing_undefined_behavior_using_constexpr.html"\u003eExploring undefined behavior using constexpr\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/linux-development-with-c-in-visual-studio-2019-wsl-asan-for-linux-separation-of-build-and-debug/"\u003eLinux Development with C++ in Visual Studio 2019: WSL, ASAN for Linux, Seperation of Build and Debug\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/gamedev/comments/bpdlow/entt_v3_is_out_gaming_meets_modern_c_again/"\u003eEnTT v3 is release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2019/05/announcing-cpp-now-2020/#read-more"\u003eAnnouncing C++Now 2020\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDaveed Vandevoorde\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/daveed-vandevoorde-7084164/"\u003eDaveed Vandevoorde\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dYyUEVTXhYt4"\u003eC++ Russia 2018: Daveed Vandevoorde, Reflective Metaprogramming in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2Mgbscq"\u003eC++ Templates: The Complete Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0939r0.pdf"\u003eDirection for ISO C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1240r0.pdf"\u003eScalable Reflection in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/StaticCodeAnalyzer/"\u003ePVS-Studio Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/pvsstudio_en"\u003ePVS-Studio Telegram\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://twitter.com/Code_Analysis"\u003ePVS-Studio Twitter\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003cli\u003e\n\u003cp\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/p\u003e\n\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-05-23T00:00:00Z",
    },
    {
      id: 158,
      sourceId: 4,
      title: "Mutation Testing with Mull",
      link: "https://cppcast.com/alex-denisov/",
      description:
        'Rob and Jason are joined by Alex Denisov to discuss the Mutation Testing in general and the clang based Mull project.\n        \u003cp\u003eAlex is a Software Engineer who is working at PTScientists GmbH, a German aerospace startup that is planning to land a spacecraft on the Moon. After work, he is organizing LLVM Social in Berlin and researching the topic of mutation testing. He is generally interested in developer tools, low-level development, and software hardening.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/05/boost-to-stdfs.html"\u003eConverting from Boost to std::filesystem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gregcons.com/KateBlog/ACCUTripReport.aspx"\u003eKate Gregory ACCU trip report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lwn.net/Articles/787385/"\u003eGCC 9.1 Released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAlex Denisov\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/1101_debian"\u003e@1101_debian\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/AlexDenisov"\u003eAlex Denisov\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lowlevelbits.org/"\u003eAlex Denisov\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mull-project/mull"\u003eMull Project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/theofidry/awesome-mutation-testing"\u003eAwesome Mutation testing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dYvj4G9B6pcU"\u003e2019 EuroLLVM Developers\u0027 Meeting: A. Denisov "Building an LLVM-based tool: lessons learned"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-05-09T00:00:00Z",
    },
    {
      id: 159,
      sourceId: 4,
      title: "Reflection TS",
      link: "https://cppcast.com/david-sankel-reflection-ts/",
      description:
        'Rob and Jason are joined by David Sankel to discuss the Reflection TS and more.\n        \u003cp\u003eDavid Sankel is a Software Engineering Manager/TL at Bloomberg and an active member of the C++ Standardization Committee. His experience spans microservice architectures, CAD/CAM, computer graphics, visual programming languages, web applications, computer vision, and cryptography. He is a frequent speaker at C++ conferences and specializes in large-scale software engineering and advanced C++ topics. David‚Äôs interests include dependently typed languages, semantic domains, EDSLs, and functional reactive programming. He is the project editor of the C++ Reflection TS, a member of the Boost steering committee, and an author of serveral C++ proposals including pattern matching and language variants.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/resharper-cpp-2019-1-responsive-better-unreal-engine-new-language-features/"\u003eReSharper C++ 2019.1 More Responsive, Better for Unreal Engine, and with New Language Features\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.acodersjourney.com/top-25-cplusplus-api-design-mistakes-and-how-to-avoid-them/"\u003eTop 25 C++ API design mistakes and how to avoid them\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.surveymonkey.com/r/NCMCJDZ"\u003e2019 Annual C++ Developer Survey\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDavid Sankel\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/camio"\u003eDavid Sankel\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cplusplus/reflection-ts"\u003eC++ Reflection TS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dFLbXjNrAjbc"\u003eC++Now 2018: David Sankel "C++17\u0027s std::pmr Comes with a Cost"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dB2XtqVZcSdM"\u003eCppCon 2017: David Sankel "So, you inherited a large code base..."\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-05-02T00:00:00Z",
    },
    {
      id: 160,
      sourceId: 4,
      title: "CPPP",
      link: "https://cppcast.com/fred-joel/",
      description:
        'Rob and Jason are joined by Fred Tingaud and Joel Falcou to discuss the CPPP conference, quick-bench and more.\n        \u003cp\u003eFred Tingaud is a Principal Software Engineer at Murex where he maintains the C++ UI and front-end APIs. He is also the creator of quick-bench.com, co-organizer of CPPP conference, co-host of Paris C++ Meetup and an organizer of #include\u003cC++\u003e . His interests range from code efficiency and readability to UI ergonomics.\u003c/p\u003e\n\u003cp\u003eComputer Science Engineer, PhD, Associate professor at University Paris Saclay, Jo√´l Falcou is the creator and president of C++FrUG, C++ Meetup host and an International speaker.\nJoel has been actively participating in the C++ international community with more than 7 years of international talks at BoostCon, C++Now, C++Russia, C++Con and Meeting-C++. He is also a member of the C++Now and CppCon Program Committee. He is a member of the French National Body of the ISO Standard Committee for C++ since 2014.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://arxiv.org/abs/1904.08555"\u003eClangJIT Enhancing C++ with Just in Time compilation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/cpp17-20-features-and-fixes-in-vs-2019/"\u003eC++ 17/20 Features and Fixes in VS 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://oribenshir.github.io/afternoon_rusting/blog/ACCU-Summary"\u003eACCU Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cfs2019/"\u003eCppCon 2019 Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/regopen2019/"\u003eRegistration for CppCon 2019 is Open\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eFred Tingaud\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/FredTingaudDev"\u003e@FredTingaudDev\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/FredTingaud"\u003eFred Tingaud\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJo√´l Falcou\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/joel_f"\u003e@joel_f\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jfalcou"\u003eJo√´l Falcou\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppp.fr/"\u003eCPPP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://quick-bench.com/"\u003eQuick C++ Benchmark\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.oreilly.com/library/view/practical-c-metaprogramming/9781492042778/"\u003ePractical C++ Metaprogramming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d-0tO3Eni2uo"\u003eCppCon 2018: Fred Tingaud "A Little Order: Delving into the STL algorithms"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dgPj90zwLphw"\u003eCppCon 2017: Jo√´l Falcou "I Wish I could Use C++ 1x/y/z"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0610/"\u003eWanna Play a Detective? Find the Bug in a Function from Midnight Commander\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0612/"\u003eFalse Positives in PVS-Studio: How Deep the Rabbit Hole Goes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-04-25T00:00:00Z",
    },
    {
      id: 161,
      sourceId: 4,
      title: "fmt",
      link: "https://cppcast.com/victor-zverovich/",
      description:
        'Rob and Jason are joined by Victor Zverovich to discuss the fmt modern formatting library and the proposal to bring it to C++20.\n        \u003cp\u003eVictor Zverovich is a software engineer at Facebook working on the Thrift RPC framework. Before joining Facebook in 2016, he worked for several years on modeling systems for mathematical optimization. He is an active contributor to open-source projects, an author of the {fmt} library and the ISO proposal P0645 to add a new formatting facility to C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eclipsecon.org/europe2017/session/docker-container-buildrundebug-support-cc-projects"\u003eeclipsecon: Docker Container Build/Run/Debug Support for C/C++ Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://awfulcode.io/2019/04/13/professional-zero-cost-setup-for-c-projects-part-1-of-n/"\u003eProfessional, zero-cost setup for C++ projects (1 of N)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/in-editor-documentation-for-cmake-in-visual-studio/"\u003eIn-Editor Documentation for Cmake in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2019/04/12/understanding-when-not-to-stdmove-in-c/"\u003eUnderstanding when not to std::move in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/bcdd76/announcing_cppp_paris_2019/"\u003eAnnouncing CPPP - Paris 2019\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eVictor Zverovich\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/vzverovich"\u003e@vzverovich\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/vitaut"\u003eVictor Zverovich\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/fmtlib/fmt"\u003efmt - A modern formatting library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p0645r5.html"\u003eP0645 - Text Formatting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1361r0.pdf"\u003eP1361 - Integration of chrono with text formatting\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0610/"\u003eWanna Play a Detective? Find the Bug in a Function from Midnight Commander\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0612/"\u003eFalse Positives in PVS-Studio: How Deep the Rabbit Hole Goes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-04-18T00:00:00Z",
    },
    {
      id: 162,
      sourceId: 4,
      title: "Linear Algebra and Audio",
      link: "https://cppcast.com/guy-davidson-linear-algebra-audio/",
      description:
        'Rob and Jason are joined by Guy Davidson to talk about his work with the ISO C++ committee including proposals for a linear algebra library and audio api.\n        \u003cp\u003eGuy Davidson is the Principal Coding Manager of Creative Assembly, makers of the Total War franchise, Alien: Isolation and Halo Wars 2, Guy has been writing games since the early 1980s. He is now also a contributor to SG14, the study group devoted to low latency, real time requirements, and performance/efficiency especially for Games, Financial/Banking, and Simulations, and to SG13, the HMI study group. He speaks at schools, colleges and universities about programming and likes to help good programmers become better programmers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/spotify/NFHTTP"\u003eNFHTTP a cross platform C++ HTTP library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vector-of-bool.github.io/2019/03/31/modules-2.html"\u003eUnderstanding C++ Modules part 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blend2d.com/"\u003eBlend2D - 2D Vector Graphics Powered by a JIT Compiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/03/cpplambda-story-free-ebook.html"\u003eC++ Lambda Story Free Ebook\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGuy Davidson\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/hatcat01"\u003e@hatcat01\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1385r1.html"\u003elinear.algebra - A proposal to add linear algebra support to the C++ standard library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1386r0.pdf"\u003eA Standard Audio API for C++:Motivation, Scope, and Basic Design\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7Jk1a4cnukQ"\u003eCppCon 2018: Guy Davidson "Lightweight 2D graphics with io2d"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-04-11T00:00:00Z",
    },
    {
      id: 163,
      sourceId: 4,
      title: "Boden Cross-Platform Framework",
      link: "https://cppcast.com/marcus-tobias/",
      description:
        'Rob and Jason are joined by Marcus Tillmanns and Tobias Lensing to talk about the Boden Cross-Platform Framework.\n        \u003cp\u003eMarcus is currently the main software developer of Boden. He has a strong background in C++ graphics and UI development. He worked with Qt for more than 10 years on audio software and embedded projects.\u003c/p\u003e\n\u003cp\u003eTobias is currently working as a software developer and product manager on Boden. He‚Äôs passionate about start-ups and entrepreneurship. Tobias also has a background as CTO in audio software, cloud technology, and web development.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://arstechnica.com/gadgets/2019/04/visual-studio-2019-goes-live-with-c-python-shared-editing/"\u003eVisual Studio 2019 goes live\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/b7uvif/c23_fullptr_to_replace_nullptr/"\u003eC++23 fullptr to replace nullptr\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.conan.io/2019/04/01/New-conan-release-1-14.html"\u003eConan 1.14 Release\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMarcus Tillmanns\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Maddimax3"\u003e@Maddimax3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTobias Lensing\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/tobiaslensing"\u003e@tobiaslensing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/AshampooSystems/boden"\u003eBoden\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/bodenhq"\u003e@bodenhq\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-04-04T00:00:00Z",
    },
    {
      id: 164,
      sourceId: 4,
      title: "Reverse Engineering C++",
      link: "https://cppcast.com/gal-zaban/",
      description:
        'Rob and Jason are joined by Gal Zaban to talk about Reverse Engineering C++.\n        \u003cp\u003eGal is currently working as a Security Researcher. Her passion is Reverse Engineering with a particular interest in C++ code. In her spare time, when not delving into low-level research, she designs and sews her own clothes and loves to play the Clarinet.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/b3bkmc/llvm_clang_80_released/"\u003eLLVM Clang 8.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2019/03/dusikova-keynote/"\u003eC++Now Keynote Announcement: Hana Dus√≠kov√° on Compile Time Regular Expressions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Neargye/nameof"\u003eNameof operator for modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.techrepublic.com/article/the-3-least-secure-programming-languages/"\u003eThe 3 least secure programming languages\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGal Zaban\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/0xgalz"\u003e@0xgalz\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/0xgalz"\u003eGal Zaban\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/0xgalz/Virtuailor"\u003eVirtuailor\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.hex-rays.com/products/ida/support/idapython_docs/"\u003eIDAPython\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/schedule/#session-21"\u003eCoreC++: Behind Enemy Lines - Reverse Engineering C++ in Modern Ages\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.troopers.de/troopers18/agenda/9eljbn/"\u003eWhen Virtual Hell Freezes Over - Reversing C++ Code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0610/"\u003eWanna Play a Detective? Find the Bug in a Function from Midnight Commander\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0612/"\u003eFalse Positives in PVS-Studio: How Deep the Rabbit Hole Goes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-03-28T00:00:00Z",
    },
    {
      id: 165,
      sourceId: 4,
      title: "Visual C++ Updates",
      link: "https://cppcast.com/vcpp-news/",
      description:
        'Rob talks to several members of the Visual C++ team about both Visual Studio Code and the upcoming Visual Studio 2019 release and more.\n        \u003cp\u003eMarian Luparu is the Lead Program Manager of the C++ team responsible for the C++ experience in Visual Studio, VS Code as well as Vcpkg. \u003c/p\u003e\n\u003cp\u003eSy Brand is Microsoft‚Äôs C++ Developer Advocate. Their background is in compilers and debuggers for embedded accelerators, but they‚Äôre also interested in generic library design, metaprogramming, functional-style C++, undefined behaviour, and making our communities more welcoming and inclusive.\u003c/p\u003e\n\u003cp\u003eTara Raj is the Program Manager for the C++ experience in Visual Studio Code and Vcpkg. She is interested in developer tools and Linux.\u003c/p\u003e\n\u003cp\u003eBob Brown is the engineering manager for C++ experiences in Visual Studio and Visual Studio Code.\u003c/p\u003e\n\u003ch3\u003eMarian Luparu, Sy Brand, Tara Raj and Bob Brown\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mluparu"\u003e@mluparu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/TartanLlama"\u003e@TartanLlama\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/tara_msft"\u003e@tara_msft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/bob-brown-434b934a/"\u003eBob Brown\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://visualstudio.microsoft.com/vs2019-launch/"\u003eVisual Studio 2019 Launch Event\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/visual-studio-2019-preview-2-blog-rollup/"\u003eVisual Studio 2019 Preview 2 Blog Rollup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.microsoft.com/cppblog/vs-code-cpp-extension-january-2019-update/"\u003eVisual Studio Code C/C++ extension: January 2019 Update\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0610/"\u003eWanna Play a Detective? Find the Bug in a Function from Midnight Commander\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0612/"\u003eFalse Positives in PVS-Studio: How Deep the Rabbit Hole Goes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-03-21T00:00:00Z",
    },
    {
      id: 166,
      sourceId: 4,
      title: "News Roundup",
      link: "https://cppcast.com/news-episode-traveling/",
      description:
        'Rob and Jason catch up on some news at the end of a week of traveling.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2019/03/08/usability-improvements-in-gcc-9/"\u003eUsability improvements in GCC 9\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.technologyreview.com/s/613054/cybersecurity-critical-infrastructure-triton-malware/"\u003eTriton is the world‚Äôs most murderous malware, and it‚Äôs spreading\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://habr.com/en/company/pvs-studio/blog/443400/"\u003eCounting Bugs in Windows Calculator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vector-of-bool.github.io/2019/03/10/modules-1.html"\u003eUnderstanding C++ Modules: Part 1: Hello Modules, and Module Units\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/azife1/modern_cmake_examples/"\u003eModern CMake Examples\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.kitware.com/cmake-3-14-0-available-for-download/"\u003eCMake 3.14.0 available for download\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thoughts-on-cpp.com/2019/03/12/introduction-into-logging-with-loguru/"\u003eIntroduction into Logging with Loguru\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mariusbancila.ro/blog/2019/03/13/little-known-cpp-function-try-block/"\u003eLittle-known C++: function-try-block\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-03-15T00:00:00Z",
    },
    {
      id: 167,
      sourceId: 4,
      title: "RxCpp and Executors",
      link: "https://cppcast.com/kirk-shoop/",
      description:
        'Rob and Jason are joined by Kirk Shoop to talk about the RxCpp library and the future of Executors in C++.\n        \u003cp\u003eKirk stumbled into an internship at Microsoft in the 90s that turned into contracting and eventually employment at Microsoft. At Microsoft Kirk sometimes pushed the compiler to its knees in the pursuit of libraries that prevent common errors. In 2013 Kirk joined Microsoft Open Technologies Inc to work on open source. Kirk began investing heavily in rxcpp in the belief that it is a better abstraction for async than the primitives commonly used. Now Kirk works at Facebook with Eric Niebler and Lewis Baker to build async range concepts and algorithms (with coroutines) into the c++ std library. \u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/kona2019/"\u003eKona: A trip report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vector-of-bool.github.io/2019/03/04/modules-doa-2.html"\u003eAre C++ Modules DOA 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pabloariasal.github.io/2019/02/28/cpp-inlining/"\u003eC++ Breaking the Rules with Inline Variables and Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKirk Shoop\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/kirkshoop"\u003e@kirkshoop\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/kirkshoop"\u003eKirk Shoop\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://kirkshoop.github.io/"\u003eKirk Shoop\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ReactiveX/RxCpp"\u003eRxCpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://reactivex.io/intro.html"\u003eReactiveX\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dFcQURwM806o"\u003eCppCon 2016: Kirk Shoop "Algorithm Design For Values Distributed In Time"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/blog/features/visual-studio/"\u003eAnnouncing Visual Studio Extension - Integrated Crash Reporting in 5 Minutes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-03-07T00:00:00Z",
    },
    {
      id: 168,
      sourceId: 4,
      title: "Kona Trip Report",
      link: "https://cppcast.com/peter-bindels-kona-trip-report/",
      description:
        'Rob and Jason are joined by Peter Bindels to talk about features approved at the ISO C++ Kona meeting for C++20 including Modules, Coroutines and much more.\n        \u003cp\u003ePeter Bindels is a C++ software engineer who prides himself on writing code that is easy to use, easy to work with and well-readable to anybody familiar with the language. Since the last time he\u0027s been on CppCast he presented at multiple conferences about build tooling and simple code. In combining both, he created the build tool Evoke from cpp-dependencies and other smaller projects, leading to a simple to use build system presented at CppCon 2018. Earlier this year he presented its companion 2D Graphics library for absolute called Pixel at CppOnSea. He\u0027s active in both standards development as well as helping out with various things at conferences.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/02/papers-kona.html"\u003e2019-02 Kona ISO C++ Committee Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLRyNF2Y6sca3bxLLAojbEWaZ2DueRPZVy"\u003eAll Meeting C++ 2018 talks on youtube\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/speakers/"\u003eCore C++ Speaker List\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePeter Bindels\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dascandy42"\u003e@dascandy42\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dascandy"\u003ePeter Bindels\u0027 GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmWOmkwv8N_U"\u003eCppCon 2018: Peter Bindels "Build Systems: a Simple Solution to a Complicated Problem"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dT1WjKvLJGxg"\u003eC++Now 2018: Peter Bindels "A View to a View"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1427r0.pdf"\u003eConcerns about module toolability\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0592/"\u003eTechnologies used in the PVS-Studio code analyzer for finding bugs and potential vulnerabilities\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-02-28T00:00:00Z",
    },
    {
      id: 169,
      sourceId: 4,
      title: "Analyzing Undefined Behavior",
      link: "https://cppcast.com/john-regehr/",
      description:
        'Rob and Jason are joined by John Regehr to talk about his job as a professor at the University of Utah teaching C++ courses and some of his research projects including souper and csmith.\n        \u003cp\u003eJohn Regehr is a professor at the University of Utah where he\u0027s been on the faculty since 2003. He likes to work on compilers and software correctness, but used to work on real-time and embedded systems. When he has free time he likes to go hiking in the desert with his kids.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2019/02/papers-kona.html"\u003eFive Awesome C++ Papers for Kona 2019 ISO Meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://codingnest.com/the-future-of-catch2/"\u003eThe future of Catch2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/channel/UCAczr0j6ZuiVaiGFZ4qxApw/videos"\u003eSome C++ on Sea videos already available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@denis.yaroshevskij/between-linear-and-binary-search-8d21877cfce5"\u003eBetween linear and binary search\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJohn Regehr\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/johnregehr"\u003e@johnregehr\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://john.regehr.org/"\u003eJohn Regehr\u0027s Personal Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.regehr.org/"\u003eJohn Regehr\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/google/souper"\u003eSouper\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embed.cs.utah.edu/csmith/"\u003eCsmith\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embed.cs.utah.edu/creduce/"\u003eC-Reduce\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAeEwxtEOgH0"\u003eC++Now 2018: John Regehr "Closing Keynote: Undefined Behavior and Compiler Optimizations"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0592/"\u003eTechnologies used in the PVS-Studio code analyzer for finding bugs and potential vulnerabilities\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-02-21T00:00:00Z",
    },
    {
      id: 170,
      sourceId: 4,
      title: "Leaf and \u0027What is Programming?\u0027",
      link: "https://cppcast.com/edaqa-mortoray/",
      description:
        'Rob and Jason are joined by Edaqa Mortoray to talk about his experience designing the Leaf language and writing it\u0027s compiler in C++, and his book \u0027What is Programming?\u0027\n        \u003cp\u003eEdaqa Mortoray grew up programming. From interface design to scientific simulations, including video games and development products, he\u0027s coded a bit of everything. He\u0027s got a successful programming blog and is the author of the book "What is Programming?"\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cukic.co/2019/02/09/moving-iterators-in-cxx/"\u003eMoving iterators in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLv8DnRaQOs5-ST_VDqgbbMRtzMtpK36Hy"\u003eC++ 3D Game Tutorial Series\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/legacycode?fbclid\u003dIwAR0pl-pknad8nZG8lMEkZoKHUs5jMtNwxPhbssoIhiB3AZV14nomeh-pf5k"\u003eLegacy Code Programmer\u0027s Toolbox\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/cpp17"\u003eC++17 - The Complete Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/cpp17indetail"\u003eC++17 in Detail\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eEdaqa Mortoray\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/edaqa"\u003e@edaqa\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mortoray.com/"\u003eEdaqa\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://edaqa.com/what_is_programming/"\u003eWhat is Programming?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://edaqaandstephane.net/"\u003eEdaqa \u0026#38; Stephane (Podcast)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://leaflang.org/"\u003eLeaf Programming Language\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://dev.to/"\u003edev.to\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rShetty/awesome-podcasts"\u003eAwesome Podcasts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-02-14T00:00:00Z",
    },
    {
      id: 171,
      sourceId: 4,
      title: "libc++",
      link: "https://cppcast.com/eric-fiselier/",
      description:
        'Rob and Jason are joined by Eric Fiselier to talk about libc++ and his contributions to the library.\n        \u003cp\u003eEric is as Software Engineer at Google working on Abseil and other core libraries. He is also a maintainer of libc++ and active member of the standards committee. In addition to writing C++ libraries, Eric enjoys hacking on Clang. Most recently Eric has been interested in using tooling to make C++ code healthier.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2019/01/24/c-productivity-improvements-in-visual-studio-2019-preview-2/"\u003eC++ Productivity Improvements in VS 2019 Preview 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/"\u003ePre-Kona 2019 C++ Standards Mailing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/akbnhv/italian_c_conference_2019_call_for_sessions/"\u003eItalian C++ Conference 2019 Call for sessions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++ Early Bird Tickets End Tomorrow\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eEric Fiselier\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Eric01"\u003e@Eric01\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/EricWF"\u003eEric Fiselier\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://libcxx.llvm.org/docs/"\u003elibc++ documentation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gist.github.com/EricWF/128781c188b1a4fca7581e7ea943d58b"\u003econstinit proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2019/p1337r0.pdf"\u003eP1337 Aliasing the standard library as a means to save C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/about/volunteer_program/"\u003eC++Now Volunteer/Student Program\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-01-31T00:00:00Z",
    },
    {
      id: 172,
      sourceId: 4,
      title: "SG20",
      link: "https://cppcast.com/chris-dibella-sg20/",
      description:
        'Rob and Jason are joined by Christopher Di Bella to talk about SG20, the C++ Education Study Group\n        \u003cp\u003eChristopher is a Staff Software Engineer on the ComputeCpp Runtime for Codeplay Software and a co-founding member of SG20. He is passionate about teaching people how to write programs using idiomatic C++, and also advocates for developers to consider adopting algorithms and ranges. When not thinking about C++, Chris is often playing games, watching films, or trying something new.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/ainhhk/i_implemented_a_proposed_c_paper/"\u003eI implemented a proposed C++ paper\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/ai3cgd/raytracing_in_256_lines_of_bare_c/"\u003eRaytracing in 256 lines of bare C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.trailofbits.com/2019/01/21/how-mcsema-handles-c-exceptions/"\u003eHow McSema Handles C++ Exceptions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/ai8ci9/core_c_2019_in_tlv_tickets_available/"\u003eCore C++ 2019 in TLV: Tickets Available\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eChristopher Di Bella\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/cjdb_ns"\u003e@cjdb_ns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cjdb"\u003eChristopher Di Bella\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1231r0.pdf"\u003eP1231: Proposal for Study Group: C++ Education\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cjdb.com.au/sg20-and-videos"\u003eSG20 Education and Recommended Videos for Teaching C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cjdb.com.au/wg21/sg20/d1389/d1389.html"\u003eD1389R0 Standing Document for SG20: Guidelines for Teaching C++ to Beginners\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d3AkPd9Nt2Aw"\u003eCppCon 2018: Christopher Di Bella "How to Teach C++ and Influence a Generation"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0592/"\u003eTechnologies used in the PVS-Studio code analyzer for finding bugs and potential vulnerabilities\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-01-24T00:00:00Z",
    },
    {
      id: 173,
      sourceId: 4,
      title: "Boost DI and SML",
      link: "https://cppcast.com/kris-jusiak/",
      description:
        'Rob and Jason are joined by Kris Jusiak to discuss [Boost].DI and [Boost].SML libraries.\n        \u003cp\u003eKris is a C++ Software Engineer who currently lives a couple of doors down from CppCon 2019. He has worked in different industries over the years including telecommunications, games and most recently finance for Quantlab Financial. He has an interest in modern C++ development with a focus on performance and quality. He is an open source enthusiast with multiple open source libraries where he uses template metaprogramming techniques to support the C++ rule - "Don\u0027t pay for what you don\u0027t use" whilst trying to be as declarative as possible with a help of domain-specific languages. Kris is also a keen advocate of extreme programming techniques, test/behaviour driven development and truly believes that \u0027the only way to go fast is to go well!\u0027.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLRyNF2Y6sca3bxLLAojbEWaZ2DueRPZVy"\u003eMeeting C++ 2018 Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2018/12/2019-call-for-submissions/"\u003eC++Now Submission Deadline Jan 23\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://brevzin.github.io/c++/2019/01/15/if-constexpr-isnt-broken/"\u003eIf constexpr isn\u0027t broken\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKris Jusiak\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/krisjusiak"\u003e@krisjusiak\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/krzysztof-jusiak"\u003eKris Jusiak\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://kris.jusiak.net/"\u003eKris Jusiak\u0027s Website\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost-experimental.github.io/di/"\u003e[Boost].DI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost-experimental.github.io/sml/"\u003e[Boost].SML\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dyZVby-PuXM0"\u003eCppCon 2018: Kris Jusiak "State Machines Battlefield - Naive vs STL vs Boost"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d8HmjM3G8jhQ"\u003eCppCon 2018: Kris Jusiak "[Boost].DI - Inject all the things!"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dcomZthFv3PM"\u003eC++Now 2016: Kris Jusiak: A C++14 Dependency Injection Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dTorW5ekkL_w"\u003eConcepts driven design - Kris Jusiak - Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0592/"\u003eTechnologies used in the PVS-Studio code analyzer for finding bugs and potential vulnerabilities\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-01-17T00:00:00Z",
    },
    {
      id: 174,
      sourceId: 4,
      title: "Trivially Relocatable",
      link: "https://cppcast.com/arthur-odwyer/",
      description:
        'Rob and Jason are joined by Arthur O\u0027Dwyer to discuss board games, his 3 ISO C++ papers and much more!\n        \u003cp\u003eArthur O\u0027Dwyer started his career writing pre-C++11 compilers for Green Hills Software; he currently writes C++14 for Akamai Technologies. Arthur is the author of "Colossal Cave: The Board Game," "Mastering the C++17 STL" (the book), and "The STL From Scratch" (the training course). He is occasionally active on the C++ Standards Committee and has a blog mostly about C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/a7w347/add_an_interactive_command_line_to_your/"\u003eAdd an interactive command line to your applications\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://sean-parent.stlab.cc/2018/12/30/cpp-ruminations.html"\u003e"Modern" C++ Ruminations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mikelui.io/2019/01/03/seriously-bonkers.html"\u003eInitialization in C++ is Seriously Bonkers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/beached/cpp_feature_flags"\u003ecpp_feature_flags\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eArthur O\u0027Dwyer\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ColossalCaveTBG"\u003e@ColossalCaveTBG\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/"\u003eArthur O\u0027Dwyer\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://quuxplusone.github.io/Advent/"\u003eAdventure\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://boardgamegeek.com/boardgame/121751/colossal-cave-board-game"\u003eColossal Cave: The Board Game\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dhA1WNtNyNbo"\u003eCppCon 2018: Arthur O\u0027Dwyer "Return Value Optimization: Harder Than It Looks"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dsSlmmZMFsXQ"\u003eC++Now 2018: Jason Turner "Initializer Lists Are Broken, Let\u0027s Fix Them"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dIejdKidUwIg"\u003eCppCon 2018: Arthur O\u0027Dwyer "An Allocator is a Handle to a Heap"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dMWBfmmg8-Yo"\u003eC++Now 2018: Arthur O\u0027Dwyer "The Best Type Traits that C++ Doesn\u0027t Have"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dxxta6LEn9Hk"\u003eCppCon 2018: Arthur O\u0027Dwyer "Trivially Relocatable"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://p1144.godbolt.org/z/Qvyuvr"\u003eTrivially Relocatable on Compiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1154r0.html"\u003eP1154R0 Type traits for structural comparison\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1155r1.html"\u003eP1155R1 More implicit moves\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1144r1.html"\u003eP1144R1 Object relocation in terms of move plus destroy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2Cd8ayk"\u003eMastering the C++17 STL\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-01-10T00:00:00Z",
    },
    {
      id: 175,
      sourceId: 4,
      title: "ISO Papers and Merged Modules",
      link: "https://cppcast.com/isabella-muerte-iso-papers-merged-modules/",
      description:
        'Rob and Jason are joined by Isabella Muerte to discuss her experience presenting multiple papers at her first ISO meeting in San Diego and her thoughts on Merged Modules.\n        \u003cp\u003eIsabella Muerte is a C++ Bruja, Build System Titan, and an open source advocate. She cares deeply about improving the workflow and debugging experience the C++ community currently has and is designing and implementing an experimental next-generation build system called Coven based on ideas mentioned in her CppCon 2017 talk "There Will Be Build Systems", while also simultaneously ripping CMake apart and putting it back together again with a library titled IXM. She recently launched aliasa.io, a small URL routing service intended for the CMake FetchContent module. She enjoys playing Destiny 2, acquiring tattoos, and is currently trying to master the five elements of earth, wind, water, fire, and gun (but she makes no promises). She bows to no entity but the terrifying Eldritch Daystar we call the "sun", and hopes to one day own two german shepherds named Rip and Tear.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://aras-p.info/blog/2018/12/28/Modern-C-Lamentations/"\u003eModern C++ Lamentations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/2018/12/c-at-end-of-2018.html"\u003eC++ at the end of 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/getting-there-standardization-in-2019"\u003eGetting you there - your C++ standardization efforts in 2019\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/visualstudio/2018/12/05/visual-studio-intellicode-supports-more-languages-and-learns-from-your-code/"\u003eVisual Studio Intellicode\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eIsabella Muerte\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/slurpsmadrips"\u003e@slurpsmadrips\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.twitch.tv/slurpsmadrips"\u003eIsabella\u0027s Twitch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/slurps-mad-rips"\u003eIsabella\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://izzys.casa/"\u003eIsabella\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://aliasa.io/"\u003ealiasa.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0468r1.html"\u003eP0468R1 An Intrusive Smart Pointer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1272r0.html"\u003eP1272R0 Byteswapping for fun\u0026#38;\u0026#38;nuf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1275r0.html"\u003eP1275R0 Desert Sessions: Improving hostile environment interactions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1276r0.html"\u003eP1276R0 Void Main\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1279r0.html"\u003eP1279R0 std::breakpoint\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1280r0.html"\u003eP1280R0 Integer Width Literals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7THzO-D0ta4"\u003eCppCon 2017: Isabella Muerte "There Will Be Build Systems: I Configure Your Milkshake"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2019-01-03T00:00:00Z",
    },
    {
      id: 176,
      sourceId: 4,
      title: "Semantic Merge",
      link: "https://cppcast.com/pablo-santos/",
      description:
        'Rob and Jason are joined by Pablo Santos from Codice Software to discuss Semantic Merge, Plastic SCM and more.\n        \u003cp\u003ePrior to entering start-up mode to launch Plastic SCM back in 2005, Pablo worked as R\u0026#38;D engineer in fleet control software development (GMV, Spain) and later digital television software stack (Sony, Belgium). Then he moved to a project management position (GCC, Spain) leading the evolution of an ERP software package for industrial companies. During these years he became an expert in version control and software configuration management working as a consultant and participating in several events as a speaker. Pablo founded Codice Software in 2005 and since then is focused on his role as chief engineer designing and developing Plastic SCM and SemanticMerge among other SCM products.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ashampoosystems/boden"\u003eBoden Cross-platform Framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cjdb.com.au/sg20-and-videos"\u003eSG20 Education and Recommend Videos for Teaching C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2018/12/2019-call-for-submissions/"\u003eC++ Now Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/volunteer-and-student-programmes.html"\u003eC++ on Sea Volunteer and Student Programmes\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePablo Santos\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/psantosl"\u003ePablo Santos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://semanticmerge.com/"\u003eSemantic Merge\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.plasticscm.com/"\u003ePlastic SCM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.gmaster.io/"\u003egmaster\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.plasticscm.com/"\u003ePlastic SCM Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0592/"\u003eTechnologies used in the PVS-Studio code analyzer for finding bugs and potential vulnerabilities\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-12-21T00:00:00Z",
    },
    {
      id: 177,
      sourceId: 4,
      title: "San Diego EWGI Trip Report",
      link: "https://cppcast.com/jf-bastien-san-diego-ewgi/",
      description:
        'Rob and Jason are joined by JF Bastien from Apple to discuss the San Diego C++ Committee meeting from his perspective as the chair of the new Evolution Working Group Incubator.\n        \u003cp\u003eJF Bastien is the C++ lead for Apple\u0027s clang front-end, where he focuses on new language features, security, and optimizations. He‚Äôs an active participant in the C++ standards committee, where he chairs the Language Evolution Working Group Incubator (‚Äúoogie‚Äù for short). He previously worked on WebKit‚Äôs JavaScriptCore Just-in-Time compiler, on Chrome‚Äôs Portable Native Client, on a CPU\u0027s dynamic binary translator, and on flight simulators.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.therocode.net/2018/11/exploring-cpp-20-designated-initializers"\u003eExploring C++20 Designated initialisers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://mklimenko.github.io/english/2018/11/26/stdembed-for-the-poor/"\u003estd::embed for the poor (C++17)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/rangeof/"\u003eRangeOf: A better span\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJF Bastien\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jfbastien"\u003e@jfbastien\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/9vwvbz/2018_san_diego_iso_c_committee_trip_report_ranges/"\u003e2018 San Diego ISO C++ Committee Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/std/status"\u003eC++ Current Status\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0592/"\u003eTechnologies used in the PVS-Studio code analyzer for finding bugs and potential vulnerabilities\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-12-13T00:00:00Z",
    },
    {
      id: 178,
      sourceId: 4,
      title: "Performance Analysis and Optimization",
      link: "https://cppcast.com/denis-bakhvalov/",
      description:
        'Rob and Jason are joined by Denis Bakhvalov from Intel to discuss C++ performance analysis and optimization techniques\n        \u003cp\u003eDenis is C++ developer with almost 10 years of experience. Denis started his journey as a developer of desktop applications, then moved to embedded and now he works at Intel, doing C++ compiler development. He enjoys writing the fastest-possible code and staring at the assembly. Denis is a father of 2, he likes to play soccer and chess.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.conan.io/2018/11/21/MeetingCpp-trip-report.html"\u003eMeeting C++ / Embedded conan trip report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://aws.amazon.com/blogs/compute/introducing-the-c-lambda-runtime/"\u003eIntroducing the C++ Lambda Runtime\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/piotte13/SIMD-Visualiser?fbclid\u003dIwAR2h8A5pL2rkeDqBRefUFBbPzcnll-85plpxiYWgtCqwXU-GzHgHyp_310Y"\u003eSIMD Visualiser\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/12/04/cppliveshare/"\u003eAnnouncing Live Share for C++: Real-Time Sharing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDenis Bakhvalov\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dendibakh"\u003e@dendibakh\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dLxw3K37OP-w\u0026#38;feature\u003dyoutu.be"\u003eemBO++ 2018 Denis Bakhvalov about Dealing with performance analysis in C and C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://dendibakh.github.io/blog/2018/01/18/Code_alignment_issues"\u003eCode alignment issues\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://dendibakh.github.io/blog/2018/08/26/Basics-of-profiling-with-perf"\u003eBasics of profiling with perf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://dendibakh.github.io/blog/2018/09/04/Performance-Analysis-Vocabulary"\u003ePerformance analysis vocabulary\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-12-06T00:00:00Z",
    },
    {
      id: 179,
      sourceId: 4,
      title: "TDD, BDD, Low Latency and CppCon",
      link: "https://cppcast.com/lenny-maiorani/",
      description:
        'Rob and Jason are joined by Lenny Maiorani from Quantlab to discuss high performance computing, pair programming, volunteering for CppCon and the site of next year\u0027s CppCon.\n        \u003cp\u003eLenny has been using C++ off and on since 1995. Since graduating from SUNY Plattsburgh with a degree in Computer Science, he has been working at startups focused on high-throughput applications. About 2 years ago he joined Quantlab and discovered a different type of high-performance computing in low latency systems. Lenny lives in Denver, Colorado with his wife Lexey and their dog. He can be found hiking in the Colorado mountains while thinking about container access patterns and wondering if std::map can be renamed to std::ordered_map.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/11/27/better-template-support-and-error-detection-in-c-modules-with-msvc-2017-version-15-9/"\u003eBetter template support and error detection in C++ Modules with MSVC 2017 15.9\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/clion/whatsnew/"\u003eWhat\u0027s new in Clion 2018.3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arne-mertz.de/2018/11/string-not-for-raw-data/"\u003eStd::string is not a Container for Raw Data\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dSDJImePyftY"\u003eCounterpoint\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLenny Maiorani\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lennymaiorani"\u003e@lennymaiorani\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.quantlab.com/"\u003eQuantlab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dNMNOAoGjJ_4"\u003eCppCon 2014: Lightning Talks - Lenny Maiorani "Test-Drive Performance"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-11-29T00:00:00Z",
    },
    {
      id: 180,
      sourceId: 4,
      title: "SIMD Wrapper Libraries",
      link: "https://cppcast.com/jeff-amstutz-simd-wrapper-libs/",
      description:
        'Rob and Jason are joined by Jeff Amstutz to discuss SIMD and SIMD wrapper libraries.\n        \u003cp\u003eJeff is a Software Engineer at Intel, where he leads the open source OSPRay project. He enjoys all things ray tracing, high performance and heterogeneous computing, and code carefully written for human consumption. Prior to joining Intel, Jeff was an HPC software engineer at SURVICE Engineering where he worked on interactive simulation applications for the U.S. Army Research Laboratory, implemented using high performance C++ and CUDA.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/9xr4b5/trip_report_freestanding_in_san_diego/"\u003eFreestanding in San Diego\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.qt.io/blog/2018/11/19/getting-started-qt-webassembly/"\u003eGetting Started Qt with WebAssembly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2018/11/13/trip-report-fall-iso-c-standards-meeting-san-diego/"\u003eTrip Report: Fall ISO C++ standards meeting (San Diego)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJeff Amstutz\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jeffamstutz"\u003e@jeffamstutz\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d8khWb-Bhhvs"\u003eCppCon 2018: Jefferson Amstutz "Compute More in Less Time Using C++ SIMD Wrapper Libraries"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ospray/tsimd"\u003etsimd - Fundamental C++ SIMD types for Intel CPUs (sse to avx512)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.ospray.org/"\u003eOSPRay\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0579/"\u003eWe Checked the Android Source Code by PVS-Studio, or Nothing is Perfect\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-11-22T00:00:00Z",
    },
    {
      id: 181,
      sourceId: 4,
      title: "San Diego LEWG Trip Report",
      link: "https://cppcast.com/ashley-hedberg/",
      description:
        'Rob and Jason are joined by Ashley Hedberg to discuss the San Diego C++ Committee meeting from her perspective on the Library Evolution Working Group.\n        \u003cp\u003eAshley Hedberg has been working at Google for the last three years. She currently works on Abseil, an open-source collection of C++ library code designed to augment the C++ standard library. San Diego was her second WG21 meeting.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/writing-good-proposals"\u003eHow to Write a Good Proposal to C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hackmd.io/s/H19sHNB67#"\u003eTL:DR for #CppSan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/user/CppCon/playlists"\u003eCppCon Videos and Lightning Talks\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAshley Hedberg\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/aehedberg/"\u003eAshley Hedberg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ahedberg"\u003eAshley\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/9vwvbz/2018_san_diego_iso_c_committee_trip_report_ranges/"\u003e2018 San Diego ISO C++ Committee Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/std/status"\u003eC++ Current Status\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/"\u003eAbseil\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.includecpp.org/"\u003e#include \u003cC++\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0579/"\u003eWe Checked the Android Source Code by PVS-Studio, or Nothing is Perfect\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-11-15T00:00:00Z",
    },
    {
      id: 182,
      sourceId: 4,
      title: "Learning C++",
      link: "https://cppcast.com/devon-labrie/",
      description:
        'Rob and Jason are joined by Devon Labrie to discuss his experience learning C++ at Augusta Tech and being a first time attendee at CppCon.\n        \u003cp\u003eDevon is a 26 year old coming from a military family, he enjoys challenges physically and mentally, playing video games and creating them, learning, watching tv, puzzles, art, science, comedy, philosophy, programming and of course C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://mwoehlke.github.io/cps/"\u003eCommon Package specification\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cor3ntin.github.io/posts/modules/"\u003eModules are not a tooling opportunity\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2018/11/05/pre-trip-report-fall-iso-c-standards-meeting-san-diego/"\u003eHerb Pre-trip report\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDevon Labrie\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/labrie_devon"\u003e@labrie_devon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.augustatech.edu/"\u003eAugusta Technical College\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sfml-dev.org/"\u003eSFML\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.udemy.com/beginning-c-game-programming-part-1/"\u003eC++ Game Programming Udemy Course\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-11-08T00:00:00Z",
    },
    {
      id: 183,
      sourceId: 4,
      title: "C++ Bestiary",
      link: "https://cppcast.com/adi-shavit/",
      description:
        'Rob and Jason are joined by Adi Shavit to discuss his spooky C++ Bestiary Blog post, CppCon talks and an announcement from the Core C++ User Group in Israel.\n        \u003cp\u003eAdi is an entrepreneur, speaker, consultant, software architect and a computer vision and machine learning expert with an emphasis on real-time applications. He specializes in building cross-platform, high-performance software combined with high production quality and maintainable code-bases. Adi is the founder of the Core C++ users group in Israel.\u003cbr /\u003e\nHaving worked on proprietary software for most of his career, his most visible contribution to the world of open-source software is, somewhat ironically, the design of the OpenCV logo.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/full-schedule-now-available.html"\u003eC++ on Sea Schedule\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/9g3dkt/what_happens_in_2098_with_c/"\u003eWhat Happens in 2098 with C++?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/9llc9x/json_for_modern_c_version_330_released/"\u003eJSON For Modern C++ version 3.3.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/2018/Schedule.html"\u003eMeeting C++ 2018 Schedule\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/sandiego-2018-pregame-optional"\u003eSan Diego Pregame - Optional Choices to Make\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAdi Shavit\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/AdiShavit"\u003e@AdiShavit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://videocortex.io/"\u003eAdi Shavit\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://videocortex.io/2017/Bestiary/"\u003eThe C++ Bestiary\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://corecpp.org/"\u003eCore C++ Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/Ggyr/c-cryptozoology-a-compendium-of-cryptic-characters"\u003eC++ Cryptozoology - A Compendium of Cryptic Characters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnKM/the-salami-method-for-cross-platform-development"\u003eThe Salami Method of Cross Platform Development\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-11-01T00:00:00Z",
    },
    {
      id: 184,
      sourceId: 4,
      title: "Meeting C++ and Embedded",
      link: "https://cppcast.com/jens-weller-meeting-cpp-embedded/",
      description:
        'Rob and Jason are joined by Jens Weller to discuss the upcoming Meeting C++ and Meeting Embedded conferences as well as some new from the Meeting C++ platform.\n        \u003cp\u003eJens Weller is the organizer and founder of Meeting C++. Doing C++ since 1998, he is an active member of the C++ Community. From being a moderator at c-plusplus.de and organizer of his own C++ User Group since 2011 in D√ºsseldorf, his roots are in the C++ Community. Today his main work is running the Meeting C++ Platform (conference, website, social media and recruiting). His main role has become being a C++ evangelist, as this he speaks and travels to other conferences and user groups around the world.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2018/10/05/pros-cons-optional-references/"\u003eWhy optional references didn\u0027t make it into C++17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2018/10/2018-10-pre-san-diego-mailing-available"\u003e2018-10 pre-San Diego mailing available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/9kgl79/cppcon_2018_contest_results_the_most_awful/"\u003eCppCon 2018 Contest Results: the most awful, surprising, horrific, inventive, well-formed C++ construct you can fit in a tweet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dHddFGPTAmtU\u0026#38;list\u003dPLHTh1InhhwT6V9RVdFRoCG_Pm5udDxG1c"\u003eCppCon 2018 Videos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJens Weller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/meetingcpp"\u003e@meetingcpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/meetingcpp"\u003eJens Weller\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/2018/"\u003eMeeting C++ 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingembedded.com/2018/"\u003eMeeting Embedded 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/jobs/Meetingcpp_Recruiting.html"\u003eMeeting C++ Recruiting\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0579/"\u003eWe Checked the Android Source Code by PVS-Studio, or Nothing is Perfect\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-10-26T00:00:00Z",
    },
    {
      id: 185,
      sourceId: 4,
      title: "Compile Time Regular Expressions",
      link: "https://cppcast.com/hana-dusikova/",
      description:
        'Rob and Jason are joined by Hana Dus√≠kov√° to discuss her compile time regular expressions library, the Prague user group and her proposal for implicit constexpr.\n        \u003cp\u003eHana is working as a senior researcher in Avast Software. Her responsibility is exploring new ideas and optimizing existing ones. She also propagates modern C++ techniques and libraries in internal techtalks and gives talks at local C++ meetups. \u003c/p\u003e\n\u003cp\u003eShe studied computer science at Mendel university and subsequently taught several courses there, including: Data Structures, Computability and Complexity, and Formal Languages and Automata.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cfp.conference.accu.org/"\u003eACCU 2019 Call For Papers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2018/09/28/auto-stick-changing-style/"\u003e"auto to stick"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/9ldk8a/gnu_tools_cauldron_2018_videos/"\u003eGNU Tools Cauldron 2018 Videos online\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/visualstudio/2018/10/05/visual-studio-2017-and-visual-studio-for-mac-support-updates/"\u003eVisual Studio 2017 and Visual Studio for Mac Support Updates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHana Dus√≠kov√°\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/hankadusikova"\u003e@hankadusikova\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hanickadot"\u003eHana\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hanickadot/compile-time-regular-expressions"\u003eCompile Time Regular Expression v2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dekdWbrLXM7I"\u003eCppCon 2018: Hana Dus√≠kov√° "Compile Time Regular Expressions"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.hanicka.net/ctre/#/"\u003eCompile Time Regular Expressions Presentation Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/avast-prague-cpp/"\u003eAvast Prague C++ Meetup\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://open-std.org/JTC1/SC22/WG21/docs/papers/2018/p1235r0.pdf"\u003eP1235R0: Implicit constexpr\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0579/"\u003eWe Checked the Android Source Code by PVS-Studio, or Nothing is Perfect\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-10-19T00:00:00Z",
    },
    {
      id: 186,
      sourceId: 4,
      title: "WebAssembly and nxxm",
      link: "https://cppcast.com/damien-buhl/",
      description:
        'Rob and Jason are joined by Damien Buhl to discuss the current state of WebAssembly, nxxm and the belle::vue library.\n        \u003cp\u003eDamien was a Qt on Android Contributor which he presented at Droidcon 2011 in Berlin. He maintains ADAPT_STRUCT and Boost.Fusion. For a long time Damien worked for a 100 year old IoT company and now works on nxxm. He has a passion for C++ and JavaScript.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://radicalrafi.github.io/posts/pytorch-cpp-intro/"\u003eAn Introduction to Torch (PyTorch) C++ front end\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.knatten.org/2018/09/28/cppquiz-android-app-now-available/amp/?__twitter_impression\u003dtrue"\u003eCppQuiz Android App now available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/10/04/stdany-how-when-and-why/"\u003eStd::any: How, when and why\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDamien Buhl\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/daminetreg"\u003e@daminetreg\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://nxxm.github.io/"\u003enxxm\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/nxxm/bellevue"\u003ebelle::vue open source project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnKX/c-everywhere-with-webassembly"\u003eC++ Everywhere with WebAssembly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nxxm.github.io/cppcon2018/CPP_EVERYWHERE_WITH_WASM.html#/"\u003eC++ Everywhere with WebAssembly Slidedeck\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hacks.mozilla.org/2018/10/calls-between-javascript-and-webassembly-are-finally-fast-%F0%9F%8E%89/"\u003eCalls between Javascript and WebAssembly are finally fast\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-10-12T00:00:00Z",
    },
    {
      id: 187,
      sourceId: 4,
      title: "CppCon Lightning Interviews",
      link: "https://cppcast.com/cppcon-lightning/",
      description:
        'Rob and Jason give a brief trip report of CppCon before being joined by several guests who gave Lightning Talks at CppCon 2018.\n        \u003ch3\u003eLightning Talkers\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/anastasiak2512"\u003eAnastasia Kazakova\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/timur_audio"\u003eTimur Doumler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/phil_nash"\u003ePhil Nash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/staffan-tjernstr%C3%B6m-1375956/"\u003eStaffan Tjernstr√∂m\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/mattvonarx/"\u003eMatthew von Arx\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/fail_cluez"\u003eTony Wasserka\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/meetingcpp"\u003eJens Weller\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/annygakh"\u003eAnny G.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/stanimirovb"\u003eBorislav Stanimirov\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpplang.slack.com"\u003eEzra Chung (@eracpp on slack)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/jlleroy/"\u003eJean-Louis Leroy\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/9kcnfr/cppcon_2019_will_be_in_denver_colorado_usa_from/"\u003eCppCon 2019 will be in Denver, Colorado from September 15 to 20th\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dHddFGPTAmtU"\u003eCppCon 2018: Bjarne Stroustrup "Concepts: The Future of Generic Programming (the future is here)"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d2YXwg0n9e7E"\u003eCppCon 2018: Mark Elendt "Patterns and Techniques Used in the Houdini 3D Graphics Application"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dn0Ak6xtVXno"\u003eCppCon 2018: Kate Gregory "Simplicity: Not Just For Beginners"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d80BZxujhY38"\u003eCppCon 2018: Herb Sutter "Thoughts on a more powerful and simpler C++ (5 of N)"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d_f7O3IfIR2k"\u003eCppCon 2018: Chandler Carruth "Spectre: Secrets, Side-Channels, Sandboxes, and Security"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-10-04T00:00:00Z",
    },
    {
      id: 188,
      sourceId: 4,
      title: "CppCon Preview",
      link: "https://cppcast.com/bryce-lelbach-cppcon-preview/",
      description:
        'Rob and Jason are joined by Bryce Adelstein Lelbach to discuss his work on the upcoming CppCon conference, his thoughts on the graphics proposal and more.\n        \u003cp\u003eBryce Adelstein Lelbach is a software engineer on the CUDA driver team at NVIDIA. Bryce is passionate about parallel programming. He maintains Thrust, the CUDA C++ core library. He is also one of the initial developers of the HPX C++ runtime system. He spent five years working on HPX while he was at Louisiana State University\u0027s Center for ComCppputation and Technology, and three years at Lawrence Berkeley National Laboratory (a US Department of Energy research facility) developing and analyzing new parallel programming models for exascale and post-Moore architectures. He also helped start the LLVMLinux initiative, and has occasionally contributed to the Boost C++ libraries. Bryce is an organizer for the C++Now and CppCon conferences as well as the Bay Area C++ user group, and he is passionate about C++ community development. He is a member of the ISO C++ standard committee. He worked on the C++17 parallel algorithms; today, he works on standardizing better futures, executors, and multi-dimensional arrays.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cleanqt.io/blog/crash-course-in-qt-for-c%2B%2B-developers,-part-1"\u003eCrash course in Qt for C++ developers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/09/11/using-c17-parallel-algorithms-for-better-performance/"\u003eUsing C++ 17 Parallel Algorithms for Better Performance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/2018call-for-lightningtalks/"\u003eCppCon Lightning Talks and Challenge\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBryce Adelstein Lelbach\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/blelbach"\u003e@blelbach\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/brycelelbach"\u003eBryce Adelstein Lelbach\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/"\u003eCppCon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1062r0.html"\u003ep1062R0 Diet Graphics\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0579/"\u003eWe Checked the Android Source Code by PVS-Studio, or Nothing is Perfect\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-09-20T00:00:00Z",
    },
    {
      id: 189,
      sourceId: 4,
      title: "CppQuiz",
      link: "https://cppcast.com/anders-knatten/",
      description:
        'Rob and Jason are joined by Anders Knatten to discuss the CppQuiz.org website, it\u0027s inspiration, recent updates and more.\n        \u003cp\u003eAnders is here as the author of cppquiz.org. He\u0027s been working as a programmer since 2001, in fields ranging from multiphase flow simulations to web development. He‚Äôs been doing everything from working on compilers to being CTO, and has been using a wide variety of languages. C++ is closest to his heart, but he‚Äôs been doing other things for the last five years. He‚Äôs very happy to be back as a C++ developer from October 1, in his new job at Zivid Labs. Anders is also a father of two, and in his spare time he‚Äôs the producer and frontman of the futurepop band Modulo One.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/9dz8r5/c_alliance_sponsors_cpplang_slack_workspace_and/"\u003eC++ Alliance Sponsors Cpplang slack and more\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/vector-of-bool/cmrc"\u003eCMakeRC A standalone Cmake based C++ Resource Compiler\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnders Knatten\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.twitter.com/knatten"\u003e@knatten\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.knatten.org/"\u003eC++ on a Friday\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppquiz.org"\u003eC++Quiz\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.knatten.org/2018/03/02/non-virtual-destructors/"\u003eNon-virtual destructors\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.destroyallsoftware.com/talks/wat"\u003eDestroy All Software Lightning Talk\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.zividlabs.com/"\u003eZivid Labs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/ocppug/"\u003eOslo C++ Users Group\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/pvs-studio-download/"\u003eDownload PVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0579/"\u003eWe Checked the Android Source Code by PVS-Studio, or Nothing is Perfect\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-09-13T00:00:00Z",
    },
    {
      id: 190,
      sourceId: 4,
      title: "CppCon Poster Program and Interface Design",
      link: "https://cppcast.com/bob-steagall/",
      description:
        'Rob and Jason are joined by Bob Steagall to discuss his history with C++, the CppCon poster program and his upcoming talks.\n        \u003cp\u003eBob is a Principal Engineer with GliaCell Technologies.  He\u0027s been working almost exclusively in C++ since discovering the second edition of The C++ Programming Language in a college bookstore in 1992. The majority of his career was spent in medical imaging, where he led teams building applications for functional MRI and CT-based cardiac visualization. After a brief detour through the worlds of DNS and analytics, he\u0027s now working in the area of distributed stream processing. Bob is a relatively new member of the C++ Standardization Committee, and launched a blog earlier this year to write about C++ and topics related to software engineering. He holds BS and MS degrees in Physics, is an avid cyclist, and lives in fear of his wife\u0027s cats.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://frama-c.com/"\u003eFrama-C\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://frama-c.com/download/frama-c-wp-tutorial.pdf"\u003eFrama-C Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://frama-c.com/download/frama-c-wp-tutorial.pdf"\u003eFrama-Clang plugin\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://scottmeyers.blogspot.com/2018/09/the-errata-evaluation-problem.html"\u003eThe Errata Evaluation Problem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/08/30/use-the-official-boost-hana-with-msvc-2017-update-8-compiler/"\u003eUse Boost.Hana with MSVC 2017 Update 8\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2018/09/04/function-poisoning-in-cpp/"\u003eFunction poisoning in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBob Steagall\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/BobSteagall"\u003eBob Steagall\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bobsteagall.com/"\u003eThe State Machine\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dbAE0qteS4Rk"\u003eC++Now 2018: Bob Steagall "If I had My \u0027Druthers: A Proposal for Improving Containers in C++2x"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnLH/fancy-pointers-for-fun-and-profit"\u003eFancy Pointers for Fun and Profit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnLG/fast-conversion-from-utf-8-with-c-dfas-and-sse-intrinsics"\u003eFast Conversion From UTF-8 with C++, DFAs, and SSE Intrinsics\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FmfY/interface-design-for-modern-c"\u003eInterface Design for Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-09-07T00:00:00Z",
    },
    {
      id: 191,
      sourceId: 4,
      title: "Formal Verification",
      link: "https://cppcast.com/matt-fernandez/",
      description:
        'Rob and Jason are joined by Matt Fernandez from Intel Labs to discuss Formal Verification.\n        \u003cp\u003eMatthew Fernandez is a Research Scientist with Intel Labs. Matt began his programming career building Windows GUI applications and designing databases, before moving into operating system architecture and security. He has a PhD in formal verification of operating systems from the University of New South Wales in Australia, and worked with the Australian research group Data61. In the past, he has worked on compilers, device drivers and hypervisors, and now spends his days exploring new tools and techniques for functional correctness and verification of security properties. On the weekends, you can usually find Matt in a park with a good book, hunting for good coffee or helping a newbie debug their code. He hopes to avoid saying ‚Äúmonad‚Äù on this podcast.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/cpp17indetail/c/cppcast"\u003eC++17 in Detail now available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gustedt.wordpress.com/2017/08/08/cross-language-interfaces-between-c-and-c/"\u003eCross-language interfaces between C and C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.tartanllama.xyz/spaceship-operator/"\u003eSpaceship Operator\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Fernandez\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/wattsamata"\u003e@wattsamata\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://sel4.systems/"\u003eThe sel4 Microkernel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isabelle.in.tum.de/"\u003eIsabelle - Generic Proof Assistant\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://coq.inria.fr/"\u003eThe Coq Proof Assistant\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://rise4fun.com/dafny"\u003eDafny - Microsoft language and program verifier\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Z3Prover/z3"\u003eZ3 Theorem Prover\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-08-31T00:00:00Z",
    },
    {
      id: 192,
      sourceId: 4,
      title: "SYCL",
      link: "https://cppcast.com/gordon-brown/",
      description:
        'Rob and Jason are joined by Gordon Brown to discuss his work on SYCL the OpenCL abstraction layer for C++.\n        \u003cp\u003eGordon is a senior software engineer at Codeplay Software in Edinburgh, specialising in designing and implementing heterogeneous programming models for C++. Gordon spends his days working on ComputeCpp; Codeplay\u0027s implementation of SYCL and contributing to various standards bodies including the Khronos group and ISO C++. Gordon also co-organises the Edinburgh C++ user group and occasionally blogs about C++. In his spare time, Gordon enjoys dabbling in game development, board games and walking with his two dogs.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cppcon-2018-poster-program-announced/"\u003eCppCon 2018 Poster Program Announced\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ibob.github.io/blog/2018/08/18/a-bug-in-the-cpp-standard/"\u003eA bug in the C++ Standard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://zajo.github.io/boost-synapse/"\u003eSynapse submitted for Boost review\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cpplondonuni.com/"\u003eNew C++ London Uni Course Sept 18\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGordon Brown\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/AerialMantis"\u003e@AerialMantis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.aerialmantis.co.uk/"\u003eGordon Brown\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://sycl.tech/"\u003eSYCL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://codeplay.com/products/computesuite/computecpp"\u003eComputeCpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/parallel-programming-with-modern-cpp/"\u003eParallel Programming with Modern C++: from CPU to GPU\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0443r7.html"\u003eP0443r7: A Unified Executors Proposal for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dwr4YBDS-0Tc"\u003eCppCon 2017: Gordon Brown "Designing a Unified Interface for Execution"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dHH-ikWJ8cU4"\u003eSYCL building blocks for C++ libraries - Gordon Brown - Meeting C++ 2016\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0550/"\u003eFebruary 31\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-08-24T00:00:00Z",
    },
    {
      id: 193,
      sourceId: 4,
      title: "Sourcetrail",
      link: "https://cppcast.com/eberhard-grather/",
      description:
        'Rob and Jason are joined by Eberhard Gr√§ther to discuss his work on Sourcetrail, a cross-platform source explorer for C++ code.\n        \u003cp\u003eEberhard Gr√§ther is software developer, user experience designer and founder at Coati Software. He started programming C++ during his undergraduate CS degree at Salzburg University of Applied Sciences, majoring in game development. During multiple internships in the Google Chrome Team he worked on tools for rendering performance analysis. He then specialized in Human Computer Interaction and developer tooling during a Master\u0027s degree, where he started working on Sourcetrail, a cross-platform source explorer for faster understanding of unfamiliar source code.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/96sga1/cppcon2018_interactive_websites_using_boostbeast/"\u003eInteractive Websites: Using Boost.Beast WebSockets and Networking TS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/96zm16/new_educational_video_series_how_to_cmake_good/"\u003eNew Educational Video Series: How to CMake Good\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/08/13/using-msvc-in-a-docker-container-for-your-c-projects/"\u003eUsing MSVC in a Docker Container for your C++ projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/win-a-free-ticket-for-cpp-on-sea.html"\u003eWin a free ticket to C++ on Sea!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eEberhard Gr√§ther\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/egraether"\u003e@egraether\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://egraether.com/"\u003eegraether.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sourcetrail.com/"\u003eSourcetrail\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sourcetrail.com/blog/release_2018_3/"\u003eSourcetrail 2018.3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dfnIFVYFspfc"\u003eC++Now 2018: Eberhard Gr√§ther "The Untapped Potential of Software Visualization"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0550/"\u003eFebruary 31\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-08-17T00:00:00Z",
    },
    {
      id: 194,
      sourceId: 4,
      title: "The Art of C++ Libraries",
      link: "https://cppcast.com/colin-hirsch/",
      description:
        'Rob and Jason are joined by Colin Hirsch to discuss his work on The Art of C++ collection of libraries including PEGTL, json and more.\n        \u003cp\u003eDr. Colin Hirsch studied Computer Science at the University of Technology in Aachen, Germany in 1993 and later got a PhD in Mathematics from the same university. He worked for two years as a consultant for T-Mobile, developing back-end server applications in C++ and Lua. Later Colin moved to Italy, opened his own business and continued working for T-Mobile (now Deutsche Telekom) as well as working for some other interesting projects like Greenpeace and the Austrian ministry of ecology.\u003c/p\u003e\n\u003cp\u003eIn his free time he enjoys photography, being in nature, science fiction and spending time with his daughter.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/google/filament"\u003eGoogle Open Sources Filament rendering engine\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/"\u003eCppCon 2018 Program\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2018/08/survey-2018-08"\u003eC++ Foundation Survey 2018-08\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/news/registration-is-now-open-early-bird-tickets-available.html"\u003eC++ on Sea Early Bird Tickets Available\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eColin Hirsch\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ColinH?tab\u003dstars"\u003eColin Hirsch\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://taocpp.github.io/"\u003eThe Art of C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://umbrialogic.com/"\u003eUmbriaLogic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/taocpp/PEGTL"\u003ePEGTL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/taocpp/json"\u003ejson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/taocpp/postgres"\u003epostgres\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-08-09T00:00:00Z",
    },
    {
      id: 195,
      sourceId: 4,
      title: "Expectations and Exceptions",
      link: "https://cppcast.com/simon-brand-expectations-exceptions/",
      description:
        'Rob and Jason are joined by Sy Brand to discuss his upcoming CppCon talks covering exceptions, value wrappers, debuggers and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://nullprogram.com/blog/2018/07/20/"\u003eThe value of undefined behavior\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.qt.io/blog/2018/07/18/qt-creator-4-7-0-released/"\u003eQt Creator 4.7 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jefftrull.github.io/qt/c++/coroutines/2018/07/21/coroutines-and-qt.html"\u003eCoroutines and Qt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnJm/how-to-write-well-behaved-value-wrappers"\u003eCppCon 2018: How to Write Well-Behaved Value Wrappers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnJi/how-c-debuggers-work"\u003eCppCon 2018: How C++ Debuggers Work\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnKV/what-could-possibly-go-wrong-a-tale-of-expectations-and-exceptions"\u003eCppCon 2018: What Could Possibly Go Wrong? A Tale of Expectations and Exceptions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2018.sched.com/event/FnJj/overloading-the-bane-of-all-higher-order-functions"\u003eCppCon 2018: Overloading: The Bane of All Higher-Order Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://backtrace.io/?utm_source\u003dCppCast\u0026#38;utm_medium\u003dCppCast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-08-02T00:00:00Z",
    },
    {
      id: 196,
      sourceId: 4,
      title: "Parallel Ranges",
      link: "https://cppcast.com/chris-dibella-parallel-ranges/",
      description:
        'Rob and Jason are joined by Christopher Di Bella to discuss using Ranges with Parallel algorithms and much more.\n        \u003cp\u003eChristopher Di Bella is a Staff Software Engineer for Codeplay‚Äôs ComputeCpp Runtime Technology and a C++ teacher. He advocates for including the Concepts TS and the Ranges TS in C++20.\u003c/p\u003e\n\u003cp\u003eChris spends his days working on ComputeCpp, Codeplay‚Äôs implementation of SYCL, a Khronos Standard for heterogeneous programming in C++; the Khronos implementation for the Parallel STL (using SYCL); and researching Parallel Ranges, which is an attempt to fuse ranges together with the parallel STL.\u003c/p\u003e\n\u003cp\u003eChris was previously a software developer for Nasdaq, and a tutor for UNSW Sydney‚Äôs advanced C++ and compiler courses. In his spare time, Chris enjoys poking at things involving Ranges, snowboarding, playing games, and watching films.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLsCm1Hs016LW0zKJBvemhJ0YWIF1Fezd6"\u003eItalian C++ Conference Videos Available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/conan-io/conan/releases/tag/1.6.0"\u003eConan 1.6 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://reddit.com/r/cpp/comments/900dor/stdweb_view_proposal/"\u003eWebview proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/cli-support-comes-to-resharper-cpp/"\u003eC++/CLI support comes to ReSharper C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eChristopher Di Bella\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/cjdb_ns"\u003e@cjdb_ns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cjdb"\u003eChristopher Di Bella\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"mailto:cpp.standardisation.au@gmail.com"\u003ecpp.standardisation.au@gmail.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/generic-programming-2.0-with-concepts-and-ranges/"\u003eGeneric Programming 2.0 with Concepts and Ranges\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://wg21.link/p0836"\u003eP0836R1 Introduce Parallelism to the\nRanges TS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://git.io/vCUsT"\u003eSYCL Parallel STL\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0550/"\u003eFebruary 31\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-07-26T00:00:00Z",
    },
    {
      id: 197,
      sourceId: 4,
      title: "Design Patterns in Modern C++",
      link: "https://cppcast.com/dmitri-nesteruk-design-patterns/",
      description:
        'Rob and Jason are joined by Dmitri Nesteruk to discuss Design Patterns with Modern C++.\n        \u003cp\u003eDmitri Nesteruk is a quantitative analyst, developer, course and book author, and an occasional conference speaker.  His interests lie in software development and integration practices in the areas of computation, quantitative finance and algorithmic trading. His technological interests include C# and C++ programming as well high-performance computing using technologies such as CUDA and FPGAs.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/blog/20180713-coroutine-types"\u003eCoroutine types\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.quarkslab.com/easyjit-just-in-time-compilation-for-c.html"\u003eEasy::jit Just-In-Time compilation for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/8ydr5w/tool_to_recommend_noexcept_or_constexpr_for/"\u003eTool to recommend noexcept and constexpr\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDmitri Nesteruk\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dnesteruk"\u003e@dnesteruk\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/2y3HXzp"\u003eUdemy: Design Patterns in Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.apress.com/gb/book/9781484236024"\u003eDesign Patterns in Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/csharp_patterns"\u003eDesign Patterns in C#\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0550/"\u003eFebruary 31\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-07-19T00:00:00Z",
    },
    {
      id: 198,
      sourceId: 4,
      title: "Future of 2D Graphics Proposal",
      link: "https://cppcast.com/guy-davidson-future-2d-graphics/",
      description:
        'Rob and Jason are joined by Guy Davidson from Creative Assembly to discuss the future of the 2D Graphics proposal after the C++ meeting in Rapperswil.\n        \u003cp\u003eGuy Davidson is the Coding Manager of Creative Assembly, makers of the Total War franchise, Alien: Isolation and Halo Wars 2, Guy has been writing games since the early 1980s. He is now also a contributor to SG14, the study group devoted to low latency, real time requirements, and performance/efficiency especially for Games, Financial/Banking, and Simulations. He speaks at schools, colleges and universities about programming and likes to help good programmers become better programmers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/07/06/msvc-preprocessor-progress-towards-conformance/"\u003eMSVC Preprocessor progress towards conformance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/07/02/support-for-unity-jumbo-files-in-visual-studio-2017-15-8-experimental/"\u003eSupport for Unity Files in VS 2017 15.8 (Experimental)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Announcing-the-student-and-support-tickets-for-Meeting-Cpp-2018.html"\u003eAnnouncing student and support tickets for Meeting C++ 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cppcon-2018-call-for-poster-submissions/"\u003eCppCon 2018 Call for Poster Submissions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGuy Davidson\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/hatcat01"\u003e@hatcat01\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://hatcat.com/?p\u003d63"\u003eThe 2D Graphics TS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hatcat.com/?p\u003d48"\u003e2D or not 2D: that is the question: Rapperswil trip report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.io2d.org"\u003eio2d\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-07-12T00:00:00Z",
    },
    {
      id: 199,
      sourceId: 4,
      title: "Modern C++ in Embedded Systems",
      link: "https://cppcast.com/michael-caisse/",
      description:
        'Rob and Jason are joined by Michael Caisse from Ciere consulting to discuss Modern C++ in Embedded Systems, boostache and his work at Ciere Consulting and in the C++ Community.\n        \u003cp\u003eMichael Caisse has been crafting code in C++ for 28-years. He is a regular speaker at various conferences and is passionate about teaching and training. Michael is the owner of Ciere Consulting which provides software consulting and contracting services, C++ training, and Project Recovery for failing multidisciplinary engineering projects. When he isn\u0027t fighting with compilers or robots, he enjoys fencing with a sabre.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2018/07/02/trip-report-summer-iso-c-standards-meeting-rapperswil/"\u003eHerb Sutter Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/06/29/announcing-jmc-stepping-in-visual-studio/"\u003eAnnouncing C++ Just My Code Stepping in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/8sie4b/i_manage_the_release_cycle_for_cmake_the_build/"\u003ecmake release manager AMA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/callforspeakers/"\u003eC++ On Sea call for speakers still open\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMichael Caisse\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/MichaelCaisse"\u003e@MichaelCaisse\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.ciere.com/"\u003eciere consulting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dc9Xt6Me3mJ4"\u003eC++Now 2018: Michael Caisse "Modern C++ in Embedded Systems"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cierelabs/boostache"\u003eboostache\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/edh-cpp/"\u003eEl Dorado Hills C++ Meetup\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-07-05T00:00:00Z",
    },
    {
      id: 200,
      sourceId: 4,
      title: "SG15 Tooling Group",
      link: "https://cppcast.com/titus-winters-sg15-tooling-group/",
      description:
        'Rob and Jason are joined by Titus Winters from Google to discuss the SG15 Tooling Study Group and revisiting the concept of regular types.\n        \u003cp\u003eTitus Winters has spent the past 7 years working on Google\u0027s core C++ libraries. He\u0027s particularly interested in issues of large scale software engineer and codebase maintenance: how do we keep a codebase of over 100M lines of code consistent and flexible for the next decade? Along the way he has helped Google teams pioneer techniques to perform automated code transformations on a massive scale, and helps maintain the Google C++ Style Guide.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/lucasg/Dependencies"\u003eDependencies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/tvaneerd/cpp20_in_TTs"\u003eC++ 20 in Tony Tables\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/06/26/template-intellisense/"\u003eAnnouncing Template Intellisense\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://slashslash.info/eastconst/"\u003eEast const Central\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://botondballo.wordpress.com/2018/06/20/trip-report-c-standards-meeting-in-rapperswil-june-2018/"\u003eTrip Report: C++ Standards Meeting in Rapperswil, June 2018\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTitus Winters\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/tituswinters"\u003eTitus Winters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/mailman/listinfo/tooling"\u003eTooling - WG21 Tooling Study Group SG15\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/blog/20180531-regular-types"\u003eRevisiting Regular Types\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0550/"\u003eFebruary 31\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-06-28T00:00:00Z",
    },
    {
      id: 201,
      sourceId: 4,
      title: "C++ Insights",
      link: "https://cppcast.com/andreas-fertig/",
      description:
        'Rob and Jason are joined by Andreas Fertig to discuss C++ Insights, the Rapperswil ISO meeting and more.\n        \u003cp\u003eAndreas Fertig holds an M.S. in Computer Science from Karlsruhe University of Applied Sciences. Since 2010 he has been a software developer and architect for Philips Medical Systems focusing on embedded systems. He has a profound practical and theoretical knowledge of C++ at various operating systems. \u003c/p\u003e\n\u003cp\u003eHe works freelance as a lecturer and trainer. Besides this he develops macOS applications and is the creator of cppinsights.io.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cplusplus/draft/milestone/11"\u003ePost Rapperswil C++ Draft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cpp-taskflow/cpp-taskflow"\u003eCpp Taskflow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://rawgit.com/ThePhD/embed/master/papers/d1040%20-%20embed.html"\u003estd::embed updated proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2018/06/iso-cpp-committee-rapperswil-2018-trip-report/"\u003eJetBrains Rapperswil Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.theregister.co.uk/2018/06/18/bjarne_stroustrup_c_plus_plus/"\u003eWhat\u0027s all the C Plus Fuss? Bjarne Stroustrup warns of dangerous future plans for his C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAndreas Fertig\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/andreas__fertig"\u003e@andreas__fertig\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.andreasfertig.info/index.html"\u003eAndreas Fertig\u0027s website\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppinsights.io/"\u003eC++ Insights\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://shop.spreadshirt.de/cpp-insights"\u003eC++ Insights Store\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0550/"\u003eFebruary 31\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-06-21T00:00:00Z",
    },
    {
      id: 202,
      sourceId: 4,
      title: "Rapperswil Trip Report",
      link: "https://cppcast.com/trip-report/",
      description:
        'Rob and Jason discuss the Rapperswil trip report and other C++ news.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/visualstudio/2018/06/06/whats-next-for-visual-studio/"\u003eWhat\u0027s next for Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.microsoft.com/en-us/visualstudio/productinfo/vs2018-roadmap"\u003eVisual Studio Roadmap\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dBnYq7JapeDA"\u003eBuild the future of the web with WebAssembly and more (Google I/O \u002718)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://codelabs.developers.google.com/codelabs/hour-chipmunk/#0"\u003eWebAssembly Physics and DOM objects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1063r0.pdf"\u003e"Core Coroutines" proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linuxfoundation.org/blog/microsoft-buys-github-the-linux-foundations-reaction/"\u003eMicrosoft Buys GitHub: The Linux Foundation\u0027s Reaction\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eListener Survey\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/CppCastSurvey"\u003eCppCast Listener Survey\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-06-15T00:00:00Z",
    },
    {
      id: 203,
      sourceId: 4,
      title: "Vcpkg",
      link: "https://cppcast.com/robert-schumacher/",
      description:
        'Rob and Jason are joined by Robert Schumacher from Microsoft to discuss the vcpkg package manager and more.\n        \u003cp\u003eRobert Schumacher is a developer on the Microsoft Visual C++ Libraries team and the lead developer for vcpkg. He has previously worked on the MSVC implementation of the Modules TS and is the current maintainer of Cpprestsdk. Besides work, he occasionally indulges in functional programming and arguments about whether inheritance is fundamentally flawed.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@dmitryrastorguev/teach-yourself-c-where-to-start-ce496538c608"\u003eTeach yourself C++ Where to start\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/05/07/macro-expansions-in-quick-info-tooltips/"\u003eMacro Expansions in Quick Info Tooltips\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/meetingcpp/news/items/Call-for-a-more-diverse-program-at-Meeting-Cpp-2018-.html"\u003eCall for a more diverse program at Meeting C++ 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.conan.io/2018/05/30/New-conan-release-1-4.html"\u003eConan 1.4 released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRobert Schumacher\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ras0219-msft"\u003eRobert Schumacher\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Microsoft/vcpkg"\u003eVcpkg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vcpkg.readthedocs.io/en/latest/"\u003eVcpkg Docs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-06-07T00:00:00Z",
    },
    {
      id: 204,
      sourceId: 4,
      title: "C++ London Uni",
      link: "https://cppcast.com/tom-oliver-tristan/",
      description:
        'Rob and Jason are joined by Tom Breza, Oliver Ddin and Tristan Brindle to discuss the C++ London Uni group and their approach to teaching C++ to the community.\n        \u003cp\u003eTom arrived in London at age 22 with ¬£200 to his name, not knowing a single person.\nAfter 6 months Tom managed to start business - PC Service, that provides IT support to SMBs and runs it since then. Tom\u0027s team help many customers from small businesses to top celebrities and Royal Families.\nNow with over 20 years of experience, Tom set his mind on new challenges and decided to learn software development, specifically C++ and helps others to learn through C++ London Uni.\u003c/p\u003e\n\u003cp\u003eOliver has been a C++ hater since 2008 - fortunately, that all changed with C++11 and he\u0027s firmly an enthusiast now. He\u0027s spent his time doing everything from embedded devices to network engineering and now Internet security related endeavours. He\u0027s a big proponent of writing software in a style driven by some form of testing and its place in pushing you towards well-architected, maintainable code. In his spare time he also co-organises C++ London Uni which provides free lessons for people wanting to get into developing C++ and the wider ecosystem around it.\u003c/p\u003e\n\u003cp\u003eTristan is an independent contractor and C++ enthusiast based in London. He‚Äôs particularly interested in standardisation and making C++ an easier language to use and teach. He can be found on Twitter @tristanbrindle and occasionally blogs about C++ at tristanbrindle.com.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://open-std.org/JTC1/SC22/WG21/docs/papers/2018/p0977r0.pdf"\u003eBjarne Stroustrup P0977r0 "Remember the Vasa"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2018/05/25/celebration-of-towel-day-with-your-awesome-pieces-of-code-that-print-42/"\u003eCelebration of Towel Day with awesome pieces of code that print 42\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pacificplusplus.com/"\u003ePacific++ Call for Speakers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://old.reddit.com/r/cpp/comments/8knuf6/cppcon_call_for_program_committee_members/"\u003eCppCon Call for Program Committee Members\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTom Breza\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/TomBreza"\u003e@TomBreza\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eOliver Ddin\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Olipro"\u003e@olipro\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTristan Brindle\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/tristanbrindle"\u003e@tristanbrindle\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cpplondonuni.com/"\u003eC++ London Uni\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0509/"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-05-31T00:00:00Z",
    },
    {
      id: 205,
      sourceId: 4,
      title: "sol2 and std::embed",
      link: "https://cppcast.com/jeanheyd-meneide/",
      description:
        'Rob and Jason are joined by JeanHeyd Meneide to discuss the sol2 library and his proposal for std::embed.\n        \u003cp\u003eThePhD -- known in meatspace as JeanHeyd -- is a Computer Science undergraduate at the Fu Foundation School of Engineering in Columbia University. They are currently working on Open Source C++ and C++ Standardization projects, as well as exploring graphics programming. They are currently dabbling with Haskell and Elm for fun, and are attempting to wrangle their biggest open source project -- sol2 -- into a newer, better version of itself. The nickname is a std::promise\u0026#60;\u0026#62; on their std::future\u0026#60;\u0026#62;.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://quuxplusone.github.io/blog/2018/05/17/super-elider-round-2/"\u003eSuperconstructing super elider, Pt2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://maddphysics.com/2018/05/16/cnow-2018-trip-report/"\u003eMatthew Butler\u0027s C++Now 2018 Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.elbeno.com/blog/?p\u003d1569"\u003eBen Deane\u0027s C++Now 2018 Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bunnyladame.blogspot.com/2018/05/a-cppnow-travel-guide.html"\u003eA CPPNow Travel Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://xania.org/201805/cppnow-trip-report"\u003eMatt Godbolt\u0027s C++Now Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/2018/05/15/C++Now-Trip-Report.html"\u003eThePHD\u0027s C++Now 2018 Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJeanHeyd Meneide\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/thephantomderp"\u003e@thephantomderp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://thephd.github.io/"\u003eJeanHeyd\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ThePhD/sol2"\u003esol2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p1040r0.html"\u003ep1040R0 std::embed\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0509/"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-05-24T00:00:00Z",
    },
    {
      id: 206,
      sourceId: 4,
      title: "Freestanding Proposal",
      link: "https://cppcast.com/ben-craig/",
      description:
        'Rob and Jason are joined by Ben Craig to discuss his proposal for a freestanding C++ Library.\n        \u003cp\u003eBen is a Principal Software Engineer at National Instruments, primarily developing device drivers for various operating systems (Windows, Linux, Mac, OpenRTOS, vxWorks, ETS Pharlap), and occasionally tinkering with the firmware side of things.  Ben is an occasional contributor to libc++ and Apache Thrift.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mluparu/status/994315571901681664"\u003eConvert Macro to Constexpr in VS 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/regopen2018/"\u003eCppCon 2018 Registration is Open\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2018/BRK2146"\u003eHow to Adopt Modern C++17 into your C++ Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2018/BRK2139"\u003e7++ Reasons to Move Your C++ Code into Visual Studio 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/events/Build/2018/BRK2425"\u003eEffective C++/WinRT for UWP and Win32\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppinsights.io/"\u003eC++ Insights\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2018/p0709r0.pdf"\u003eP0709 Zero overhead deterministic exceptions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBen Craig\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ben-craig"\u003eBen Craig\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ben-craig/freestanding_proposal"\u003eFreestanding Proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/86mopg/freestanding_trip_report_embo_and_jacksonville/"\u003eFreestanding Trip Report: emBO++ and Jacksonville wg21 2018 experience\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0509/"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-05-17T00:00:00Z",
    },
    {
      id: 207,
      sourceId: 4,
      title: "CppChat",
      link: "https://cppcast.com/phil-nash-cppchat/",
      description:
        'Rob and Jason are joined by Phil Nash to discuss the rebooted CppChat show, test driven development, a conference announcement and much more.\n        \u003cp\u003ePhil has spent the last year and a half doing things that might sound interesting for the next time he‚Äôs interviewed on CppCast. He might have overdone it. Aside from that he‚Äôs most commonly known as the original author of the test framework, Catch2. He‚Äôs been in or around C++ since the early 90s, but started coding in 1981 on a ZX-81 that he borrowed for six months. He‚Äôs worked in many domains, including finance and mobile and is now developer advocate for C++ and Swift tools at JetBrains.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://jay.bazuzi.com/Safely-extract-a-method-in-any-C++-code/"\u003eSafely extract a method in any C++ code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://speaker.pacificplusplus.com/"\u003ePacific++ Call for Speakers until June 17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingembedded.com/2018/"\u003eMeeting Embedded Call for Speakers until June 10\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/mcpp/submittalk/"\u003eMeetingC++ Call for Speakers until June 10\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cfs2018/"\u003eCppCon call for submissions until May 11\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePhil Nash\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/phil_nash/"\u003e@phil_nash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://levelofindirection.com/"\u003eLevel of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://extralevelofindirection.com/"\u003eExtra Level of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://anotherlevelofindirection.com/"\u003eAnother Level of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://slashslash.info/cppchat/"\u003eCppChat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d3tIE6X5FjDE"\u003eModern C++ testing with Catch2 - Phil nash - Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpponsea.uk/"\u003eC++ on Sea\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0509/"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-05-10T00:00:00Z",
    },
    {
      id: 208,
      sourceId: 4,
      title: "C++ Simplicity",
      link: "https://cppcast.com/kate-gregory-cpp-simplicity/",
      description:
        'Rob and Jason are joined by Kate Gregory to discuss her recent talk at ACCU, Pluralsight courses and include C++.\n        \u003cp\u003eKate Gregory has been using C++ since before Microsoft had a C++ compiler, and has been paid to program since 1979. She loves C++ and believes that software should make our lives easier. That includes making the lives of developers easier! She\u0027ll stay up late arguing about deterministic destruction or how C++ these days is not the C++ you remember.\u003c/p\u003e\n\u003cp\u003eKate runs a small consulting firm in rural Ontario and provides mentoring and management consultant services, as well as writing code every week. She has spoken all over the world, written over a dozen books, and helped thousands of developers to be better at what they do. Kate is a Microsoft Regional Director, a Visual C++ MVP, an Imagine Cup judge and mentor, and an active contributor to StackOverflow and other StackExchange sites. She develops courses for Pluralsight, primarily on C++ and Visual Studio. Since 2014 she was Open Content Chair for CppCon, the largest C++ conference ever held, where she also delivered sessions.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://slashslash.info/cppchat/"\u003eCppChat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2Ib5LZJ"\u003eDesign Patterns in Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/04/24/announcing-a-single-c-library-manager-for-linux-macos-and-windows-vcpkg/"\u003eAnnouncing a single C++ library manager for linux, macOS and Windows: vcpkg\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://docs.conan.io/en/latest/changelog.html#april-2018"\u003eConan 1.3.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2018/04/30/march-2018-iso-c-meeting-trip-report/"\u003eMarch 2018 ISO C++ Meeting Trip Report (SG1 Concurrency and Parallelism)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKate Gregory\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/gregcons"\u003e@gregcons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gregcons.com/kateblog/"\u003eKate Gregory\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtTexD26jIN4"\u003eMeeting C++ 2017 - Kate Gregory: "It\u0027s Complicated"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dO50qTuM5OT0"\u003eACCU 2018 - Kate Gregory: "Simplicity: not just for beginners"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dARosL9xrozk"\u003eMeeting C++ 2017 - Kate Gregory: "5 Things I figured out while..."\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.pluralsight.com/courses/cplusplus-fundamentals-c17"\u003ePluralsight: C++ Fundamentals Including C++17\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0509/"\u003eThe Evil within the Comparison Functions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatreon\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-05-03T00:00:00Z",
    },
    {
      id: 209,
      sourceId: 4,
      title: "C++ Patterns",
      link: "https://cppcast.com/kevlin-henney/",
      description:
        'Rob and Jason are joined by Kevlin Henney to discuss C++ Patterns and things every programmer should know.\n        \u003cp\u003eKevlin Henney is an independent consultant, speaker, writer and trainer. His development interests are in patterns, programming, practice and process. He has been a columnist for a number of magazines and sites, including C++ Report and C/C++ Users Journal, and has been on far too many committees (it has been said that "a committee is a cul-de-sac down which ideas are lured and then quietly strangled"), including the the BSI C++ panel and the ISO C++ standards committee. He is co-author of A Pattern Language for Distributed Computing and On Patterns and Pattern Languages, two volumes in the Pattern-Oriented Software Architecture series. He is also editor of 97 Things Every Programmer Should Know and the forthcoming 97 Things Every Java Programmer Should Know. He lives in Bristol and online.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/04/20/spectre-diagnostic-in-visual-studio-2017-version-15-7-preview-4/"\u003eSpectre diagnostic in VS 2017 Version 15.7 Preview 4\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtGhhV2kfJ-w"\u003eMicrosoft MakeCode: from C++ to TypeScript and Blockly (and Back)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://fosdem.org/2018/schedule/event/web_development_in_c/"\u003eIntroduction to web development in C++ with WT 4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKevlin Henney\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/KevlinHenney"\u003e@KevlinHenney\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@kevlinhenney"\u003eKevlin Henney\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2KjlqEK"\u003ePattern-Oriented Software Architecture\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://amzn.to/2I4WWOY"\u003e97 Things Every Programmer Should Know\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmrY6xrWp3Gs"\u003eACCU 2018 - Kevlin Henney: "Procedural Programming: It\u0027s Back? It Never Went Away"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-04-26T00:00:00Z",
    },
    {
      id: 210,
      sourceId: 4,
      title: "CppDock and nbdl",
      link: "https://cppcast.com/jason-rice/",
      description:
        'Rob and Jason are joined by Jason Rice to discuss C++ Web Application Development and his libraries CppDock and nbdl.\n        \u003cp\u003eJason is a web applications programmer with an appetite for C++ metaprogramming having made small contributions to Boost.Hana. He is actively working on the library Nbdl, waiting for the day when C++ takes over the web. \u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.includecpp.org/"\u003e#include C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://nullprogram.com/blog/2018/04/13/"\u003eBlast from the Past: Borland C++ on Windows 98\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lists.boost.org/boost-users/2018/04/88553.php"\u003eBoost 1.67.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJason Rice\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/JasonRice_"\u003e@JasonRice_\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ricejasonf"\u003eJason Rice\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ricejasonf/cppdock"\u003eCppDock\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ricejasonf/nbdl"\u003eNbdl\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dHgLPaHJV4Lo"\u003eC++Now 2017: Jason Rice "Nbdl: A library that uses metaprogramming... A lot"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/pvs-studio"\u003ePVS-Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-04-19T00:00:00Z",
    },
    {
      id: 211,
      sourceId: 4,
      title: "Blogging and Text Processing",
      link: "https://cppcast.com/bartlomiej-filipek/",
      description:
        'Rob and Jason are joined by Bart≈Çomiej Filipek to discuss blogging, Simplifying C++ Code with C++17, and the work he\u0027s doing at Xara.\n        \u003cp\u003eBart≈Çomiej Filipek (Bartek as a shorter version) is a C++ software developer at Xara where he works mostly on text features for advanced document editors. He works remotely from Cracow/Poland. \nApart from graphics applications, Bartek also has experience with game development, large-scale systems for aviation, writing graphics drivers and even biofeedback.\nFor seven years Bartek has been regularly blogging. In the early days the topic revolved around graphics programming, and now he focuses on Core C++. \nIn his spare time, he loves assembling trains and Lego with his little son. And he\u0027s a collector of large Lego Star Wars models.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cfs2018/"\u003eCppCon 2018 call for submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://slashslash.info/2018/04/talk_ideas/"\u003eDeveloping Talk Ideas\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/89q6wr/sg13_2d_graphics_why_it_failed/"\u003eSG13 graphics why it failed\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Microsoft/winfile"\u003eSource to windows file manager released (not C++, it is C)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://florianjw.de/en/octal_zero_considered_harmfull.html"\u003eOctal Zero considered harmful\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://shop.spreadshirt.com/CppCast/"\u003eCppCast Gear\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBart≈Çomiej Filipek\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/fenbf"\u003e@fenbf\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/"\u003eBartek\u0027s coding blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bfilipek.com/p/cpp17.html"\u003eC++17 Resources\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.xara.com/"\u003eXara\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://shared.xara.com/SjOgDeu29z/"\u003eXara Cloud: Getting Started\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/C-User-Group-Cracow/"\u003eC++ User Group Krakow\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/CppCast"\u003eCppCast Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-04-12T00:00:00Z",
    },
    {
      id: 212,
      sourceId: 4,
      title: "News Roundup",
      link: "https://cppcast.com/news-episode-jacksonville/",
      description:
        'Rob and Jason discuss Jacksonville trip reports, April Fools posts and more.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2018/04/deprecating-pointers.html#"\u003eDeprecating Raw Pointers in C++20\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/no-new-new"\u003eNo new new: Raw pointers removed from C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2018/04/01/cpp-will-no-longer-have-pointers/"\u003eC++ will no longer have pointers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stellar-group.org/2018/03/hpx-1-1-0-released/"\u003eHPX 1.1.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/86mopg/freestanding_trip_report_embo_and_jacksonville/"\u003eFreestanding trip report: emBO++ and Jacksonville\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hatcat.com/?p\u003d33"\u003eOh, lock-free circular buffers, yay! Hey, no 2D graphics? Jacksonville trip report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2018/03/iso-cpp-committee-jacksonville-2018-trip-report-2/"\u003eJetBrains Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2018/03/clion-2018-1-cpp17-wsl-cmake-install/"\u003eClion 2018.1 release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cmake.org/cmake/help/v3.11/release/3.11.html"\u003eCmake 3.11 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/03/27/configuring-c-intellisense-and-browsing/"\u003eConfiguring C++ Intellisense and Browsing\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eListener Survey\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/CppCastSurvey"\u003eCppCast Listener Survey\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-04-05T00:00:00Z",
    },
    {
      id: 213,
      sourceId: 4,
      title: "C++ and Typescript at Ubisoft Massive",
      link: "https://cppcast.com/olafur-waage/",
      description:
        'Rob and Jason are joined by √ìlafur Waage to discuss the work done at Ubisoft Massive using C++ and Typescript for application development and much more.\n        \u003cp\u003e√ìlafur Waage is a Generalist Programmer at Ubisoft Massive where he works on the Uplay PC client and services. His work focuses mainly on programming with C++ but Python and C# do appear from time to time. In his spare time he plays video games which is not surprising given his job but he also likes puzzles, non fiction audio books and it would be a very strange day if it were not filled with music in some way.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppdepend.com/blog/?p\u003d678"\u003eExplore the design of a modern C++ library: MemCache++ case study\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developers.redhat.com/blog/2018/03/15/gcc-8-usability-improvements/"\u003eUsability improvements in GCC 8\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://belkadan.com/blog/2018/03/My-Little-Optimization/"\u003eMy Little Optimization: The Compiler is Magic\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/directx/2018/03/19/announcing-microsoft-directx-raytracing/"\u003eAnnouncing Microsoft DirectX Raytracing!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003e√ìlafur Waage\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/olafurw"\u003e@olafurw\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/olafurw"\u003e√ìlafur Waage\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/Malmo-C-User-Group/"\u003eMalm√∂ C++ User Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.massive.se/"\u003eMassive Entertainment\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eListener Survey\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bit.ly/CppCastSurvey"\u003eCppCast Listener Survey\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-03-29T00:00:00Z",
    },
    {
      id: 214,
      sourceId: 4,
      title: "Jacksonville Trip Report",
      link: "https://cppcast.com/patrice-roy-jacksonville-trip-report/",
      description:
        'Rob and Jason are joined by Patrice Roy to discuss the Jacksonville C++ Committee meeting and the state of features that may make it into C++20, new Study Groups and much more.\n        \u003cp\u003ePatrice Roy has been playing with C++, either professionally, for pleasure or (most of the time) both for over 20 years. After a few years doing R\u0026#38;D and working on military flight simulators, he moved on to academics and has been teaching computer science since 1998. Since 2005, he‚Äôs been involved more specifically in helping graduate students and professionals from the fields of real-time systems and game programming develop the skills they need to face today‚Äôs challenges. The rapid evolution of C++ in recent years has made his job even more enjoyable.\u003c/p\u003e\n\u003cp\u003eHe‚Äôs been a participating member in the ISO C++ Standards Committee since late 2014 and has been involved with the ISO Programming Language Vulnerabilities since late 2015. He has five kids, and his wife ensures their house is home to a continuously changing number of cats, dogs and other animals.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow2018.sched.com/"\u003eC++Now 2018 schedule online\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://zverovich.net/2018/03/17/text-formatting-jacksonville.html"\u003eText Formatting at the ISO C++ Standards meeting in Jacksonville\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/854mu9/2018_jacksonville_iso_c_committee_reddit_trip/"\u003e2018 Jacksonville ISO C++ Committee Reddit Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatrice Roy\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/PatriceRoy1"\u003e@PatriceRoy1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://h-deb.clg.qc.ca/"\u003ePatrice Roy\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://open-std.org/JTC1/SC22/WG21/docs/papers/2018/n4716.html"\u003eISO C++ Jacksonville Agenda\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-03-22T00:00:00Z",
    },
    {
      id: 215,
      sourceId: 4,
      title: "News Roundup",
      link: "https://cppcast.com/news-episode-pi-day/",
      description:
        'Rob and Jason discuss catch up on two weeks\u0027 worth of C++ news on a very special Pi day episode.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/files/papers/n4730.pdf"\u003eWG21 pre-Jacksonville telecon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2018/03/results-summary-cpp-foundation-developer-survey-lite-2018-02"\u003eResults summary: C++ Foundation Developer Survey\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/03/13/clangformat-support-in-visual-studio-2017-15-7-preview-1/"\u003eClangFormat Support in Visual Studio 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/03/13/c-code-analysis-improvements-for-visual-studio-2017-15-7-preview-1/7"\u003eC++ Code Analysis Improvements for Visual Studio 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/03/13/linux-c-workload-improvements-to-the-project-system-linux-console-window-rsync-and-attach-to-process/"\u003eLinux C++ Workload improvements to the Project System, Console Window, rsync and Attach to Process\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lists.llvm.org/pipermail/llvm-announce/2018-March/000077.html"\u003eLLVM 6.0 Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://engineering.riotgames.com/news/profiling-optimisation"\u003eProfiling: Optimisation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2018/03/ifconstexpr.html"\u003eSimplify code with \u0027if constexpr\u0027 in C++17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.knatten.org/2018/03/09/lvalues-rvalues-glvalues-prvalues-xvalues-help/"\u003eLvalues, rvalues, glvalues, prvalues, xvalues, help!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/tips/55"\u003eTip of the Week #55: Name Counting and unique_ptr\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-03-15T00:00:00Z",
    },
    {
      id: 216,
      sourceId: 4,
      title: "Conference News and CppChat",
      link: "https://cppcast.com/jon-kalb-cppchat/",
      description:
        'Rob and Jason are joined by Jon Kalb to discuss upcoming C++ conferences, CppChat and east const.\n        \u003cp\u003eJon does onsite training in C++ and chairs C++Now, CppCon, and the Boost Steering Committee.\u003c/p\u003e\n\u003cp\u003eNext month he will be speaking at the ACCU conference in Bristol, and keynoting the C++ Russia conference in Saint Petersburg.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.davidecoppola.com/2018/02/market-share-most-used-c-cpp-ides-in-2018-statistics-estimates/"\u003eMarket share of the most used C/C++ IDEs in 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hackernoon.com/a-cake-for-your-cherry-what-should-go-in-the-c-standard-library-804fcecccef8"\u003eA cake for your cherry, what should go in the C++ standard library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hatcat.com/?p\u003d16"\u003eBatteries not included: what should go in the C++ standard library?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7zoz2v/cmake_311_add_library_and_add_executable_commands/"\u003eCMake 3.11: "add_library() and add_executable() commands can now be called without any sources and will not complain as long as sources are added later via the target_sources()\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJon Kalb\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/_jonkalb"\u003e@_jonkalb\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.slashslash.info/"\u003e// info - Jon Kalb\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/"\u003eC++Now\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2018/02/2018-registration-is-open/"\u003eC++Now 2018 Registration is Open\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/announcements/2018/02/2018-call-for-student-volunteers/"\u003eC++Now Accepting Student/Volunteer Applications\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/"\u003eCppCon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bit.ly/CppCommunityCalendar"\u003eC++ Community Events\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.slashslash.info/2018/02/a-foolish-consistency/"\u003eA Foolish Consistency\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.think-cell.com/cppcast"\u003ethink-cell software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-03-01T00:00:00Z",
    },
    {
      id: 217,
      sourceId: 4,
      title: "Competitive Coding",
      link: "https://cppcast.com/conor-hoekstra/",
      description:
        'Rob and Jason are joined by Conor Hoekstra to discuss Competive Coding websites and competitions.\n        \u003cp\u003eConor Hoekstra works at Moody\u0027s Analytics as a C++ Software Developer helping maintain and develop an insurance software program called AXIS. Wanting to develop better algorithm and data structure knowledge he started using online sites like HackerRank and LeetCode to do so. He now has a YouTube channel where he reviews the contests from the last week of Competitive Coding sites like HackerRank, LeetCode, topcoder and Codeforces) and also covers solutions to the trickier problems.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://research.fb.com/announcing-tensor-comprehensions/"\u003eAnnouncing Tensor Comprehensions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/wiki/SummerOfCode"\u003eGoogle summer of code for GCC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/pacificplusplus/status/963359490388131840"\u003ePacific++ 2018 location and dates confirmed\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d2KGkcGtGVM4\u0026#38;list\u003dPLRyNF2Y6sca3EUO_RTNv5t7gUmppFl9R1"\u003e59+ videos now up from Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/"\u003eCppNow Registration Open\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eConor Hoekstra\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/code_report"\u003e@code_report\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.youtube.com/c/codereport"\u003eCode_Report YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.hackerrank.com/"\u003eHackerRank\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leetcode.com/"\u003eLeetCode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.topcoder.com/"\u003eTopCoder\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://codeforces.com/"\u003eCodeForces\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.think-cell.com/cppcast"\u003ethink-cell software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-02-23T00:00:00Z",
    },
    {
      id: 218,
      sourceId: 4,
      title: "API \u0026 ABI Versioning",
      link: "https://cppcast.com/mathieu-ropert/",
      description:
        'Rob and Jason are joined by Mathieu Ropert to discuss C++ API \u0026#38; ABI compatibility issues and Modern CMake.\n        \u003cp\u003eMathieu is a french C++ expert with an eclectic background. He\u0027s worked in various fields including kernels, virtualization, web development, databases, REST microservices, build systems and package management, all those in (or about) C or C++. \nHe is presently awaiting his next challenge in the video game industry that should come up next May in Stockholm, Sweden. \nUntil then, Mathieu lives and works in Paris, France where he is also host of the C++ French User Group.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/blog/items/Cpp-in-2018.html"\u003eC++ in 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/inspector-repl/inspector"\u003eInspector - A drop-anywhere C++ REPL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppdepend.com/blog/?p\u003d319"\u003eThe 15 C++11 features you must really use in your project\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMathieu Ropert\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://twitter.com/MatRopert"\u003e@MatRopert\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dIa3IDPjA-d0"\u003eCppCon 2017: Mathieu Ropert "API \u0026#38; ABI Versioning..."\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003deC9-iRN2b04\u0026#38;t\u003d4s"\u003eCppCon 2017: Mathieu Ropert "Using Modern CMake Patterns to Enforce a Good Modular Design"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dXWRbbTVcZwQ"\u003eMeeting C++ 2017: Mathieu Ropert "The need for a package manager interface"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://rix0r.nl/blog/2015/08/13/cmake-guide/"\u003eThe Ultimate Guide to Modern CMake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bincrafters.github.io/"\u003eBincrafters Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.think-cell.com/cppcast"\u003ethink-cell software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-02-16T00:00:00Z",
    },
    {
      id: 219,
      sourceId: 4,
      title: "Qt Mobile Development",
      link: "https://cppcast.com/sarah-smith/",
      description:
        'Rob and Jason are joined by Sarah Smith to talk about her career in Mobile Development with C++ and Qt.\n        \u003cp\u003eSarah Smith comes to mobile development \u0026#38; entrepreneurship with a background in Software Engineering for companies like Nokia \u0026#38; Google, and over a decade of mobile device experience.\u003c/p\u003e\n\u003cp\u003eShe builds on a love of game development since creating Dungeons \u0026#38; Dragons modules on her own web-server while studying for a BSc (Comp Sci) in the late 90\u0027s. Realizing a goal to develop independent games \u0026#38; apps, Sarah opened Smithsoft in 2012.\u003c/p\u003e\n\u003cp\u003eIn January 2016 development went to the next level with Sarah moving to The Coterie (Brisbane\u0027s premier creative co-working space) to set up a studio as Smithsoft Games. The new studio\u0027s first title Pandora\u0027s Books was developed by Sarah and her team of part-time collaborators through 2016.\u003c/p\u003e\n\u003cp\u003eIn 2017 Sarah founded Artlife Solutions Pty Ltd with a team out of the Creative Startup Weekend, winning first prize there, going on to win a spot in Collider Accelerator 2017. Currently working on Sortal - the startup\u0027s revolutionary AI powered photo software - Sarah is responsible for all things tech including the scalable architecture, mobile implementation and deep-learning technology.\u003c/p\u003e\n\u003cp\u003eSarah is an international speaker and expert in creative teams and agile projects; mobile development and technical architecture for apps. She has worked for a decade in her discretionary time on diversity in hiring and helping women coders.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7vdpyu/outcome_accepted_into_the_boost_c_libraries/"\u003eOutcome accepted into Boost\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7unskl/c_modules_working_draft_n4720/"\u003eC++ Modules, Working Draft N4720\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.computer.org/web/pressroom/computer-pioneer-2018"\u003eDr Bjarne Stroustrup Named Recipient of the 2018 IEEE-CS Computer Pioneer Award\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSarah Smith\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://twitter.com/sarah_j_smith"\u003e@sarah_j_smith\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/sarah-j-smith/"\u003eSarah Smith on LinkedIn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/sarah-j-smith/"\u003eSarah Smith\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dh4VFP2oXKeU"\u003ePacific++ 2017: Sarah Smith "Postcards from the Cross-platform Frontier"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d-kgOsoTti4M"\u003eQt DevDays 2011, 3D-Programming Using Qt Quick on N9, Part 2: Sarah Smith\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.mysortal.com/"\u003eSortal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://smithsoft.online/"\u003eSmithsoft\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.think-cell.com/cppcast"\u003ethink-cell software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-02-09T00:00:00Z",
    },
    {
      id: 220,
      sourceId: 4,
      title: "foonathan/type_safe and more",
      link: "https://cppcast.com/jonathan-muller-type-safe/",
      description:
        'Rob and Jason are joined by Jonathan M√ºller to talk about his experience at University and some of his recent projects.\n        \u003cp\u003eJonathan is a CS student passionate about C++. In his spare time he writes libraries like foonathan/memory which provides memory allocator implementations. He is also working on standardese which is a documentation generator specifically designed for C++. Jonathan tweets at @foonathan and blogs about various C++ and library development related topics at foonathan.net.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/ml/gcc/2018-01/msg00197.html"\u003eGCC 7.3 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.codeproject.com/Articles/1227392/Cplusplus-Tip-Erase-remove-Idiom-Revisited"\u003eC++ Tip: Erase-remove Idiom Revisited\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.bishopfox.com/case_study/securing-beast/"\u003eBeast: A Non-Traditional Source Code Review\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/inclusiveness-accessibility-and-cppcon-2017-videos/"\u003eInclusiveness, accessibility and CppCon 2017 videos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJonathan M√ºller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/foonathan"\u003e@foonathan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://foonathan.github.io/"\u003efoonathan::blog()\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/foonathan/type_safe"\u003etype_safe library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/foonathan/cppast"\u003ecppast library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/foonathan"\u003eJonathan M√ºller\u0027s Patreon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-02-01T00:00:00Z",
    },
    {
      id: 221,
      sourceId: 4,
      title: "Think-Cell Ranges",
      link: "https://cppcast.com/arno-schodl/",
      description:
        'Rob and Jason are joined by Arno Sch√∂dl to talk about the work he does at think-cell with C++ and their custom range library.\n        \u003cp\u003eArno Sch√∂dl, Ph.D. is the Co-Founder and Technical Director of think-cell Software GmbH, Berlin.\nthink-cell is the de facto standard when it comes to professional presentations in Microsoft PowerPoint. Arno is responsible for the design, architecture and development of all our software products. He oversees think-cell‚Äôs R\u0026#38;D team, Quality Assurance and Customer Care.\nBefore founding think-cell, Arno worked at Microsoft Research and McKinsey \u0026#38; Company. Arno studied computer science and management and holds a Ph.D. from the Georgia Institute of Technology with a specialization in Computer Graphics.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dh4VFP2oXKeU"\u003ePacific++ 2017: Sarah Smith "Postcards from the Cross-platform Frontier"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7rdjch/outcome_v2_boost_peer_review_begins/"\u003eOutcome v2 Boost peer review begins\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.cppcms.com/"\u003eCppCMS C++ Web Framework version 1.2.0 released under MIT license\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2018/01/15/spectre-mitigations-in-msvc/"\u003eSpectre mitigations in MSVC\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eArno Sch√∂dl\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/company/overview.shtml"\u003eArno Sch√∂dl\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/think-cell/range"\u003ethink-cell range library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/career/talks/overview.shtml"\u003ethink-cell Talks and Publications\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/company/news/2013-02-26/"\u003ethink-cell Funds the Working Group for Programming Languages of the German Institute for Standardization (DIN)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/company/news/overview.shtml"\u003ethink-cell Sponsors the Standard C++ Foundation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/career/jobs/development.shtml"\u003ethink-cell C++ Jobs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.think-cell.com/en/career/overview.shtml#worklife"\u003eWork Life at think-cell\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-01-25T00:00:00Z",
    },
    {
      id: 222,
      sourceId: 4,
      title: "Data Oriented Design",
      link: "https://cppcast.com/balazs-torok/",
      description:
        'Rob and Jason are joined by Bal√°zs T√∂r√∂k to talk about his work in the Video Game Industry and his thoughts on Data Oriented Design.\n        \u003cp\u003eBal√°zs T√∂r√∂k is a Senior Tech Programmer at Techland. He has more than 10 years of experience in the games industry. Bal√°zs learned the ropes at Hungarian companies by making smaller titles and then moved to Poland to work on The Witcher series. He was the Lead Engine programmer on The Witcher 3 and now he is working at Techland on another promising project.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dIPhvL3A-e6E"\u003eMatt Godbolt: Meltdown and Spectre\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/channel/UCuCjADS4u3uJDTqUaG0H9dA"\u003eCppCast YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://books.goalkicker.com/CPlusPlusBook/"\u003eFree ebook on C++ Notes for Professionals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.conan.io/2018/01/10/Conan-C-C++-Package-Manager-Hits-1.0.html"\u003eConan C/C++ Package Manager hits 1.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/raphaelsc/Am-I-affected-by-Meltdown"\u003eMeltdown checker/PoC written in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7GIZN03-_6w"\u003eGuy Davidson - Diversity and Inclusion - Secret Lightning Talks @ Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBal√°zs T√∂r√∂k\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/m0radin"\u003e@m0radin\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003drX0ItVEVjHc"\u003eCppCon 2014: Mike Acton "Data-Oriented Design and C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://stackoverflow.com/questions/1641580/what-is-data-oriented-design"\u003eStackOverflow: What is Data Oriented Design?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-01-18T00:00:00Z",
    },
    {
      id: 223,
      sourceId: 4,
      title: "Meltdown and Spectre",
      link: "https://cppcast.com/matt-godbolt-meltdown-spectre/",
      description:
        'Rob and Jason are joined by Matt Godbolt to talk about the Meltdown and Spectre vulnerabilities and how they affect C++ Programmers.\n        \u003cp\u003eMatt is a developer at trading firm DRW.  Before that he\u0027s worked at Google, run a C++ tools company, and spent over a decade in the games industry making PC and console games.  He is fascinated by performance and created Compiler Explorer, to help understand how C++ code ends up looking to the processor.  When not performance tuning C++ code he enjoys writing emulators for 8-bit computers in Javascript.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://en.wikibooks.org/wiki/More_C%2B%2B_Idioms"\u003eMore C++ Idioms\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/tips/"\u003eC++ Tips of the Week (Abseil)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://support.google.com/faqs/answer/7625886"\u003eRetpoline: a software construct for preventing branch-target-injection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7o9kg6/gcc_80_support_stdfilesystem_include_filesystem/"\u003eGCC 8.0 supports std::filesystem now\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Godbolt\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mattgodbolt"\u003e@mattgodbolt\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://xania.org/"\u003eMatt Godbolt\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://godbolt.org/"\u003eCompiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dbSkpMdDe4g4"\u003eCppCon 2017: Matt Godbolt "What Has My Compiler Done for Me Lately? Unbolting the Compiler\u0027s Lid"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7WuRq-Wmw5o"\u003eGOTO 2016: Matt Godbolt "Emulating a 6502 system in Javascript"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dhgcNM-6wr34"\u003eGOTO 2014: Matt Godbolt "x86 Internals for Fun \u0026#38; Profit"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.patreon.com/mattgodbolt"\u003ePatreon: Matt Godbolt is creating Compiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://randomascii.wordpress.com/2018/01/07/finding-a-cpu-design-bug-in-the-xbox-360/"\u003eFinding a CPU Design Bug in the Xbox 360\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meltdownattack.com/"\u003eMeltdown and Spectre\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kb.cert.org/vuls/id/584653"\u003eVulnerability Note VU#584653\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-01-11T00:00:00Z",
    },
    {
      id: 224,
      sourceId: 4,
      title: "Boost Application Development",
      link: "https://cppcast.com/antony-polukhin/",
      description:
        'Rob and Jason are joined by Antony Palukhin to talk about some of the Boost libraries he\u0027s contributed to including Any, Conversion, DLL, LexicalCast, Stacktrace, TypeTraits and Variant; as well as his Boost Application Development book.\n        \u003cp\u003eAntony Polukhin was born in Russia. Since university days he started contributing to Boost and became a maintainer of the Boost.LexicalCast library.\u003c/p\u003e\n\u003cp\u003eToday, he works for Yandex, helps Russian speaking people with C++ standardization proposals, consults Russian companies in C++, continues to contribute to the open source and to the C++ language in general.\u003c/p\u003e\n\u003cp\u003eYou may find his code in Boost libraries such as Any, Conversion, DLL, LexicalCast, Stacktrace, TypeTraits, Variant, and others.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/tbfleming/cib"\u003eClang Running in Browser (Web Assembly)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtTexD26jIN4"\u003eKate Gregory - It\u0027s Complicated - Meeting C++ 2017 Keynote\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.viva64.com/en/b/0549/"\u003eSpeeding up the Build of C and C++ Projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7mn2rk/c17_constexpr_everything_or_as_much_as_the/"\u003eC++17 constexpr everything (or as much as the compiler can)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAntony Polukhin\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/apolukhin"\u003eAntony Polukhin\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://apolukhin.github.io/"\u003eAntony Polukhin\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/2CHHEPA"\u003eBoost C++ Application Development Cookbook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.boost.org/"\u003eBoost C++ Libraries\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://stdcpp.ru/"\u003eStdCppRu\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://t.me/ProCxx"\u003eTelegram C++ Channel\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://undo.io/"\u003eUndo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://embo.io"\u003eEmbo++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2018-01-04T00:00:00Z",
    },
    {
      id: 225,
      sourceId: 4,
      title: "C++ Object Model",
      link: "https://cppcast.com/nicole-mazzuca/",
      description:
        'Rob and Jason are joined by Nicole Mazzuca to talk about the C++ Object Model, and some of the differences between Rust and C++.\n        \u003cp\u003eNicole is someone who\u0027s thought a bit too much about object models and error handling. She started in C, moved to Rust, and then fell into C++ a year ago. She also loves coffee, and latte art.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/7iw2ki/meson_build_system_release_0440_is_out/"\u003eMeson 0.44.0 is out\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2017/12/cppnow-2018-call-for-submissions"\u003eC++Now 2018 Call for submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/12/03/msvc-code-optimizer-improvements-in-visual-studio-2017-versions-15-5-and-15-3/"\u003eMSVC code optimizer improvements in Visual Studio 2017 version 15.5 and 15.3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/12/13/broken-warnings-theory/"\u003eBroken warnings theory\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNicole Mazzuca\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ubsanitizer"\u003e@ubsanitizer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ubsan"\u003eNicole Mazzuca\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003duYDt1gCDxhM"\u003eCppCon 2017: Nicole Mazzuca "Values, Objects, and References, oh my: The C++ Object Model, and Why it Matters to You"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://undo.io/"\u003eUndo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.audibletrial.com/cppcast"\u003eAudible\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-12-21T00:00:00Z",
    },
    {
      id: 226,
      sourceId: 4,
      title: "Reverse Debugging",
      link: "https://cppcast.com/greg-law-reverse-debugging/",
      description:
        'Rob and Jason are joined by Dr. Greg Law from Undo to talk about the magic of reverse debugging and how it is becoming more widely known in the programming community.\n        \u003cp\u003eGreg is the co-founder and CEO of Undo. He is a coder at heart, but likes to bridge the gap between the business and software worlds. (Sadly, these days most of Greg\u0027s coding is done on aeroplanes.)\u003c/p\u003e\n\u003cp\u003eGreg has 20 years‚Äô experience in the software industry and has held development and management roles at companies including the pioneering British computer firm Acorn, as well as fast-growing start ups, NexWave and Solarflare. It was at Acorn that Greg met Julian and on evenings and weekends, they invented the core technology that would eventually become UndoDB. Greg left Solarflare in 2012 to lead Undo as CEO and has overseen the company as it transitioned from the shed in his back garden to a scalable award-winning business.\u003c/p\u003e\n\u003cp\u003eGreg holds a PhD from City University, London, that was nominated for the 2001 British Computer Society Distinguished Dissertation Award. He lives in Cambridge, UK with his wife and two children and in his spare time, catches up on email.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://jeffamstutz.io/2017/12/07/building-a-c-simd-abstraction-1-n-motivation/"\u003eBuilding a C++ SIMD abstraction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/12/08/c17-feature-removals-and-deprecations/"\u003eC++17 Feature Removals and Deprecations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.tartanllama.xyz/exception-data/"\u003eA call for data on exceptions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGreg Law\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/gregthelaw"\u003e@gregthelaw\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://undo.io/"\u003eUndo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://undo.io/resources/blog-articles/"\u003eUndo Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://undo.io/resources/blog-articles/reverse-debugging-time-travel-debugging-brief-hist/"\u003eReverse debugging / time-travel debugging: a brief history of time\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d-n9Fkq1e6sg"\u003eCppCon 2016: Greg Law "GDB - A Lot More Than You Knew"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dl1YJTg_A914"\u003eCppCon 2017: J. McNellis, J. Mola, K. Sykes "Time Travel Debugging"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-12-14T00:00:00Z",
    },
    {
      id: 227,
      sourceId: 4,
      title: "C++ Tour, Compilers and FASTBuild",
      link: "https://cppcast.com/arvid-gerstmann/",
      description:
        'Rob and Jason are joined by Arvid Gerstmann from Appico to talk about bringing his new C++ Tour project, building your own C Compiler, using FASTBuild and more.\n        \u003cp\u003eArvid Gerstmann is a passionate programmer and computer enthusiast, with a focus on writing high-performance C++. His area of expertise include, but is not limited to, writing compilers, implementing the included standard libraries, and creating game engines and games. He\nis currently the CTO of Appico. If he is not programming, he enjoys reading books while drinking a nice cup of self-brewed coffee. He currently lives in the sunny Hamburg, Germany.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/ml/libstdc++/2017-11/msg00112.html"\u003eIntel offers Parallel STL implementation to GNU libstdc++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://foonathan.net/blog/2017/12/04/exceptions-vs-expected.html"\u003eExceptions vs expected: Let\u0027s find a compromise\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jupyter.org/interactive-workflows-for-c-with-jupyter-fe9b54227d92"\u003eInteractive workflows for C++ with Jupyter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.iso.org/standard/68564.html"\u003eC++17 published\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2018-conference/announcements/2017/12/03/call-for-submission.html"\u003eC++Now Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/emBOconference/status/933655518454910976"\u003eEmbo++ call for papers and ticket are for sale\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eArvid Gerstmann\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ArvidGerstmann"\u003e@ArvidGerstmann\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.arvid.io/"\u003eArvid Gerstmann\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Leandros/"\u003eArvid Gerstmann\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://appico.com/"\u003eAppico\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Leandros/cpp-tour"\u003eCpp Tour\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fastbuild.org/docs/home.html"\u003eFASTBuild\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://leanpub.com/effective-cmake"\u003eKai Wolf\u0027s Effective CMake Book\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://undo.io/"\u003eUndo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-12-07T00:00:00Z",
    },
    {
      id: 228,
      sourceId: 4,
      title: "Clang Power Tools",
      link: "https://cppcast.com/victor-ciura/",
      description:
        'Rob and Jason are joined by Victor Ciura from Caphyon to talk about bringing clang tidy magic to Visual Studio C++ Developers with Clang Power Tools.\n        \u003cp\u003eVictor Ciura is a Senior Software Engineer at \u003ca href\u003d"http://www.caphyon.com/"\u003eCAPHYON\u003c/a\u003e and Technical Lead on the \u003ca href\u003d"http://www.advancedinstaller.com"\u003eAdvanced Installer\u003c/a\u003e team.\nFor over a decade, he designed and implemented several core components and libraries of Advanced Installer such as: IIS, Repackager, OS virtualization and others.  \u003c/p\u003e\n\u003cp\u003eHe‚Äôs a regular guest at Computer Science Department of his Alma Mater, University of Craiova, where he gives student lectures \u0026#38; workshops on ‚ÄúUsing C++STL for Competitive Programming and Software Development‚Äù.  \u003c/p\u003e\n\u003cp\u003eCurrently, he spends most of his time working with his team on improving and extending the repackaging and virtualization technologies in Advanced Installer, helping clients migrate their Win32 desktop apps to the Windows Store (AppX).\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.tartanllama.xyz/meetingcpp-2017/"\u003eSy Brand Meeting C++ Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lewissbaker.github.io/2017/11/17/understanding-operator-co-await"\u003eC++ Coroutines: Understanding operator co_await\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.kitware.com/cmake-3-10-0-available-for-download/"\u003eCmake 3.1.0 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://patviafore.com/2017/11/22/launching-tech-talks-in-your-workplace/"\u003eLaunching Tech Talks in your workplace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@SaraJChipps/an-important-list-for-your-holiday-my-favorite-coding-toys-of-2017-b60ba3ad523e"\u003e2017 Coding Toys\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eVictor Ciura\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ciura_victor"\u003e@ciura_victor\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.advancedinstaller.com/"\u003eAdvanced Installer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.caphyon.com/"\u003eCaphyon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://clangpowertools.com/"\u003eClang Power Tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Caphyon/clang-power-tools"\u003eClang Power Tools GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dWl-9ozmxXbo"\u003eCppCon 2017: Victor Ciura "Bringing Clang-tidy Magic to Visual Studio C++ Developers"\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-11-30T00:00:00Z",
    },
    {
      id: 229,
      sourceId: 4,
      title: "Oculus Research",
      link: "https://cppcast.com/dave-moore/",
      description:
        'Rob and Jason are joined by Dave Moore from Oculus Research to talk about the Oculus C++ SDK and Augmented Reality.\n        \u003cp\u003eDave Moore started programming after getting fired from his college work study job. This worried his parents, but it seems to have worked out in the end. After spending 17 years in and around the computer games industry, most recently at RAD Game Tools, he\u0027s now a software engineer at Oculus Research, working to advance the computer vision technology underlying virtual and augmented reality.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.leaningtech.com/cheerp/"\u003eCheerp the C++ compiler for the Web\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/oldnewthing/20171117-00/?p\u003d97416"\u003eThe wrong way of benchmarking the most efficient integer comparison function\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/pacxx/pacxx-llvm"\u003eProgramming Accelerators with C++ (PACXX)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://foonathan.net/blog/2017/11/20/standard-library.html"\u003eWhat should be part of the C++ standard library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDave Moore\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dmmfix"\u003e@dmmfix\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://developer.oculus.com/"\u003eOculus Developer Center\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.oculus.com/research/"\u003eOculus Research\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAtyE5qOB4gw\u0026#38;t\u003d360s"\u003eOculus Connect 3 Opening Keynote: Michael Abrash\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-11-23T00:00:00Z",
    },
    {
      id: 230,
      sourceId: 4,
      title: "VS Code",
      link: "https://cppcast.com/rong-lu/",
      description:
        'Rob and Jason are joined by Rong Lu to talk about C++ support with the Visual Studio Code Editor and some of the recent improvements made to it.\n        \u003cp\u003eRong Lu is a Program Manager in the Visual C++ team at Microsoft. She has been on the Visual Studio team since she graduated with her master degree in computer science 10 years ago. She currently works on Visual Studio tools for games, C++ mobile, and the C++ experience in Visual Studio Code. Before joining the C++ team, she spent 4 years building the VS SharePoint and architecture tools.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2017/11/11/trip-report-fall-iso-c-standards-meeting-albuquerque/"\u003eTrip Report: Fall ISO C++ Standards meeting (Albuquerque)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLd4OrpVodmxUf6WsIJhb2KvYaq9RBuIr3"\u003ePacific++ Videos Available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/11/01/cppwinrt-is-now-included-the-windows-sdk/"\u003eC++/WinRT is now included in the Windows SDK\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://swdevmastery.com/dont-use-c-auto-restricting-auto-is-not-the-best-decision-for-your-company-and-it-is-unfair-to-your-developers-instead-train-them-on-how-to-use-it/"\u003eDon\u0027t use C++ auto?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.levelofindirection.com/journal/2017/11/3/catch2-released.html"\u003eCatch2 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.levelofindirection.com/journal/2017/11/6/the-worlds-first-distributed-c-meet-up.html"\u003eLondon and Sweden distributed meetup writeup\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRong Lu\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/davorabbit"\u003e@davorabbit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://code.visualstudio.com/"\u003eVisual Studio Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://marketplace.visualstudio.com/items?itemName\u003dms-vscode.cpptools"\u003eC++ for Visual Studio Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003drFdJ68WbkdQ"\u003eCppCon 2017: Rong Lu "C++ Development with Visual Studio Code"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/11/09/visual-studio-code-cc-extension-nov-2017-update-multi-root-workspaces-support-is-here/"\u003eVisual Studio Code C/C++ extension Nov 2017 Update - Multi-root workspaces support is here!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/"\u003eVisual C++ Team Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-11-16T00:00:00Z",
    },
    {
      id: 231,
      sourceId: 4,
      title: "Pacific++ Road Show",
      link: "https://cppcast.com/pacific-road-show/",
      description:
        'Rob and Jason discuss recent news and the first ever Pacific++ conference in New Zealand.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/pacificplusplus/status/924188094470819840"\u003eNext Pacific++ Location\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://pfultz2.com/blog/2017/10/27/universal-package-manager/"\u003eDoes C++ need a universal package manager\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jacquelinekay/petra"\u003ePetra: C++17 runtime to compile-time mappings\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Shows/C9-GoingNative/Bjarne-Stroustrup-Interview-at-cppcon-2017"\u003eBjarne Stroustrup Interview at CppCon 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.infoq.com/news/2017/10/cpp-17-herb-sutter-interview"\u003eC++17 is Here: Interview with Herb Sutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dfX2W3nNjJIo\u0026#38;list\u003dPLHTh1InhhwT6bwIpRk0ZbCA0N2p1taxd6"\u003eCppCon 2017 Talks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtQudpkiQ2RA\u0026#38;list\u003dPLHTh1InhhwT55y4fRRTBIelxnRSZ8G5yg"\u003eCppCon 2017 Lightning Talks\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-11-02T00:00:00Z",
    },
    {
      id: 232,
      sourceId: 4,
      title: "Build Systems and Modules",
      link: "https://cppcast.com/isabella-muerte-build-systems-modules/",
      description:
        'Rob and Jason are joined by Isabella Muerte to talk about her recent talk at CppCon 2017 where she discussed some of her concerns with the Modules TS.\n        \u003cp\u003eIsabella Muerte is a C++ Bruja and Build System Trash Goblin. She taught herself to program by writing a build system and immediately regretting the decision. Her first computer ran Windows Millennium Edition and her parents forbade her from upgrading to anything else for 5 years. She is still bitter about this. In her spare time, she is into open source software, tattoos, computer keyboards, and making fake cover bands like \u0027Rage Against the Abstract Machine\u0027\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/75gohf/i_just_found_a_use_for_the_poop_emoji_in_c/"\u003eA use for the poop emoji in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/c-core-guidelines-class-hierarchies"\u003eC++ Core Guidelines: Class Hierarchies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2017/10/10/partitioning-with-the-stl/"\u003ePartitioning with the STL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.theatlantic.com/technology/archive/2017/09/saving-the-world-from-code/540393/"\u003eThe Coming Software Apocalypse\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eIsabella Muerte\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/slurpsmadrips"\u003e@slurpsmadrips\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://izzys.casa/posts/millennials-are-killing-the-modules-ts.html"\u003eMillennials Are Killing the Modules TS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d7THzO-D0ta4"\u003eCppCon 2017: Isabella Muerte "There Will Be Build Systems: I Configure Your Milkshake"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-10-26T00:00:00Z",
    },
    {
      id: 233,
      sourceId: 4,
      title: "Grace Hopper Conference",
      link: "https://cppcast.com/gina-stephens/",
      description:
        'Rob and Jason are joined by Gina Stephens to talk about the C++ Foundations presence at the Grace Hopper Conference, the St Louis C++ Meetup and a proposal for a new access specifier.\n        \u003cp\u003eGina Stephens is a software engineer with over 20 years\u0027 experience, 13 of those years leading development teams. Most of her experience has been with C++, in addition to Java, .NET and various scripting language.  The breadth of her development experience includes DOD, FDA, DOI, Hospitality, and Finance.\u003c/p\u003e\n\u003cp\u003eGina has a Bachelors in Computer Science from MS\u0026#38;T in Rolla, MO and a Masters in Computer Science from the University of Missouri ‚Äì STL. She also founded and runs the STL C++ User Group.\u003c/p\u003e\n\u003cp\u003eGina is also a Desert Storm Air Force veteran during which she worked on the B-52 bombers that were carpet-bombing Iraq. She is happily married with 2 sons, both of whom are serving in the US Navy.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.phoronix.com/scan.php?page\u003dnews_item\u0026#38;px\u003dFacebook-GCC-CXX-Modules"\u003eFacebook Has Been Working On C++ Modules Support For GCC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://nullprogram.com/blog/2017/10/06/"\u003eA Branchless UTF-8 Decoder\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://caspervonb.github.io/toneofsorting/"\u003eInteractive Auralization and Visualization of Sorting Algorithms\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2017/10/jb-cpp-at-cppcon-2017/"\u003eTrip Report JetBrains at CppCon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGina Stephens\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/ginasousan/"\u003eGina Stephens\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://ghc.anitab.org/"\u003eGrace Hopper Celebration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/Saint-Louis-C-C-Meetup/"\u003eSt Louis C++ Meetup\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-10-19T00:00:00Z",
    },
    {
      id: 234,
      sourceId: 4,
      title: "Abseil",
      link: "https://cppcast.com/titus-winters-abseil/",
      description:
        'Rob and Jason are joined by Titus Winters from Google to talk about the Open Sourcing of Google\u0027s Abseil library.\n        \u003cp\u003eTitus Winters has spent the past 6 years working on Google\u0027s core C++ libraries. He\u0027s particularly interested in issues of large scale software engineer and codebase maintenance: how do we keep a codebase of over 100M lines of code consistent and flexible for the next decade? Along the way he has helped Google teams pioneer techniques to perform automated code transformations on a massive scale, and helps maintain the Google C++ Style Guide.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.elbeno.com/blog/?p\u003d1542"\u003eCppCon 2017 Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://deque.blog/2017/10/04/my-cppcon-2017-trip-report-10-great-talks-to-watch-and-learn-from/"\u003eMy CppCon 2017 Trip Report - 10 great talks to watch and learn from\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kdevelop.org/news/kdevelop-52-beta1-released"\u003eKdevelop 5.2 beta 1 released\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTitus Winters\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/tituswinters"\u003eTitus Winters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://abseil.io/"\u003eAbseil\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtISy7EJQPzI"\u003eCppCon 2017: Titus Winters C++ as a "Live at Head Language"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-10-12T00:00:00Z",
    },
    {
      id: 235,
      sourceId: 4,
      title: "PLF List",
      link: "https://cppcast.com/matt-bentley-plf-list/",
      description:
        'Rob and Jason are joined by Matt Bentley  to talk about his work on plf::list and discuss some updates from the SG14 Working Group.\n        \u003cp\u003eMatt Bentley was born in 1978 and never recovered from the experience. He started programming in 1986, completing a BSc Computer Science 1999, before spending three years working for a legal publishing firm, getting chronic fatigue syndrone, quitting, building a music studio, recovering, getting interested in programming again, building a game engine, and stumbling across some generalized solutions to some old problems.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://msdn.microsoft.com/en-us/magazine/mt826346"\u003eFrom Algorithms to Coroutines in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bunnyladame.blogspot.ca/2017/09/a-beginners-guide-to-cppcon-2017.html"\u003eA Beginner\u0027s Guide to CppCon 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLHTh1InhhwT6bwIpRk0ZbCA0N2p1taxd6"\u003eCppCon2017 videos online\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Bentley\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/xolvenz"\u003e@xolvenz\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mattreecebentley"\u003eMatt Bentley on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://plflib.org/"\u003ePLF C++ Library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-10-05T00:00:00Z",
    },
    {
      id: 236,
      sourceId: 4,
      title: "Java",
      link: "https://cppcast.com/patricia-aas/",
      description:
        'Rob and Jason are joined by Patricia Aas to talk about Java and some of the similarities and differences between the Managed language and C++, she also talks about her work on the Vivaldi Browser.\n        \u003cp\u003ePatricia has been a C++ programmer for 12 years. Currently she is working on the Vivaldi Browser. Previously she has worked on the Opera Browser, on embedded telepresence systems at Cisco and even did a two year stint as a Java consultant. She is passionate about learning and teaching, as well as trying to make the world in general and tech in particular, a more inclusive place.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.cs.columbia.edu/2017/bjarne-stroustrup-awarded-2017-faraday-medal/"\u003eBjarne Stroustrup awarded 2017 Faraday Medal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://orbitprofiler.com/"\u003eOrbit C Performance Profiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://opensource.googleblog.com/2017/09/introducing-abseil-new-common-libraries.html"\u003eIntroducing Abseil, a new common libraries project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/user/CppCon"\u003eCppCon Videos\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatricia Aas\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/pati_gallardo"\u003e@pati_gallardo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.slideshare.net/PatriciaAas/c-for-java-developers-javazone-2017"\u003eC++ for Java Developers (Slides)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vimeo.com/233796869"\u003eC++ for Java Developers (Video)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.java.com"\u003eJava\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vivaldi.com/"\u003eVivaldi Browser\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-09-28T00:00:00Z",
    },
    {
      id: 237,
      sourceId: 4,
      title: "C# and IL2CPP",
      link: "https://cppcast.com/josh-peterson/",
      description:
        'Rob and Jason are joined by Josh Peterson to talk about C# and some of the similarities and differences between the Managed language and C++, he also talks about his work at Unity 3D on IL2CPP.\n        \u003cp\u003eJosh is a programmer working at Unity Technologies, where he focuses on integration and development of scripting runtimes for the Unity 3D game engine. He enjoys learning about CPU architectures and assembly language, including the recent development of an MOS 6510 emulator in C#. In his free time, he coaches a number of youth soccer teams and reads philosophy and theology.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://sites.google.com/view/energy-efficiency-languages"\u003eEnergy Efficiency Across Programming Languages\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppugka.github.io/CppWorldCafe2017/"\u003eC++ World Caf√©\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kristerw.blogspot.com/2017/09/useful-gcc-warning-options-not-enabled.html"\u003eUseful GCC warning options not enabled by -Wall -Wextra\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJosh Peterson\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/petersonjm1"\u003e@petersonjm1\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://docs.microsoft.com/en-us/dotnet/csharp/"\u003eMicrosoft C# Guide\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://unity3d.com/"\u003eUnity 3D\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.unity3d.com/2015/05/06/an-introduction-to-ilcpp-internals/"\u003eAn introduction to IL2CPP internals\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-09-21T00:00:00Z",
    },
    {
      id: 238,
      sourceId: 4,
      title: "FluentC++",
      link: "https://cppcast.com/jonathan-boccara/",
      description:
        'Rob and Jason are joined by Jonathan Boccara to talk about the FluentC++ blog and the benefit of doing daily C++ talks at your office.\n        \u003cp\u003eJonathan Boccara is a passionate C++ developer working for Murex on a large codebase of financial software. His interests revolve around making code expressive.\nHe regularly blogs on Fluent C++, where he explores how to use the C++ language to write expressive code, make existing code clearer, and also about how to keep your spirits up when facing unclear code.\nJonathan loves writing, making videos, reading programming books, hanging out at conferences, meeting people, learning new languages and making trainings and presentations.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2017/09/06/c17-is-formally-approved/"\u003eC++17 is formally approved\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://releases.llvm.org/5.0.0/tools/clang/docs/ReleaseNotes.html"\u003eClang 5.0.0 Released (already on the compiler explorer) \u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/09/11/two-phase-name-lookup-support-comes-to-msvc/"\u003eTwo-phase name lookup support comes to MSVC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://godbolt.org/g/pqkxfY"\u003eCppCast compiles on godbolt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJonathan Boccara\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/JoBoccara"\u003e@JoBoccara\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/"\u003eFluentC++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/stl/"\u003eSTL Learning Resource\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.fluentcpp.com/2017/09/14/become-recognized-cpp-skills-dailies/"\u003eSpread Knowledge in Your Company with Your "Daily C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.murex.com/"\u003eMurex\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/GoingNative/2013/Cpp-Seasoning"\u003eGoing Native 2013: Sean Parent "C++ Seasoning"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-09-14T00:00:00Z",
    },
    {
      id: 239,
      sourceId: 4,
      title: "DebugView++",
      link: "https://cppcast.com/jan-wilmans/",
      description:
        'Rob and Jason are joined by Jan Wilmans to talk about the DebugView++ debug and logging tool and some of his other open source projects.\n        \u003cp\u003eJan is a Software Engineer at Promexx, contracted by ThermoFisher Scientific to work on integration of motion controllers in Transmission Electron Microscopes.\nHe has been programming for 25 years, started with basic, z80 assembly and later C++. He is now a C++ enthusiast, an open source developer and likes\nto keep up to date on new c++ developments. In his free time he enjoys playing video games and watching science fiction together with his wife Babette.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/2017call-for-volunteers/"\u003eCppCon Call for Volunteers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://molecular-matters.com/products_livepp.html"\u003eLive++ C++ Live Coding\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://tutorials.visualstudio.com/cpp-console/intro"\u003eBuild your first C++ app\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kristerw.blogspot.com/2017/09/why-undefined-behavior-may-call-never.html"\u003eWhy undefined behavior may call a never-called function\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJan Wilmans\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/janwilmans"\u003e@janwilmans\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/janwilmans"\u003eJan Wilmans\u0027 GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/djeedjay/DebugViewPP/"\u003eDebugView++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/janwilmans/LibIdentify"\u003eLibIdentify\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/janwilmans/OpenCanary"\u003eOpenCanary\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/executors/issaquah_2016"\u003eExecutors Proposal\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-09-08T00:00:00Z",
    },
    {
      id: 240,
      sourceId: 4,
      title: "Volta and Cuda C++",
      link: "https://cppcast.com/olivier-giroux/",
      description:
        'Rob and Jason are joined by Olivier Giroux from NVidia to talk about programming for the Volta GPU.\n        \u003cp\u003eOlivier Giroux has worked on eight GPU and four SM architecture generations released by NVIDIA. Lately, he works to clarify the forms and semantics of valid GPU programs, present and future. He was the programming model lead for the new NVIDIA Volta architecture. He is a member of WG21, the ISO C++ committee, and is a passionate contributor to C++\u0027s forward progress guarantees and memory model.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/08/25/visual-c-for-linux-development-with-cmake/"\u003eVisual C++ for Linux Development with Cmake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sourcetrail.com/blog/release_2017_3/"\u003eSourcetrail 2017.3 released - cross platform source explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/lt-oc-announce/"\u003eCall for CppCon Lightning Talks and Open Content\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2017/08/cpp17stl-review.html"\u003eC++17 STL Cookbook Book Review\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eOlivier Giroux\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/__simt__"\u003e@\u003cstrong\u003esimt\u003c/strong\u003e\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2017.sched.com/event/Bgu6/designing-c-hardware"\u003eCppCon: Designing C++ Hardware\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.nvidia.com/parallelforall/inside-volta/"\u003eInside Volta: The World‚Äôs Most Advanced Data Center GPU\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://on-demand.gputechconf.com/gtc/2017/presentation/s7798-luke-durant-inside-volta.pdf"\u003eInside Volta Slidedeck\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://devblogs.nvidia.com/parallelforall/"\u003eNVidia Dev Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-09-01T00:00:00Z",
    },
    {
      id: 241,
      sourceId: 4,
      title: "Meeting C++ and /r/cpp_review",
      link: "https://cppcast.com/jens-weller-meeting-cpp-cpp-review/",
      description:
        'Rob and Jason are joined by Jens Weller to talk about the upcoming Meeting C++ conference, the /r/cpp_review community and more.\n        \u003cp\u003eJens Weller is the organizer and founder of Meeting C++. Doing C++ since 1998, he is an active member of the C++ Community. From being a moderator at c-plusplus.de and organizer of his own C++ User Group since 2011 in D√ºsseldorf, his roots are in the C++ Community. Today his main work is running the Meeting C++ Platform (conference, website, social media and recruiting). His main role has become being a C++ evangelist, as this he speaks and travels to other conferences and user groups around the world.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://play.google.com/store/apps/details?id\u003dcom.game.aquamath"\u003eAqua Math - Android game developed in C++ with Cocos2d-x\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cocos2d-x.org/"\u003eCocos2d-x\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.llvm.org/2017/08/llvm-on-windows-now-supports-pdb-debug.html"\u003eLLVM on Windows now supports PDB Debug Info\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://ericniebler.com/2017/08/17/ranges-coroutines-and-react-early-musings-on-the-future-of-async-in-c/"\u003eRanges, Coroutines, and React: Early Musings on the Future of Async in c++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://nicoleorchard.com/blog/compilers"\u003eAn Intro to Compilers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJens Weller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/meetingcpp"\u003e@meetingcpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/meetingcpp"\u003eJens Weller\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com"\u003eMeeting C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/index.php/mcpp2017.html"\u003eMeeting C++ 2017 Conference\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp_review/"\u003e/r/cpp_review\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingembedded.com/"\u003eMeeting Embedded\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://simpleprogrammer.com/2016/10/29/ultimate-list-developer-podcasts/"\u003eUltimate List of Developer Podcasts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://dlib.net/"\u003eDlib - a modern C++ toolkit containing machine learning algorithms\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/user/TheChernoProject"\u003eThe Cherno Project\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-08-24T00:00:00Z",
    },
    {
      id: 242,
      sourceId: 4,
      title: "Building Debuggers and Keyboards",
      link: "https://cppcast.com/simon-brand-building-debuggers-keyboards/",
      description:
        'Rob and Jason are joined by Sy Brand from Codeplay Software to talk about building C++ debuggers and the hardware and C++ firmware of a custom keyboard.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2014/01/n3886"\u003eN3886: A Proposal to add a Database Access Layer to the Standard Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/CppLondon/messages/boards/thread/51036970"\u003eC++ London "University"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/08/11/c17-features-and-stl-fixes-in-vs-2017-15-3/"\u003eC++17 Features and STL Fixes in VS 2017 15.3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/the-reviews-have-begun.html"\u003eThe reviews have begun\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/TartanLlama/minidbg"\u003eminidbg - A mini x86 linux debugger for teaching purposes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.tartanllama.xyz/my-first-keyboard.html"\u003eBuilding my first custom keyboard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.tartanllama.xyz/sycl.html"\u003eAccelerating your C++ on GPU with SYCL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.codeplay.com/"\u003eCodeplay Software\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-08-17T00:00:00Z",
    },
    {
      id: 243,
      sourceId: 4,
      title: "Synchronization Primitives",
      link: "https://cppcast.com/samy-bahra/",
      description:
        'Rob and Jason are joined by Samy Bahra from Backtrace to talk about lesser known synchronization primitives and his work on the Concurrency Kit.\n        \u003cp\u003eSamy Al Bahra is the cofounder of Backtrace, where he is helping build a modern debugging platform for today‚Äôs complex applications. Prior to Backtrace, Samy was a principal engineer at AppNexus, where he played a lead role in the architecture and development of many mission-critical components of the ecosystem. His work at AppNexus was instrumental in scaling the system to 18 billion impressions with orders of magnitude in efficiency improvements. Prior to AppNexus, Samy was behind major performance improvements to the core technology at Message Systems. At the George Washington University High Performance Computing Laboratory, Samy worked on the UPC programming language, heterogeneous computing, and multicore synchronization. Samy is also the founder of the Concurrency Kit project, which several leading technology companies rely on for scalability and performance. Samy serves on the ACM Queue Editorial Board.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://reactivex.io/languages.html"\u003eReactiveX\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/6rp32l/beast_version_100_accepted_to_boost/"\u003eBeast accepted to Boost\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/08/04/metaclasses-cpp-summary/"\u003eA summary of the metaclasses proposal for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2017/08/cpp17-details-filesystem.html"\u003eC++17 in details: Filesystem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2017.sched.com/"\u003eCppCon 2017 Schedule\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSamy Bahra\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/0xF390"\u003e@0xF390\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dOfTy3ymDwWE"\u003eC++Now 2017: Samy Bahra "Multicore Synchronization: The Lesser-Known Primitives"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/boostcon/cppnow_presentations_2017/blob/master/05-20-2017_saturday/the_lesser_known_multicore_synchronization_primitives__samy_bahra__cppnow_05-20-2017.pdf"\u003e"Multicore Synchronization: The Lesser-Known Primitives" Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://concurrencykit.org/"\u003eConcurrency Kit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-08-10T00:00:00Z",
    },
    {
      id: 244,
      sourceId: 4,
      title: "GCC Compiler Development",
      link: "https://cppcast.com/krister-walfridsson/",
      description:
        'Rob and Jason are joined by Krister Walfridsson to talk about some of his contributions to the GCC Compiler.\n        \u003cp\u003eKrister got introduced to low-level programming by the C64/Amiga demo scene in the 80s. This led to an interest in operating systems and compilers, and he has been involved in the NetBSD and GCC projects for more than 20 years. His career has been split between OS-level development on embedded platforms and compiler development, and he most enjoys working with "strange" custom-made architectures.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://libq.io/"\u003elibq\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2017/07/26/metaclasses-thoughts-on-generative-c/"\u003eMetaclasses: Thoughts on generative C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hackernoon.com/6-reasons-why-we-distribute-c-libraries-as-source-code-2dc614d5ef1e"\u003e6 Reasons Why We Distribute C++ Libraries as Source Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.regehr.org/archives/1520"\u003eUndefined Behavior in 2017\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKrister Walfridsson\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/kwalfridsson"\u003e@kwalfridsson\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kristerw.blogspot.se/"\u003eKrister Walfridsson\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://kristerw.blogspot.se/2016/04/why-volatile-is-hard-to-specify-and.html"\u003eWhy volatile is hard to specify and implement\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kristerw.blogspot.se/2017/02/branch-prediction.html"\u003eBranch prediction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://labs.domipheus.com/blog/designing-a-cpu-in-vhdl-part-1-rationale-tools-method/"\u003eDesigning a CPU in VHDL, Part 1: Rationale, tools, methods\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-08-03T00:00:00Z",
    },
    {
      id: 245,
      sourceId: 4,
      title: "Toronto Trip Report",
      link: "https://cppcast.com/patrice-roy-toronto-trip-report/",
      description:
        'Rob and Jason are joined by Patrice Roy to talk about the changes made to the C++20 Draft at the Toronto C++ Standards Committee Meeting.\n        \u003cp\u003ePatrice Roy has been playing with C++, either professionally, for pleasure or (most of the time) both for over 20 years. After a few years doing R\u0026#38;D and working on military flight simulators, he moved on to academics and has been teaching computer science since 1998. Since 2005, he‚Äôs been involved more specifically in helping graduate students and professionals from the fields of real-time systems and game programming develop the skills they need to face today‚Äôs challenges. The rapid evolution of C++ in recent years has made his job even more enjoyable.\u003c/p\u003e\n\u003cp\u003eHe‚Äôs been a participating member in the ISO C++ Standards Committee since late 2014 and has been involved with the ISO Programming Language Vulnerabilities since late 2015. He has five kids, and his wife ensures their house is home to a continuously changing number of cats, dogs and other animals.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/07/21/diagnostic-improvements-in-vs2017-15-3-0/"\u003eDiagnostic Improvements in VS 2017 15.3.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost.2283326.n4.nabble.com/CMake-Announcement-from-Boost-Steering-Committee-tt4696934.html"\u003eBoost to move to cmake build and test\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hatcat.com/?p\u003d1"\u003eTrip Report: My first ISO C++ Standards meeting\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatrice Roy\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/PatriceRoy1"\u003e@PatriceRoy1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://h-deb.clg.qc.ca/"\u003ePatrice Roy\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://h-deb.clg.qc.ca/Sujets/Orthogonal/wg21-2017-Toronto.html"\u003ePatrice\u0027s Trip Report (French)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/applied-modern-cpp/"\u003eCppCon Course: Practical Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-07-27T00:00:00Z",
    },
    {
      id: 246,
      sourceId: 4,
      title: "Coroutines",
      link: "https://cppcast.com/gor-nishanov/",
      description:
        'Rob and Jason are joined by Gor Nishanov to talk about the C++ Coroutines proposal.\n        \u003cp\u003eGor Nishanov is a Principal Software Design Engineer on the Microsoft C++ team. He works on design and standardization of C++ Coroutines, and on asynchronous programming models. Prior to joining C++ team, Gor was working on distributed systems in Windows Clustering team.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://woboq.com/blog/verdigris-qt-without-moc.html"\u003eVerdigris: Qt without moc\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2017/07/15/trip-report-summer-iso-c-standards-meeting-toronto/"\u003eTrip report: Summer ISO C++ standards meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/a-cpp-review-community.html"\u003eA C++ review community\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://sean-parent.stlab.cc/2017/07/10/future-ruminations.html"\u003eFuture Ruminations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGor Nishanov\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/gornishanov"\u003e@gornishanov\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/GorNishanov"\u003eGor Nishanov\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d_fu0gx-xseY"\u003eCppCon 2015: Gor Nishanov "C++ Coroutines - a negative overhead abstraction"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d8C8NnE1Dg4A"\u003eCppCon 2016: Gor Nishanov "C++ Coroutines: Under the covers"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://wandbox.org/permlink/D60wIndMZbth7BXS"\u003eWandbox: Coroutines with Ranges\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://godbolt.org/g/pq6x57"\u003eCompiler Explorer: Coroutines clang demo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-07-19T00:00:00Z",
    },
    {
      id: 247,
      sourceId: 4,
      title: "CopperSpice",
      link: "https://cppcast.com/barbara-geller-ansel-sermersheim/",
      description:
        'Rob and Jason are joined by Barbara Geller and Ansel Sermersheim to talk about the CopperSpice C++ GUI Library.\n        \u003cp\u003eBarbara is an independent consultant working as a programmer and software developer for over 25 years. She has been a featured speaker at more than a dozen trade shows and computer conferences in the US and on two separate occasions Barbara taught an extended class in software architecture and GUI design for the Panama Canal Commission in Panama.\u003c/p\u003e\n\u003cp\u003eAnsel has been working as a programmer for over 15 years. Ansel worked for 8 years at a communications company designing scalable, high performance, multi-threaded network daemons in C++ and he is currently a software consultant for RealityShares in San Francisco.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/id-5-years-of-meeting-c.html"\u003e5 years of Meeting C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@issamvb/why-you-should-really-care-about-c-c-static-analysis-db13f4463b2d"\u003eWhy you should really care about C/C++ static analysis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kdab.com/hotspot-gui-linux-perf-profiler/"\u003eHotspot a GUI for the linux perf profiler\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBarbara Geller and Ansel Sermersheim\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/bgeller"\u003eBarbara Geller\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/agserm"\u003eAnsel Sermersheim\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.copperspice.com/"\u003eCopperSpice\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/copperspice/copperspice"\u003eCopperSpice GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/channel/UC-lNlWEq0kpMcThO-I81ZdQ"\u003eCopperSpice YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.copperspice.com/documentation-doxypress.html"\u003eDoxyPress\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dLIiwBNvTllk"\u003eCppCon 2015: Barbara Geller \u0026#38; Ansel Sermersheim "CopperSpice: A Pure C++ GUI Library"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dhQphBQMwk7s"\u003eCppCon 2015: Barbara Geller \u0026#38; Ansel Sermersheim "Doxygen to DoxyPress"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-07-10T00:00:00Z",
    },
    {
      id: 248,
      sourceId: 4,
      title: "Teaching Concepts",
      link: "https://cppcast.com/chris-dibella-teaching-concepts/",
      description:
        'Rob and Jason are joined by Christopher Di Bella to talk about his experience teaching C++ and his proposed changes to Concepts.\n        \u003cp\u003eChristopher Di Bella will soon be a Runtime Technology Engineer at Codeplay, and was previously university tutor (teaching assistant) for the course \u0027Advanced C++ Programming\u0027, at the University of New South Wales, Australia. He is an avid C++ programmer, and also enjoys film, board games, and snowboarding in his spare time.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/regopen2017/"\u003eCppCon Last Call for Early Bird Pricing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.splashdamage.com/blog/1254/introducing-our-c-tech-blog#.WVhP24grKbg"\u003eIntroducing the Splash Damage C++ Tech Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/06/28/security-features-in-microsoft-visual-c/"\u003eSecurity features in Microsoft Visual C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingembedded.com/"\u003eMeeting Embedded\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.surveymonkey.co.uk/r/TLLYQJW"\u003eCatch Survey\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eChristopher Di Bella\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/cjdb_ns"\u003e@cjdb_ns\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cjdb"\u003eChristopher Di Bella\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/exploring-the-cpp-standard-library/"\u003eCppCon: Exploring the C++ Standard Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cplusplus/concepts-ts"\u003eConcepts TS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ericniebler/range-v3"\u003eRange v3 Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ericniebler/stl2"\u003eRange TS/STL2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/CaseyCarter/cmcstl2"\u003eC++ Extension for Ranges\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/cjdb/COMP6771-AdvancedCppProgramming"\u003eAdvanced C++ Programming Course Notes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.amazon.com/Writing-Secure-Code-Developer-Practices-ebook/dp/B00JDMP718/"\u003eBook: "Writing Secure Code"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.amazon.com/Code-Complete-Developer-Best-Practices-ebook/dp/B00JDMPOSY/"\u003eBook: "Code Complete"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.amazon.com/Tour-C-Depth/dp/0321958314"\u003eBook: "A Tour of C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dOG40yd0_nOs"\u003eSeth Bling "Hacking the Super Mario World"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-07-05T00:00:00Z",
    },
    {
      id: 249,
      sourceId: 4,
      title: "\u003cchrono\u003e and more",
      link: "https://cppcast.com/howard-hinnant/",
      description:
        'Rob and Jason are joined by Howard Hinnant from Ripple to talk about \u0026#60;chrono\u0026#62;, his date \u0026#38; time library (and proposal) and his work on move semantics.\n        \u003cp\u003eHoward Hinnant is a Senior Software Engineer at Ripple and the lead author of several C++11/14 features including: move semantics, unique_ptr, chrono, condition_variable_any, shared_mutex and std::lock. He is also the lead author of two LLVM projects \u003ca href\u003d"http://libcxx.llvm.org"\u003elibc++\u003c/a\u003e and \u003ca href\u003d"http://libcxxabi.llvm.org"\u003elibc++abi\u003c/a\u003e.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://zajo.github.io/boost-noexcept/"\u003eNoexcept: lightweight error handling library for C++11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/06/23/7-ways-better-cpp-summer/"\u003e7 Ways to Get Better at C++ During this Summer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppdepend.com/blog/?p\u003d148"\u003eAfter 17 yrs of active development, does the Boost C++ library meet its original vision\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHoward Hinnant\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://howardhinnant.github.io/HowardHinnant.html"\u003eHoward Hinnant\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dP32hvk8b13M"\u003eCppCon 2016: Howard Hinnant "A \\\u0026#60;chrono\u0026#62; Tutorial"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtzyGjOm8AKo"\u003eCppCon 2015: Howard Hinnant ‚ÄúA C++14 approach to dates and times"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dVwd3pduVGKY"\u003eCppCon 2016: Howard Hinnant "Welcome To The Time Zone"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2002/n1377.htm"\u003eA Proposal to Add Move Semantics Support to the C++ Language\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-06-28T00:00:00Z",
    },
    {
      id: 250,
      sourceId: 4,
      title: "system_error and Boost Outcome Review",
      link: "https://cppcast.com/charley-bay/",
      description:
        'Rob and Jason are joined by Charley Bay from F5 Networks to talk about his recent CppNow talk on system_error and the Boost Outcome review.\n        \u003cp\u003eCharley Bay is a Software developer at F5 Networks with 25+ years experience in large-scale and distributed systems for low-latency C and C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://en.wikipedia.org/wiki/Comparison_of_web_frameworks#C.2B.2B"\u003eC++ Web Frameworks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/6hr46f/full_httpwebsocket_server_framework_c11/"\u003eFull Http/WebSocket Server framework using Beast and Boost.Asio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://quick-bench.com/"\u003eQuick-Bench.com Simple Online C++ Performance Benchmark\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kickstarter.com/projects/871405126/turing-tumble-gaming-on-a-mechanical-computer/"\u003eTuring Tumble Kickstarter\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eCharley Bay\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow2017.sched.com/speaker/bay_charles"\u003eCharley Bay\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dw7ZVbw2X-tE"\u003eC++Now 2017: Charles Bay "C++11\u0027s Quiet Little Gem: \u003csystem_error\u003e"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.boost.org/community/reviews.html"\u003eBoost Formal Review Process\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ned14.github.io/outcome/"\u003eBoost Outcome\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost.2283326.n4.nabble.com/review-Outcome-Review-Report-tt4695267.html"\u003eBoost Outcome Review Report\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-06-21T00:00:00Z",
    },
    {
      id: 251,
      sourceId: 4,
      title: "stlab Concurrency",
      link: "https://cppcast.com/felix-petriconi/",
      description:
        'Rob and Jason are joined by Felix Petriconi to talk about his contributions to the stlab Concurrency library and the future of C++ futures.\n        \u003cp\u003eFelix Petriconi is working as professional programmer since 1993 after he had finished his study of electrical engineering. He started his career as teacher for intellectually gifted children, freelance programmer among others in telecommunication and automotive projects. Since 2003 he is employed as programmer and development manager at the MeVis Medical Solutions AG in Bremen, Germany. He is part of a team that develops and maintains radiological medical devices. His focus is on C++ development, training of modern C++, and application performance tuning. He is a regular speaker at the C++ user group in Bremen and a member of the ACCU‚Äôs conference committee.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/2017-keynote-speakers/"\u003eCppCon 2017 Keynote Speakers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://accu.org/index.php/journals/2381"\u003eACCU: Kotlin for C++ Developers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/nemequ/configure-cmake"\u003eConfigure-cmake\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/6gdu9b/beast_version_52_released_3_weeks_until_boost/"\u003eBeast v52 released, 3 weeks until Boost review\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eFelix Petriconi\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/felixpetriconi"\u003e@felixpetriconi\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/FelixPetriconi"\u003eFelix Petriconi\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.stlab.cc/libraries/concurrency/"\u003estlab concurrency\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/stlab"\u003estlab GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://conference.accu.org/site/stories/2017/sessions.html#XTheArtofWritingReasonableConcurrentCode"\u003eACCU 2017 \u0027The Art of Writing Reasonable Concurrent Code\u0027\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dW-mLN_r3c6Q"\u003eACCU 2016 \u0027Leaving The Dark Side - Developing a C++ Based Medical Device\u0027\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-06-14T00:00:00Z",
    },
    {
      id: 252,
      sourceId: 4,
      title: "Postmodern C++",
      link: "https://cppcast.com/tony-van-eerd/",
      description:
        'Rob and Jason are joined by Tony Van Eerd to talk about his recent award winning C++Now talk on Postmodern C++ and his views on lock-free programming.\n        \u003cp\u003eTony Van Eerd has been coding for well over 25 years, and hopefully coding well for some of that. Mostly in graphics/video/film/broadcast (at Inscriber \u0026#38; Adobe), writing low level pixel++, high level UI, threading, and everything else. He now enables painting with light at Christie Digital. He is on the C++ Committee. He is a Ninja and a Jedi. \u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003eC++ News Sources:\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/"\u003e/r/cpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/groups/cppEnthusiasts/"\u003eC++ Enthusiasts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.meetingcpp.com/index.php/blogroll.html"\u003eMeeting C++ Blogroll\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/"\u003eIsoCpp\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2018-conference/announcements/2017/05/27/close-of-2017.html"\u003eAnnouncing C++Now 2018\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPL_AKIMJc4roXJldxjJGtH8PJb4dY6nN1D"\u003eC++Now 2017 Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://howardhinnant.github.io/coding_guidelines.html"\u003eC++ Coding Guidelines (Howard Hinnant)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://plange.tech/blog/2017-06-03.php"\u003eWhy I Put const On The Right\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://pacificplusplus.com/"\u003eSpeakers announced for pacific++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTony Van Eerd\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/tvaneerd"\u003e@tvaneerd\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/tvaneerd"\u003eTony Van Eerd\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.christiedigital.com/en-us/projection-mapping"\u003eChristie Digital\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPL7CBEC9E4CFDB1FD9"\u003eChristie Digital Projection Mapping Videos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dGPP64opjy_Y"\u003eC++Now 2017: Tony Van Eerd "Postmodern C++"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-06-08T00:00:00Z",
    },
    {
      id: 253,
      sourceId: 4,
      title: "Travis CI",
      link: "https://cppcast.com/richel-bilderbeek/",
      description:
        'Rob and Jason are joined by Richel Bilderbeek to talk about the benefits of using Travis CI for C++ developers and the role of C++ in theoretical biology.\n        \u003cp\u003eRichel Bilderbeek is a C++ developer for 17 years. He is mostly interested in what the literature has to say about good C++ practices, then teaching children and to adults, additionally writing articles, blog posts and tutorials. In his professional life, he is a PhD in theoretical biology.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://chadaustin.me/2017/05/writing-a-really-really-fast-json-parser/"\u003eWriting a Really, Really Fast JSON Parser\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arne-mertz.de/2017/05/online-compilers/"\u003eC++ Online Compilers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/looking-for-proofreaders-for-my-new-book-concurrency-with-modern-c"\u003eLooking for Proofreaders for my new Book: Concurrency with Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRichel Bilderbeek\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/rjcbilderbeek/"\u003e@rjcbilderbeek\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/richelbilderbeek"\u003eRichel Bilderbeek\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://richelbilderbeek.nl/"\u003eRichel Bilderbeek\u0027s homepage\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://travis-ci.org/"\u003eTravis CI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/richelbilderbeek/travis_cpp_tutorial"\u003eTravis CI Tutorial\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.djog.nl/djognieuws/11-juni-science-en-hi-techdag-djo/"\u003eScience and Hi-Tech Day (Dutch)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://conan.io/"\u003eConan.io\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-06-01T00:00:00Z",
    },
    {
      id: 254,
      sourceId: 4,
      title: "Boost Outcome",
      link: "https://cppcast.com/niall-douglas-boost-outcome/",
      description:
        'Rob and Jason are joined by Niall Douglas to talk about Google Summer of Code, Boost and his proposed Outcome library.\n        \u003cp\u003eNiall Douglas is a consultant for hire, is one of the authors of the proposed Boost.AFIO v2 and Boost Outcome, he is also currently the primary Google Summer of Code administrator for Boost.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.elbeno.com/blog/?p\u003d1443"\u003eC++Now 2017 Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hackernoon.com/error-handling-in-c-or-why-you-should-use-eithers-in-favor-of-exceptions-and-error-codes-f0640912eb45"\u003eError Handing in C++ or: Why You Should Use Eithers in Favor of Exceptions and Error-Codes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Jeff-Mott-OR/javascript-cpp-rosetta-stone"\u003eJavaScript/C++ Rosetta Stone\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon.org/cfs2017/"\u003eCppCon 2017 Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNiall Douglas\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ned14/"\u003e@ned14\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.nedprod.com/"\u003eNiall Douglas\u0027 blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://summerofcode.withgoogle.com/"\u003eGoogle Summer of Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ned14/outcome"\u003eBoost.Outcome\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ned14/afio"\u003eBoost.AFIO v2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://youtu.be/XVofgKH-uu4"\u003eACCU 2017: Niall Douglas "Mongrel Monads, Dirty, Dirty, Dirty"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003duhRWMGBjlO8"\u003eCppCon 2015: Niall Douglas "Racing the File System"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d9l28ax3Zq0w"\u003eCppCon 2016: Niall Douglas "Better mutual exclusion on the filesystem using Boost.AFIO\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://conan.io/"\u003eConan.io\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-05-25T00:00:00Z",
    },
    {
      id: 255,
      sourceId: 4,
      title: "Build 2017",
      link: "https://cppcast.com/kenny-marian-build-2017/",
      description:
        'Rob travels to the Microsoft Build Developer\u0027s Conference to interview Kenny Kerr from the Windows team and Marian Luparu from the Visual Studio C++ team.\n        \u003cp\u003eKenny Kerr is an engineer on the Windows team at Microsoft, an MSDN Magazine contributing editor, Pluralsight author, and creator of moderncpp.com (C++/WinRT). He writes at kennykerr.ca and you can find him on Twitter at @kennykerr.\u003c/p\u003e\n\u003cp\u003eMarian Luparu is currently leading the team responsible for making Visual Studio more productive for C++ developers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/better-c-chicago-registration-34084060342"\u003eBetter C++/Chicago\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKenny Kerr\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/kennykerr"\u003e@kennykerr\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMarian Luparu\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mluparu"\u003e@mluparu\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2017"\u003eMicrosoft Build (Channel 9 Recordings)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/05/10/c-at-microsoft-build-2017/"\u003eC++ at Microsoft Build 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/events/Build/2017/C9L15"\u003eChannel 9 C++ Panel Interview (STL, Kenny Kerr, Marian Luparu, Gaby dos Reis)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://moderncpp.com/2016/10/13/cppwinrt-available-on-github/"\u003eC++/WinRT Available on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/events/Build/2017/B8105"\u003e7++ reasons to move your C++ code to Visual Studio 2017\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-05-12T00:00:00Z",
    },
    {
      id: 256,
      sourceId: 4,
      title: "Past, Present and Future of C++",
      link: "https://cppcast.com/bjarne-stroustrup/",
      description:
        'Rob and Jason are joined by Bjarne Stroustrup, designer and original implementer of C++ to discuss the current state of C++, his vision for the future as well as some discussion of the past.\n        \u003cp\u003eBjarne Stroustrup is the designer and original implementer of C++ as well as the author of The C++ Programming Language (Fourth Edition) and A Tour of C++, Programming: Principles and Practice using C++ (Second Edition), and many popular and academic publications. Dr. Stroustrup is a Managing Director in the technology division of Morgan Stanley in New York City as well as a visiting professor at Columbia University. He is a member of the US National Academy of Engineering, and an IEEE, ACM, and CHM fellow. His research interests include distributed systems, design, programming techniques, software development tools, and programming languages. ¬†To make C++ a stable and up-to-date base for real-world software development, he has been a leading figure with the ISO C++ standards effort for more than 25 years. He holds a master‚Äôs in Mathematics from Aarhus University and a PhD in Computer Science from Cambridge University, where he is an honorary fellow of Churchill College. \u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/CppMtl/"\u003eC++ Montreal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stellar.cct.lsu.edu/2017/04/hpx-v1-0-released/"\u003eHPX V1.0 Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://akrzemi1.wordpress.com/2017/04/27/a-serious-bug-in-gcc/"\u003eA serious bug in GCC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/whats-new-in-resharper-c-2017-1/"\u003eWhat\u0027s New in ReSharper C++ 2016.3 and 2017.1\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBjarne Stroustrup\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.stroustrup.com/"\u003eBjarne Stroustrup\u0027s homepage\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/2p37V4U"\u003eA Tour of C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/2q5wDSv"\u003eThe C++ Programming Language (4th Edition)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d_wzc7a3McOs"\u003eCppCon 2016: Bjarne Stroustrup "The Evolution of C++ Past, Present and Future"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHosts\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-05-04T00:00:00Z",
    },
    {
      id: 257,
      sourceId: 4,
      title: "Intel C++ Compiler",
      link: "https://cppcast.com/udit-patidar-anoop-prabha/",
      description:
        'Rob and Jason are joined by Udit Patidar and Anoop Prabha from Intel to discuss Intel\u0027s C++ Compiler and suite of Performance tuning Software Development Tools.\n        \u003cp\u003eAnoop Prabha is currently a Software Engineer in Software and Services Group at Intel working with Intel¬Æ C++ Compiler Support. He played paramount role in driving customer adoption for features like Intel¬Æ Cilk‚Ñ¢ Plus, Explicit Vectorization, Compute Offload to Intel¬Æ Processor Graphics across all Intel targets by creating technical articles and code samples, educating customers through webinars and 1-on-1 engagements. He is currently driving the Parallel STL feature adoption (new feature in 18.0 beta Compiler). Before joining Intel, Anoop worked at IBM India Private Ltd as a Software Developer for 3 years in Bangalore, India and later completed his graduation from State University of New York at Buffalo.\u003c/p\u003e\n\u003cp\u003eUdit Patidar works in the Developer Products Division of Intel, where he is a product manager for Intel software tools. He was previously a developer working on Intel compilers, focusing on OpenMP parallel programming model for technical and scientific computing workloads. He has extensive experience in high performance computing, both at Intel and previously. Udit holds an MBA in General Management from Cornell University, and a PhD in Computer Science from the University of Houston.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://sandstorm.io/"\u003eSandstorm\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://capnproto.org/"\u003eCap\u0027n Proto\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://foonathan.net/blog/2017/04/20/cppast.html"\u003ecppast - A library to parse and work with the C++ AST\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://jonasdevlieghere.com/containers-of-unique-pointers/"\u003eExposing containers of unique pointers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://clang.llvm.org/extra/include-fixer.html"\u003eClang-include-fixer\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnoop Prabha\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/anoop-madhusoodhanan-prabha-8214a215/"\u003eAnoop Prabha\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eUdit Patidar\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/uditpatidar/"\u003eUdit Patidar\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/qualify-for-free-software"\u003eFree Intel Software Development Tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/intel-parallel-studio-xe"\u003eIntel Parallel Studio XE Suite Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/system-studio/2017"\u003eIntel System Studio Suite Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/c-compilers"\u003eIntel C++ Compiler Product Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/articles/c0x-features-supported-by-intel-c-compiler"\u003eC++11 support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/articles/c14-features-supported-by-intel-c-compiler"\u003eC++14 support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/articles/c17-features-supported-by-intel-c-compiler"\u003eC++17 support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/en-us/forums/intel-c-compiler"\u003eIntel C++ Compiler Forum\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://conan.io/"\u003eConan.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-04-27T00:00:00Z",
    },
    {
      id: 258,
      sourceId: 4,
      title: "Hippomocks and cpp-dependencies",
      link: "https://cppcast.com/peter-bindels-hippomocks-cpp-dependencies/",
      description:
        'Rob and Jason are joined by Peter Bindels to discuss the Hippomocks mocking library and the cpp-dependencies analyzer.\n        \u003cp\u003ePeter Bindels is a C++ software engineer who prides himself on writing code that is easy to use, easy to work with and well-readable to anybody familiar with the language. He\u0027s worked for a contractor for a few years and then made the switch to work at Tomtom, where he\u0027s been working on various parts of the software chain, last of which was a major cleanup in the navigation code base. In doing so he developed a tool to determine, check and improve dependencies between components, which allows quicker structural insight in complicated systems. He also created HippoMocks in 2008, one of the first full fledged C++ mocking frameworks that is still a relevant choice today. He has given two talks at Meeting C++ 2016 and will be giving his third talk, on Mocking in C++, at CppNow 2017.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/04/18/the-design-of-the-stl/"\u003eFluent C++ - The Design of the STL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/03/28/inserting-several-elements-into-an-stl-container/"\u003eFluent C++ - Inserting several elements into an STL container efficently\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2017-conference/announcements/2017/04/12/haskell-keynote.html"\u003e2017 Keynote - Ryan Newton - Haskell Taketh Away\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2017/03/clion-2017-1-released/"\u003eCLion 2017.1 released: C++14, C++17, PCH, disassembly view, Catch, MSVC and more\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jackieokay.com/2017/04/13/reflection1.html"\u003eAn introduction to Reflection in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePeter Bindels\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dascandy42"\u003e@dascandy42\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dascandy"\u003ePeter Bindels\u0027 GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://hippomocks.com/"\u003eHippomocks framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/tomtom-international/cpp-dependencies"\u003ecpp-dependencies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dg4eLn2hz-u0"\u003eMeeting C++ 2016: Peter Bindels - How to understand million-line C++ projects\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d6N92PkBeIHw"\u003eLightning Talks Meeting C++ 2016: Peter Bindels - Mocking C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://conan.io/"\u003eConan.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-04-20T00:00:00Z",
    },
    {
      id: 259,
      sourceId: 4,
      title: "Vcsn",
      link: "https://cppcast.com/akim-demaille/",
      description:
        'Rob and Jason are joined by Akim Demaille to discuss VCSN, a platform for automata and rational expressions, and some of the interesting problems he faced while working on the library.\n        \u003cp\u003eAkim has been participating in free software for about 20 years, starting with a2ps, an anything to PostScript tool written in C. In order to ensure its portability, he became a major contributor to GNU Autoconf, GNU Automake and GNU Bison.\u003c/p\u003e\n\u003cp\u003eAkim has been teaching and researching at EPITA, a French CS Graduate School, for eighteen years. He has taught formal languages, logics, OO design, C++ and compiler constructions, which includes the Tiger compiler, an educational project where students implement a compiler in C++. This project, whose assignment is regularly updated, keeps track of the C++ eveolutions, and this year\u0027s version uses C++17 features.\u003c/p\u003e\n\u003cp\u003eAkim\u0027s recent research interests are focused on the Vcsn platform, dedicated to automata and rational expressions.\u003c/p\u003e\n\u003cp\u003eHe\u0027s recently been recruited by former students of his to be part of the Infinit team at Docker.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/newsreader/items/announcing-meeting-cpp-2017.html"\u003eAnnouncing Meeting C++ 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2017-conference/announcements/2017/04/09/d-keynote.html"\u003eC++Now 2017 Keynote: Ali √áehreli - Competitive Advantage with D\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://lattix.com/blog/2017/04/07/reduce-c-build-times-reducing-header-dependencies"\u003eReduce C++ Build Times by Reducing Header Dependencies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.sean-bollin.com/2017/04/08/capturing-this-in-c11-14-and-17/"\u003eCapturing *this in C++11, 14 and 17\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAkim Demaille\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/akimd"\u003eAkim Demaille\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://vcsn.lrde.epita.fr/"\u003eVcsn home page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://vcsn-sandbox.lrde.epita.fr/"\u003eVcsn Online Sandbox\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://tiger.lrde.epita.fr/"\u003eThe Tiger Project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://johnny-five.io/"\u003eJohnny Five\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arxiv.org/abs/1611.00947"\u003eTechnical report about runtime instantiation in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-04-13T00:00:00Z",
    },
    {
      id: 260,
      sourceId: 4,
      title: "Jewelbots",
      link: "https://cppcast.com/sara-chipps/",
      description:
        'Rob and Jason are joined by Sara Chipps to discuss Jewelbots, Arduino and getting girls interested in STEM fields.\n        \u003cp\u003eSara Chipps is a JavaScript developer based in NYC. She has been working on Software and the Open Source Community since 2001. She‚Äôs been obsessed with hardware and part of \u003ca href\u003d"http://nodebots.com"\u003eNodebots\u003c/a\u003e since 2012. \u003c/p\u003e\n\u003cp\u003eShe is the CEO of \u003ca href\u003d"http://jewelbots.com"\u003eJewelbots\u003c/a\u003e, a company dedicated towards drastically changing the number of girls entering STEM fields using hardware. \u003c/p\u003e\n\u003cp\u003eShe was formerly the CTO of \u003ca href\u003d"http://flatironschool.com"\u003eFlat Iron School\u003c/a\u003e, a school dedicated to teaching people of all ages how to build software and launch careers as software developers. \u003c/p\u003e\n\u003cp\u003eIn 2010 she cofounded Girl Develop It, a non-profit focused on helping more women become software developers. Girl Develop It is in 45 cities, and has taught over 17,000 women how to build software. \u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://fbb-git.github.io/cppannotations/cppannotations/html/index.html"\u003eThe C++ Annotations, a free up-to-date learners book/reference manual\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@davidtstrauss/choosing-some-c-over-c-f5acb3dce4f5"\u003eChoosing "Some C++" Over C\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://lwn.net/Articles/542457/"\u003eGCC\u0027s move to C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.pacificplusplus.com/"\u003ePacifiC++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSara Chipps\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/SaraJChipps"\u003e@SaraJChipps\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://sarajchipps.com/"\u003eSara Chipps\u0027 Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://jewelbots.com/"\u003eJewelbots\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://jewelbots.com/pages/support"\u003eJewelbots Support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://techcrunch.com/2015/07/13/jewelbots-is-a-friendship-bracelet-that-teaches-girls-how-to-code/"\u003eJewelbots is a friendship bracelet that teaches girls how to code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://johnny-five.io/"\u003eJohnny Five\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.girldevelopit.com/"\u003eGirl Develop It\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://flatironschool.com/"\u003eFlat Iron School\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-04-07T00:00:00Z",
    },
    {
      id: 261,
      sourceId: 4,
      title: "C++17 Kona Update",
      link: "https://cppcast.com/patrice-roy-cpp-kona-update/",
      description:
        'Rob and Jason are joined by Patrice Roy to discuss the state of C++17 after the recent ISO Standards meeting at Kona.\n        \u003cp\u003ePatrice Roy has been playing with C++, either professionally, for pleasure or (most of the time) both for over 20 years. After a few years doing R\u0026#38;D and working on military flight simulators, he moved on to academics and has been teaching computer science since 1998. Since 2005, he‚Äôs been involved more specifically in helping graduate students and professionals from the fields of real-time systems and game programming develop the skills they need to face today‚Äôs challenges. The rapid evolution of C++ in recent years has made his job even more enjoyable.\u003c/p\u003e\n\u003cp\u003eHe‚Äôs been a participating member in the ISO C++ Standards Committee since late 2014 and has been involved with the ISO Programming Language Vulnerabilities since late 2015. He has five kids, and his wife ensures their house is home to a continuously changing number of cats, dogs and other animals.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2017/03/24/trip-report-winter-iso-c-standards-meeting-kona-c17-is-complete/"\u003eHerb Sutter\u0027s Trip report: Winter ISO C++ standards meeting, C++17 is complete\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://botondballo.wordpress.com/2017/03/27/trip-report-c-standards-meeting-in-kona-february-2017/"\u003eBotond\u0027s Trip Report: C++ Standards Meeting in Kona, February 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.sei.cmu.edu/news/article.cfm?assetid\u003d495412\u0026#38;article\u003d081\u0026#38;year\u003d2017"\u003eSoftware Engineering Institute Makes CERT C++ Coding Standard Freely Available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2017-conference/announcements/2017/03/21/program-announced.html"\u003eC++ Now 2017 Program Available\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePatrice Roy\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/PatriceRoy1"\u003e@PatriceRoy1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://h-deb.clg.qc.ca/"\u003ePatrice Roy\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/"\u003eC++ Standards\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://open-std.org/JTC1/SC22/WG21/docs/papers/2017/p0515r0.pdf"\u003eConsistent comparison (Herb Sutter\u0027s Comparison Proposal)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-03-30T00:00:00Z",
    },
    {
      id: 262,
      sourceId: 4,
      title: "Safe Numerics",
      link: "https://cppcast.com/robert-ramey-safe-numerics/",
      description:
        'Rob and Jason are joined by Robert Ramey to discuss his Safe Numerics library and the process of submitting libraries to both Boost and the C++ Standards Committee.\n        \u003cp\u003eRobert Ramey is a freelance C++ programmer for around 20 years. He has worked on a variety of applications including desktop retail applications, embedded systems on tiny micro controllers and combinations of these. For the last 10 of those years he has been active in the Boost Organization and\u003c/p\u003e\n\u003cul\u003e\n\u003cli\u003eAuthor and Maintainer of the Boost Serialization library\u003c/li\u003e\n\u003cli\u003eInstigator of the Boost Library Incubator (www.blincubator.com)\u003c/li\u003e\n\u003cli\u003eGiven talks on Boost/C++ related topics at C++Now and CPPCon\u003c/li\u003e\n\u003cli\u003eWritten articles in print periodicals such as Software Development and ACCU Overload\u003c/li\u003e\n\u003c/ul\u003e\n\u003cp\u003eOf late his interest has become more focused on practical approaches to improving program correctness.  This has motivated recent talks at CPP Con ( boost units library, C++ and abstract algebra) and most recently the Safe Numerics library - which has very recently been accepted as an official Boost Library.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.justsoftwaresolutions.co.uk/cplusplus/const-and-thread-safety.html"\u003eDoes const mean thread-safe?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003duHYGornuzUs"\u003eMeeting C++ Live: Multithreading with Rainer Grimm\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://foonathan.net/blog/2017/03/16/implementation-challenge-bitmask.html"\u003eImplementation Challenge flag_set: Type-safe hard to misuse bitmask\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.theatlantic.com/technology/archive/2015/11/programmers-should-not-call-themselves-engineers/414271/"\u003eProgrammers: Stop Calling Yourselves Engineers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRobert Ramey\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robertramey1"\u003e@robertramey1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.rrsd.com"\u003eRobert Ramey Software Development\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/robertramey/safe_numerics"\u003eSafe Numerics Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dcw_8QkFXZjI"\u003eCppCon 2016: Robert Ramey "Safe Numerics Library"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://rrsd.com/blincubator.com/"\u003eBoost Library Incubator\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-03-23T00:00:00Z",
    },
    {
      id: 263,
      sourceId: 4,
      title: "C++ Game Development at Blizzard",
      link: "https://cppcast.com/ben-deane/",
      description:
        'Rob and Jason are joined by Ben Deane from Blizzard Entertainment to talk about C++ game development and more.\n        \u003cp\u003eBen started in the games industry in the UK in 1995, when he got hired at Bullfrog straight after graduating from university. While there he worked on several games there like Syndicate Wars and Dungeon Keeper. By the late 1990s he had stopped using C and was allowed to use C++ at\nwork. In 2001 he moved to Kuju Entertainment and did a couple of games on XBox and PS2, then in 2003 he was hired by EA again and moved to Los Angeles, where he worked on the Medal of Honor series. He\u0027s always been a network game programmer, and in 2008 after a project cancellation at EA, he joined Blizzard as a lead engineer on Battle.net, working on technology for all of Blizzard\u0027s games. Today he\u0027s a principal engineer at Blizzard and the technical lead on the Battle.net desktop application. He\u0027s also a functional programming hobbyist who tries to use what he learns in Haskell to write better C++, and in recent years he has given several C++ conference talks at C++Now and CppCon.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/insomniacgames/ig-cachesim"\u003eInsomniac Games Cache Simulator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/03/09/functors-are-not-dead-the-double-functor-trick/"\u003eFunctors are not dead: the double functor trick\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/03/13/pi-day-challenge-for-the-most-expressive-code-results/"\u003ePi Day Challenge\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/done-words-about-the-future"\u003eI\u0027m Done - Geschafft: Words about the Future of my Blogs\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/check-for-const-correctness-with-the-c-core-guidelines-checker/"\u003eCheck for const correctness with the C++ Core Guidelines Checker\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBen Deane\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ben_deane"\u003e@ben_deane\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://github.com/elbeno"\u003eBen Deane on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.elbeno.com/blog/"\u003eBen Deane\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.blizzard.com"\u003eBlizzard Entertainment\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jobs.blizzard.com"\u003eBlizzard Careers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dojZbFIQSdl8"\u003eCppCon 2016: Ben Deane "Using Types Effectively"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dB6twozNPUoA"\u003eCppCon 2016: Ben Deane "std::accumulate: Exploring an Algorithmic Empire"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-03-16T00:00:00Z",
    },
    {
      id: 264,
      sourceId: 4,
      title: "Visual Studio 2017 for C++ Developers",
      link: "https://cppcast.com/daniel-moth/",
      description:
        'Rob and Jason are joined by Daniel Moth to talk about the new C++ features of Visual Studio 2017.\n        \u003cp\u003eDaniel Moth joined Microsoft in the UK in 2006, before transitioning to Redmond in 2008 to work as a Program Manager on Visual Studio, which is where he is still working today. Before Microsoft he worked as a software developer in the industry for almost a decade, most of that time building mobile apps.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://fearlesscoder.blogspot.co.uk/2017/02/the-c17-lands.html"\u003eThe C++17 Lands\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/02/22/learn-c-concepts-with-visual-studio-and-the-wsl/"\u003eLearn C++ Concepts with Visual Studio and the WSL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@barryrevzin/partial-ordering-an-enigma-wrapped-inside-of-a-riddle-a32e1a1fc10d#.huw3jxkny"\u003ePartial Ordering: An enigma wrapped inside of a riddle, wherein all compilers agree to be wrong\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDaniel Moth\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/danielmoth"\u003e@danielmoth\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/03/07/visual-studio-2017-for-c-developers-you-will-love-it/"\u003eVisual Studio 2017 for C++ Developers - you will love it\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Visual-Studio/Visual-Studio-2017-Launch/220"\u003eTop 7 things to be excited about as a C++ developer in Visual Studio 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dMBmp1gxCu9k"\u003eCppCon 2016: Carroll \u0026#38; Moth "Latest and Greatest from the visual Studio Family for C++ Developers"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/"\u003eVisual C++ Team Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-03-07T00:00:00Z",
    },
    {
      id: 265,
      sourceId: 4,
      title: "emBO++",
      link: "https://cppcast.com/odin-holmes-embopp/",
      description:
        'Rob and Jason are joined by Odin Holmes to talk about the recent Embedded C++ development conference emBO++.\n        \u003cp\u003eOdin Holmes has been programming bare metal embedded systems for 15+ years and as any honest nerd admits most of that time was spent debugging his stupid mistakes. With the advent of the 100x speed up of template metaprogramming provided by C++11 his current mission began: teach the compiler to find his stupid mistakes at compile time so he has more free time for even more template metaprogramming. Odin Holmes is the author of the Kvasir.io library, a DSL which wraps bare metal special function register interactions allowing full static checking and a considerable efficiency gain over common practice. He is also active in building and refining the tools need for this task such as the brigand MPL library, a replacement candidate for boost.parameter and a better public API for boost.MSM-lite.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.infinit.sh/elle-our-c-core-library-is-now-open-source/"\u003eElle, our C++ core library is now open source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/tvaneerd/cpp17_in_TTs"\u003eYet Another description of C++17 features; this time present mostly in Table form\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/atomic-smart-pointers"\u003eAtomic Smart Pointers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/arobenko/comms_champion"\u003eCOMMS Library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eOdin Holmes\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/odinthenerd"\u003e@odinthenerd\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/porkybrain"\u003eOdin Holmes on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://odinthenerd.blogspot.com/"\u003eOdin Holmes\u0027 Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.embo.io/"\u003eemBO++ - Embedded C++ Conference in Bochum\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://kvasir.io/"\u003eKvasir\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAKAYc9ZFBhk"\u003eMeeting C++ Lightning Talks - Odin Holmes - Modern special function register abstraction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/edouarda/brigand"\u003eBrigand\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-03-02T00:00:00Z",
    },
    {
      id: 266,
      sourceId: 4,
      title: "Trompeloeil Mocking Framework",
      link: "https://cppcast.com/bjorn-fahller/",
      description:
        'Rob and Jason are joined by Bj√∂rn Fahller to talk about the trompeloeil Mocking Framework for Modern C++ Unit Testing.\n        \u003cp\u003eBj√∂rn Fahller is a senior developer at Net Insight, and has been developing software for a living since 1994, mostly embedded programming for communications devices.  Bj√∂rn learned C++ from usenet and the ARM (Annotated Reference Manual) which was the standard before there was a standard. On a hobby basis, Bj√∂rn likes to find silly solutions to non-problems and to explore effects of programming constructs.\n¬†\nOutside of programming, Bj√∂rn is a member of a small group thet brews beer together, and is also a member of a volunteer organization of aviators who help  with things like search and rescue operations, forest fire monitoring, and storm damage assessment.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/multithreading-in-c-17-and-c-20"\u003eMultithreading with C++17 and C++20\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2017/02/15/distinguishing-between-maybe-null-vs-never-null-is-the-important-thing/"\u003eDistinguishing between maybe-null vs never-null is the important thing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Shows/C9-GoingNative/GoingNative-56-CMake-in-Visual-Studio"\u003eGoing Native 56: Cmake in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBj√∂rn Fahller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/bjorn_fahller"\u003e@bjorn_fahller\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://playfulprogramming.blogspot.se/"\u003ePlayful Programming\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rollbear/trompeloeil"\u003eTrompeloeil Mocking Framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmPYNsARvTDk"\u003eBj√∂rn Fahller - Mocking Modern C++ with Trompeloeil\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-02-22T00:00:00Z",
    },
    {
      id: 267,
      sourceId: 4,
      title: "Jumping into C++",
      link: "https://cppcast.com/alex-allain/",
      description:
        'Rob and Jason are joined by Alex Allain from Dropbox to talk about Dropbox\u0027s Djinni code generator and Alex\u0027s book Jumping into C++.\n        \u003cp\u003eAlex Allain is a Director of Engineering at Dropbox. He was one of the first engineers on the Dropbox Business product before leading Dropbox\u0027s Product Platform group, whose initiatives includes the Dropbox Sync Engine, shared mobile C++ and developer tools. Alex has run Cprogramming.com since 1998 and is the author of Jumping into C++, a book for new programmers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dbe4sRg9iO-A"\u003eCppChat: The Great Functor Debate (Ben, Jackie, and Jonathan)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/monads-in-c"\u003eMonads in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/arobenko/comms_champion"\u003eCOMMS Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.nayuki.io/page/undefined-behavior-in-c-and-cplusplus-programs"\u003eUndefined behavior in C and C++ programs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAlex Allain\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/alexallain"\u003e@alexallain\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dropbox/djinni"\u003eDjinni\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dZcBtF-JWJhM"\u003eCppCon 2014: Alex Allain \u0026#38; Andrew Twyman "Practical Cross-Platform Mobile C++ Development"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dK-k-axW2utc"\u003eCppCon 2015: Jacob Potter \u0026#38; Andrew Twyman ‚ÄúBridging Languages Cross-Platform..."\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dTXhLidEIxiI"\u003eDjinni in a bottle - Easily share code between iOS and Android using C++ by Stephan Jaetzold\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dropbox/nn"\u003enn: Non-nullable pointers for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/python/mypy"\u003emypy: Optional static typing for Python 2 and 3 (PEP484)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cprogramming.com/"\u003ecprogramming.com\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/2kDN7da"\u003eJumping into C++ (Amazon)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-02-15T00:00:00Z",
    },
    {
      id: 268,
      sourceId: 4,
      title: "Microsoft\u0027s STL",
      link: "https://cppcast.com/stephan-lavavej/",
      description:
        'Rob and Jason are joined by Stephan T Lavavej to talk about Microsoft\u0027s STL and some of the changes to the Library coming in the VS 2017 release.\n        \u003cp\u003eStephan T. Lavavej is a Principal Software Engineer at Microsoft, maintaining Visual C++\u0027s implementation of the C++ Standard Library since 2007. He also designed a couple of C++14 features: make_unique and the transparent operator functors. He likes his initials (which people can actually spell) and cats (although he doesn\u0027t own any).\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.slashslash.info/cppchat/"\u003eCppChat "The Great Functor Debate" is Saturday\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://khuttun.github.io/2017/02/04/implementing-state-machines-with-std-variant.html"\u003eImplementing State Machines with std::variant\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/stl-learning-resource/"\u003eSTL learning resource\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStephan T. Lavavej\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/StephanTLavavej"\u003e@StephanTLavavej\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/02/06/stl-fixes-in-vs-2017-rtm/"\u003eSTL Fixes in VS 2017 RTM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/11/c1417-features-and-stl-fixes-in-vs-15-preview-5/"\u003eC++ 14/17 Features and STL Fixes in VS "15" Preview 5\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/08/24/c1417-features-and-stl-fixes-in-vs-15-preview-4/"\u003eC++ 14/17 Features and STL Fixes in VS ‚Äú15‚Äù Preview 4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-02-07T00:00:00Z",
    },
    {
      id: 269,
      sourceId: 4,
      title: "News Roundup",
      link: "https://cppcast.com/news-roundup-02-2017/",
      description:
        'Rob and Jason discuss two weeks worth of C++ news, updates and blog posts.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://jfbastien.github.io/what-is-cpp17"\u003eWhat\u0027s in C++17?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Ericsson/CodeChecker"\u003eCodeChecker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2017/01/const-move-and-rvo.html"\u003eConst, Move and RVO\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://randomascii.wordpress.com/2017/01/08/add-a-const-here-delete-a-const-there/"\u003eAdd a const here delete a const there\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/genymobile/how-c-lambda-expressions-can-improve-your-qt-code-8cd524f4ed9f#.jgid0kyfv"\u003eHow C++ lambda expressions can improve your Qt code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2017/01/27/yield-keyword-to-become-co_yield-in-vs-2017/"\u003e\u0027yield\u0027 keyword to become \u0027co_yield\u0027 in VS 2017\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/pulse/compiler-explorer-now-patreon-matt-godbolt"\u003eCompiler Explorer now on Patreon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/nlohmann/json/releases/tag/v2.1.0"\u003eJSON for Modern C++ Version 2.1.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/philsquared/Catch/releases/tag/v1.7.0"\u003eCatch 1.7\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jackieokay.com/2017/01/26/functors.html"\u003eStop calling "Function Objects" "Functors"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLRyNF2Y6sca06lulacjysyu8RIwfKgYoY"\u003eMeeting C++ 2016 Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.fluentcpp.com/2017/01/30/how-to-choose-good-names/"\u003eHow to choose good names\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-02-01T00:00:00Z",
    },
    {
      id: 270,
      sourceId: 4,
      title: "Beast",
      link: "https://cppcast.com/vinnie-falco/",
      description:
        'Rob and Jason are joined by Vinnie Falco to talk about the Beast HTTP and Web Sockets library.\n        \u003cp\u003eVinnie Falco started programming on an Apple II+ in 1982. He did significant work on Canvas, an early 1990s desktop publishing program that starting on the Macintosh. A while later he wrote BearShare - a Gnutella compatible file sharing program.\nAfter that Vinnie joined up with Ripple, a company that is developing a global financial settlement network built on top of a decentralized cryptocurrency and its associated ledger. Ripple has graciously given him the opportunity to develop and publish Beast, the HTTP and WebSocket library written in C++ and used in Ripple.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://simpleprogrammer.com/2017/01/17/winners-2016-software-developer-podcast-awards/"\u003eWinners of the 2016 Software Developer Podcast Awards\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://adishavit.github.io/2017/salami-method/"\u003eThe Salami Method\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.gnu.org/projects/cxx-status.html#cxx1z"\u003eg++7 is C++17 complete\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://dotnetrocks.com/?show\u003d1398"\u003e.NET Rocks: C++ for a New Generation with Kate Gregory\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/philsquared/Catch/releases/tag/v1.6.0"\u003eCatch 1.6 release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://jonasdevlieghere.com/order-your-members/"\u003eOrder Your Members\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eVinnie Falco\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/falcovinnie"\u003e@falcovinnie\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/vinniefalco"\u003eVinnie Falco\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/vinniefalco/Beast"\u003eBeast Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003duJZgRcvPFwI"\u003eCppCon 2016: Vinnie Falco "Introducing Beast: HTTP and WebSockets C++ library"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ripple.com/"\u003eRipple\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-01-17T00:00:00Z",
    },
    {
      id: 271,
      sourceId: 4,
      title: "Library Working Group and libc++",
      link: "https://cppcast.com/marshall-clow/",
      description:
        'Rob and Jason are joined by Marshall Clow to talk about his role on the C++ Standards Committee\u0027s Library Working Group.\n        \u003cp\u003eMarshall is a long-time LLVM and Boost participant. He is a principal engineer at Qualcomm, Inc. in San Diego, and the code owner for libc++, the LLVM standard library implementation. He is also the chairman of the Library Working Group of the C++ standards committee. He is the author of the Boost.Algorithm library and maintains several other Boost libraries.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2017-conference/announcements/2017/01/06/call-for-submission.html"\u003eC++Now 2017 Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://llvm.org/devmtg/2017-03/"\u003e2017 European LLVM Developers Meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vittorioromeo.info/index/blog/passing_functions_to_functions.html"\u003ePassing functions to functions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.regehr.org/archives/1453"\u003eA Tourist\u0027s Guide to the LLVM Source Code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMarshall Clow\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mclow"\u003e@mclow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cplusplusmusings.wordpress.com/"\u003eMarshall\u0027s C++ Musings\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://libcxx.llvm.org/"\u003e"libc++" C++ Standard Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.qualcomm.com/"\u003eQualcomm\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/std/the-committee"\u003eThe Committee: WG21\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dh4Jl1fk3MkQ"\u003eCppCon 2016: Marshall Clow "STL Algorithms - why you should use them, and how to write your own"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dH9gAaNRoon4"\u003eCppCon 2015: Marshall Clow "string_view"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-01-11T00:00:00Z",
    },
    {
      id: 272,
      sourceId: 4,
      title: "Memory Algorithm Proposal",
      link: "https://cppcast.com/brittany-friedman/",
      description:
        'Rob and Jason are joined by Brittany Friedman to talk about her accepted C++17 proposal which adds new algorithms and utilities for memory management and the process she went through getting the proposal accepted.\n        \u003cp\u003eBrittany Friedman is a dense collection of matter formed from molecules originating from inside the sun. She currently works as a programmer at Gearbox Software, where she weaves ones and zeroes into intricate little patterns. Her proposal for new memory management algorithms was accepted for C++17 and a bug that she filed against the C++ standard was fixed the way that she recommended. So basically you do not want to trifle with her.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://simpleprogrammer.com/podcast-awards/"\u003e2016 Software Developer Podcast Awards\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://seanmiddleditch.com/keep-disabling-exceptions/"\u003eKeep Disabling Exceptions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.levelofindirection.com/journal/2016/12/28/c17-why-its-better-than-you-might-think.html"\u003eC++17 Why it\u0027s better than you might think\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.klipse.tech/cpp/2016/12/29/blog-cpp.html"\u003eA new way of blogging about C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBrittany Friedman\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/listenserver"\u003e@listenserver\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/briterator"\u003eBrittany Friedman\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://wg21.link/p0040"\u003eExtending memory management tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/briterator/drpdb"\u003edrpdb: Convert from Microsoft PDB format into a MySQL database\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://gameangst.com/?p\u003d320"\u003eSymbol Sort: A Utility for Measuring C++ Code Bloat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gearboxsoftware.com/"\u003eGearbox Software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dkPR8h4-qZdk"\u003eCppCon 2016: Nicholas Ormrod "The strange details of std::string at Facebook"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2017-01-05T00:00:00Z",
    },
    {
      id: 273,
      sourceId: 4,
      title: "Regular Void",
      link: "https://cppcast.com/matt-calabrese/",
      description:
        'Rob and Jason are joined by Matt Calabrese to talk about his Regular Void Proposal, template\u0026#60;auto\u0026#62;, the state of Concepts and more.\n        \u003cp\u003eMatt Calabrese is a software engineer working primarily in C++. He started his programming career in the game industry and is now working on libraries at Google. Matt has been active in the Boost community for over a decade, is currently a member of the Boost Steering Committee, and is a member of the Program Committee for C++Now. Starting in the fall of 2015, he has been attending C++ Standards Committee meetings, authoring several proposals targeting the standard after C++17, notably including a proposal to turn the void type into an instantiable type and a proposal for the standard library to introduce a generic algorithm for invoking standard Callables with argument types and argument amounts that may be partially calculated at compile-time or at runtime. He is also the author of the controversial paper "Why I want Concepts, but why they should come later rather than sooner", which may have contributed to the decision to not include the concepts language feature in C++17.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://simpleprogrammer.com/podcast-awards/"\u003e2016 Software Developer Podcast Awards\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.slashslash.info/2016/12/my-take-at-times/"\u003eMy take at times\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.davidecoppola.com/2016/12/cpp-program-to-get-cpu-usage-from-command-line-in-linux/"\u003eA C++ program to get CPU usage from command line in Linux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kristerw.blogspot.com/2016/12/pointer-comparison-invalid-optimization.html"\u003ePointer comparison an invalid optimization in GCC\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Calabrese\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/cppsage"\u003e@cppsage\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost.org"\u003eBoost\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org"\u003eC++Now\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0146r1.html"\u003eP0146: Regular Void (Revision 1)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0376r0.html"\u003eP0376: A Single Generalization of std::invoke, std::apply, and std::visit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0240r0.html"\u003eP0240: Why I want Concepts, but why they should come later rather than sooner\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-12-21T00:00:00Z",
    },
    {
      id: 274,
      sourceId: 4,
      title: "Catch 2 and C++ the Community",
      link: "https://cppcast.com/phil-nash-catch2-cpp-community/",
      description:
        'Rob and Jason are joined by Phil Nash, Developer Advocate at JetBrains, to talk about updates to the Catch Unit test library and new features coming to CLion and ReSharper for C++.\n        \u003cp\u003ePhil started coding back in the early 80s, on 8-bit home computers: from the ZX-81 to the Commodore 64, in BASIC and assembler. He later moved on to PCs and C++ in the early 90s and, despite forays into other languages, keeps coming back to C++. His career has taken him through domains such as anti-virus, mobile, finance and developer tools - among others. He\u0027s the original author of the C++ test framework, Catch and is now Developer Advocate at JetBrains for CLion, AppCode and ReSharper C++. His hobbies include writing podcast bios and trolling the podcast hosts.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/agauniyal/rang"\u003eMinimal, Header only Modern C++ library for colors in your terminal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.codeplay.com/portal/12-09-16-the-view-from-nov-2016-cpp-standard-meeting-issaquah"\u003eThe view from Nov 2016 C++ standard Meeting Issaquah\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ledentsov.de/2016/12/10/cpp-version-ruby-42-times-via-user-defined-literals/"\u003eC++ version of ruby\u0027s integer::times via user-defined literals\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePhil Nash\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/phil_nash/"\u003e@phil_nash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://levelofindirection.com/"\u003eLevel of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://extralevelofindirection.com/"\u003eExtra Level of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://catch-lib.net/"\u003eCatch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/CppLondon/"\u003eC++::London\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/MUCplusplus/events/235593620/"\u003eMunich User Group: Functional C++ for Fun and Profit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dYgcUuYCCV14"\u003eYouTube: Functional C++ for Fun and Profit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jetbrains.com/"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/dotnet/2016/12/15/resharper-ultimate-2016-3-is-released/"\u003eReSharper Ultimate 2016.3 is Released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/clion/buy/#edition\u003ddiscounts"\u003eJetBrains CLion Discounts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/objc/buy/#edition\u003ddiscounts"\u003eJetBrains AppCode Discounts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/resharper-cpp/buy/#edition\u003ddiscounts"\u003eJetBrains ReSharper C++ Discounts\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dkPR8h4-qZdk"\u003eCppCon 2016: Nicholas Ormrod "The strange details of std::string at Facebook"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-12-14T00:00:00Z",
    },
    {
      id: 275,
      sourceId: 4,
      title: "C++ Game Development at Ubisoft",
      link: "https://cppcast.com/nicolas-fleury/",
      description:
        'Rob and Jason are joined by Nicolas Fleury, Technical Architect at Ubisoft Montreal, to talk about the development and performance tuning techniques used at Ubisoft on games like Rainbow Six Siege.\n        \u003cp\u003eNicolas has 13 years of experience in the video game industry, more years in the software industry in telecoms, in speech recognition and in computer assisted surgery. Technical Architect on Tom Clancy\u0027s: Rainbow Six Siege, he is one of the key Architects behind some collaboration initiatives at Ubisoft and was also Technical Architect on games like Prince of Persia. He presented at CppCon 2014 "C++ in Huge AAA Games".\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dDvUL0Y2bpyc"\u003eBjarne Stroustrup - Keynote Meeting C++ 2016\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://probablydance.com/2016/12/02/investigating-radix-sort/"\u003eInvestigating Radix Sort\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.viva64.com/en/b/0457/"\u003eHow to use PVS-Studio for Free\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNicolas Fleury\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2016.sched.com/cppcon.2016.nidoizo_yahoo.com"\u003eNicolas Fleury\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://montreal.ubisoft.com/"\u003eUbisoft Montreal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dqYN6eduU06s"\u003eCppCon 2014: Nicolas Fleury "C++ in Huge AAA Games"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtD4xRNB0M_Q"\u003eCppCon 2016: Nicolas Fleury "Rainbow Six Siege: Quest for Performance"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://groups.google.com/a/isocpp.org/forum/#!forum/sg14"\u003eSG14 Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003drX0ItVEVjHc"\u003eCppCon 2014: Mike Acton "Data-Oriented Design and C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dX1T3IQ4N-3g"\u003eCppCon 2014: Jeff Preshing "How Ubisoft Develops Games for Multicore - Before and After C++11"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dkPR8h4-qZdk"\u003eCppCon 2016: Nicholas Ormrod "The strange details of std::string at Facebook"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-12-08T00:00:00Z",
    },
    {
      id: 276,
      sourceId: 4,
      title: "Backtrace",
      link: "https://cppcast.com/abel-mathew/",
      description:
        'Rob and Jason are joined by Abel Mathew, Co-Founder and CEO of Backtrace I/O, to talk about the debugging platform and its features for C++ developers.\n        \u003cp\u003eAbel Mathew is the co-founder and CEO of Backtrace I/O. Prior to Backtrace, Abel was a Head of Engineering at AppNexus where he led a team of developers to improve ad optimization and reduce platform-wide costs. He spent multiple years as a developer and a team lead on AppNexus‚Äô Adserver Team where he helped design and implement their low-latency advertising platform. Before AppNexus, Abel was a kernel module and tools developer at IBM and a server room monkey at AMD.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/11/16/permissive-switch/"\u003eGive Visual C++ a Switch to Standard Conformance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://baptiste-wicht.com/posts/2016/11/zapcc-a-faster-c%2B%2B-compiler.html"\u003eZapcc: a faster C++ compiler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://devnexen.blogspot.com/2016/11/better-stronger-faster-there-is-zapcc.html"\u003eBetter, stronger, faster ‚Ä¶ there is zapcc\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jfrog.com/blog/conan-joins-jfrog/"\u003eConan Joins JFrog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/5ehrel/what_do_you_use_c_for/"\u003eWhat do YOU use C++ for\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAbel Mathew\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/nullisnt0"\u003e@nullisnt0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/abelmathew"\u003eAbel Mathew on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://backtrace.io/blog/"\u003eBacktrace Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://backtrace.io/blog/blog/2016/11/18/minidump-beta/"\u003eMinidump Free Beta\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dWHhorNLa934"\u003eSurge 2016 - Abel Mathew - Post-mortem Debugging: could you be the one?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bazel.build/"\u003eBazel\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-11-30T00:00:00Z",
    },
    {
      id: 277,
      sourceId: 4,
      title: "Cppcheck",
      link: "https://cppcast.com/daniel-marjamaki/",
      description:
        'Rob and Jason are joined by Daniel Marjam√§ki to talk about developing the CppCheck static analysis tool.\n        \u003cp\u003eDaniel lives in Stockholm, Sweden with his wife and son. He has a degree in electronics but has never worked as an electronics engineer. Daniel works as a consultant at Evidente in Sweden which provides consultants and contractors for embedded software development and static analysis.\nDaniel started Cppcheck almost 10 years ago as a hobby project that he works on in his spare time. Daniel sometimes works on other hobby projects such as an open source retro mobile phone with a rotary dial plate instead of buttons or a screen.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.quantamagazine.org/20160920-formal-verification-creates-hacker-proof-code/"\u003eHacker-Proof Code Confirmed\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/AnthonyCalandra/modern-cpp-features"\u003eCheatsheet of modern C++ language and library features\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://gcc.beta.godbolt.org/"\u003eCompiler Explorer Beta now with early support for MSVC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hacks.mozilla.org/2016/10/webassembly-browser-preview/"\u003eWebAssembly Browser Preview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2016/11/15/trip-report-fall-iso-c-standards-meeting-issaquah/"\u003eTrip report: Fall ISO C++ standards meeting\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDaniel Marjam√§ki\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/danmar"\u003eDaniel Marjam√§ki on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcheck.sourceforge.net/"\u003eCppcheck\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-11-16T00:00:00Z",
    },
    {
      id: 278,
      sourceId: 4,
      title: "Kvasir",
      link: "https://cppcast.com/odin-holmes-kvasir/",
      description:
        'Rob and Jason are joined by Odin Holmes to talk about developing for Embedded Microcontrollers with C++ and the Kvasir library.\n        \u003cp\u003eOdin Holmes has been programming bare metal embedded systems for 15+ years and as any honest nerd admits most of that time was spent debugging his stupid mistakes. With the advent of the 100x speed up of template metaprogramming provided by C++11 his current mission began: teach the compiler to find his stupid mistakes at compile time so he has more free time for even more template metaprogramming. Odin Holmes is the author of the Kvasir.io library, a DSL which wraps bare metal special function register interactions allowing full static checking and a considerable efficiency gain over common practice. He is also active in building and refining the tools need for this task such as the brigand MPL library, a replacement candidate for boost.parameter and a better public API for boost.MSM-lite.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://xania.org/201611/compiler-explorer-now-supports-embedded-view"\u003eCompiler Explorer\u0027s embedded view\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.windows.com/msedgedev/2016/10/31/webassembly-browser-preview/#FkxTj26Ahp54efus.97"\u003eA peek into the WebAssembly Browser preview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://hacks.mozilla.org/2016/10/webassembly-browser-preview/"\u003eWebAssembly Browser Preview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dPLF5Y5BXD_g"\u003eCling on Ubuntu on Windows\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eOdin Holmes\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/odinthenerd"\u003e@odinthenerd\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/porkybrain"\u003eOdin Holmes on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://odinthenerd.blogspot.com/"\u003eOdin Holmes\u0027 Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://kvasir.io/"\u003eKvasir\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAKAYc9ZFBhk"\u003eMeeting C++ Lightning Talks - Odin Holmes - Modern special function register abstraction\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/edouarda/brigand"\u003eBrigand\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.embo.io/"\u003eEmbedded C++ Conference in Bochum\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-11-09T00:00:00Z",
    },
    {
      id: 279,
      sourceId: 4,
      title: "Blaze",
      link: "https://cppcast.com/klaus-iglberger/",
      description:
        'Rob and Jason are joined by Klaus Iglberger to discuss the Blaze high performance math library.\n        \u003cp\u003eKlaus Iglberger has finished his PhD in computer science in 2010. Back then, he contributed to several massively parallel simulation frameworks and was an active researcher in the high performance computing community. From 2011 to 2012, he was the managing director of the central institute for scientific computing in Erlangen. Currently he is on the payroll at CD-adapco in Nuremberg, Germany, as a senior software engineer. He is the co-organizer of the Munich C++ user group (MUC++)and he is the initiator and lead designer of the Blaze C++ math library.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/26/recommendations-to-speed-c-builds-in-visual-studio/"\u003eRecommendations to speed C++ builds in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://foonathan.github.io/blog/2016/10/26/output-parameter.html"\u003evoid foo(T\u0026#38; out) How to fix output parameters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.includeos.org/2016/10/28/routing-paths-in-includeos"\u003eRouting paths in IncludeOs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKlaus Iglberger\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.meetingcpp.com/index.php/sv14/items/10.html"\u003eKlaus Iglberger\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://bitbucket.org/blaze-lib/blaze"\u003eBlaze\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.meetup.com/MUCplusplus/"\u003eMunich C++ User Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dw-Y22KrMgFE"\u003eCppCon 2016: Klaus Iglberger "The Blaze High Performance Math Library"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/cpp/?utm_source\u003dcppcast\u0026#38;utm_medium\u003dpodcast\u0026#38;utm_content\u003dcppcast-podcast\u0026#38;utm_campaign\u003dcpp"\u003eJetBrains\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-11-02T00:00:00Z",
    },
    {
      id: 280,
      sourceId: 4,
      title: "Embedded Development",
      link: "https://cppcast.com/dan-saks/",
      description:
        'Rob and Jason are joined by Dan Saks from Saks \u0026#38; Associates to discuss state of C++ in the embedded development industry.\n        \u003cp\u003eDan Saks is the president of Saks \u0026#38; Associates, which offers training and consulting in C and C++ and their use in developing embedded systems. He has been a columnist for The C/C++ Users Journal, The C++ Report, Embedded Systems Design, embedded.com and several other publications. Dan served as the first secretary of the C++ Standards Committee and contributed to the CERT Secure Coding Standards for C and C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.amazon.com/Jumping-into-C-Alex-Allain/dp/0988927802"\u003eJumping into C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/21/cpprestsdk-2-9-0-is-available-on-github/"\u003eCppRestSDK 2.9.0 available on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://componenthouse.com/2016/10/21/a-note-about-the-volatile-keyword-in-cpp/"\u003eA note about the volatile keyword in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://woboq.com/blog/codebrowser-under-the-hood.html"\u003eWoboq Code Browser: under the hood\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vittorioromeo.info/index/blog/on_lambda_vs_iterator_paper.html"\u003eOn the recent lambdas vs iterators paper\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDan Saks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.dansaks.com/"\u003eSaks \u0026#38; Associates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dD7Sd8A6_fYU"\u003eCppCon 2016: Dan Saks "extern c: Talking to C Programmers about C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.embedded.com/"\u003eembedded.com\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-10-27T00:00:00Z",
    },
    {
      id: 281,
      sourceId: 4,
      title: "Robotics Development",
      link: "https://cppcast.com/jackie-kay/",
      description:
        'Rob and Jason are joined by Jackie Kay from Marble to discuss the use of C++ in the Robotics industry and some of the unique challenges in Robotics development.\n        \u003cp\u003eAfter spending her childhood wanting to become a novelist, Jackie switched over from writing stories to writing code during college. She graduated from Swarthmore College in 2014 with a Bachelor\u0027s in Computer Science and went on to work at the Open Source Robotics Foundation for two years, supporting Gazebo, a physics simulator for robotics R\u0026#38;D, and ROS, an open source application framework for robotics development. She recently started as an early employee at Marble in San Francisco, a startup working on autonomous delivery.\u003c/p\u003e\n\u003cp\u003eJackie was a speaker at CppCon 2015 and 2016 and a volunteer at C++ Now 2016 and frequently attends the Bay Area ACCU meetups. Her hobbies include rock climbing, travelling, and reading (books, not just blog posts).\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/what-does-modern-c-really-mean.html"\u003eWhat does "Modern C++" really mean\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bulldozer00.com/2016/10/16/the-unsigned-conundrum/"\u003eThe "unsigned" Conundrum\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppisland.com/?p\u003d194"\u003eC++ Variadic templates from the ground up\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJackie Kay\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jackayline"\u003e@jackayline\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jacquelinekay"\u003eJackie Kay\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jackieokay.com/"\u003eJackie Kay\u0027s website\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://wiki.ros.org/"\u003eROS (Robot Operating System)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ros2/ros2/wiki"\u003eROS 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://gazebosim.org/"\u003eGazebo (Robot simulation)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://bitbucket.org/osrf/gazebo"\u003eGazebo\u0027s Bitbucket Repository\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://caffe.berkeleyvision.org/"\u003eCaffe - Deep Learning Framework\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.tensorflow.org/"\u003eTensorFlow - Machine Intelligence Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.marble.io/"\u003eMarble\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmresWGsVHj0"\u003eCppCon 2016: Jackie Kay "Lessons Learned From An Embedded RTPS in Modern C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jacquelinekay/em_benchmarks"\u003eCode examples from "Lessons Learned From An Embedded RTPS in Modern C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/osrf/cmbml"\u003eWork-in-progress implementation on DDS/RTPS\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-10-19T00:00:00Z",
    },
    {
      id: 282,
      sourceId: 4,
      title: "C++/WinRT",
      link: "https://cppcast.com/kenny-kerr-cpp-winrt/",
      description:
        'Rob and Jason are joined by Kenny Kerr from Microsoft to discuss the C++/WinRT library, previously known as ModernCpp, a standard C++ projection for the Windows Runtime.\n        \u003cp\u003eKenny Kerr is an engineer on the Windows team at Microsoft, an MSDN Magazine contributing editor, Pluralsight author, and creator of moderncpp.com (C++/WinRT). He writes at kennykerr.ca and you can find him on Twitter at @kennykerr.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://visualstudio.uservoice.com/forums/121579-visual-studio-2015/suggestions/2286557-support-debugging-of-c-code-with-intellitrace?tracking_code\u003dbb4e02b5c270f6744cab8484acc7b28f"\u003eVOTE! Support debugging of C++ code with IntelliTrace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/all-cppcon-2016-videos-are-up/"\u003eAll CppCon 2016 Videos Are Up!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/visual-studio-15-preview-5-now-available/"\u003eVisual Studio "15" Preview 5 Now Available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/07/compiler-tools-layout-in-visual-studio-15/"\u003eCompiler Tools Layout in Visual Studio "15"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/11/c1417-features-and-stl-fixes-in-vs-15-preview-5/"\u003eC++ 14/17 Features and STL Fixes in VS "15" Preview 5\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/bring-your-c-codebase-to-visual-studio-with-open-folder/"\u003eBring your C++ codebase to Visual Studio with "Open Folder"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/c-compiler-diagnostics-improvements-in-vs-15-rc/"\u003eC++ compiler diagnostics improvements in VS "15" Preview 5\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/c-intellisense-improvements-predictive-intellisense-filtering/"\u003eC++ IntelliSense Improvements - Predictive IntelliSense \u0026#38; Filtering\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/cmake-support-in-visual-studio/"\u003eCMake support in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/visual-c-compiler-version/"\u003eVisual C++ Compiler Version\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/05/faster-c-solution-load-with-vs-15/"\u003eFaster C++ solution load with VS "15"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/10/12/cppcorecheck/"\u003eC++ Core Check code analysis is included with VS "15"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKenny Kerr\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/kennykerr"\u003e@kennykerr\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kennykerr.ca/"\u003eKenny Kerr\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://moderncpp.com/2016/10/13/cppwinrt-available-on-github/"\u003eC++/WinRT Available on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/microsoft/cppwinrt"\u003ecppwinrt repository on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dlm4IwfiJ3EU"\u003eCppCon 2016: Kenny Kerr \u0026#38; James McNellis "Embracing Standard C++ for the Windows Runtime"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dv0SjumbIips"\u003eCppCon 2016: Kenny Kerr \u0026#38; James McNellis "Putting Coroutines to Work with the Windows Runtime"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-10-12T00:00:00Z",
    },
    {
      id: 283,
      sourceId: 4,
      title: "SG14 Update",
      link: "https://cppcast.com/guy-davidson-sg14-update/",
      description:
        'Rob and Jason are joined by Guy Davidson from Creative Assembly to discuss the work of the SG 14 game dev/low latency group including his ring buffer proposal and more.\n        \u003cp\u003eGuy Davidson is the Coding Manager of Creative Assembly, makers of the Total War franchise, Alien:Isolation and the upcoming Halo Wars sequel, Guy has been writing games since the early 1980s. He is now also a contributor to SG14, the study group devoted to low latency, real time requirements, and performance/efficiency especially for Games, Financial/Banking, and Simulations. He speaks at schools, colleges and universities about programming and likes to help good programmers become better programmers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d2zBfcyHaDEY"\u003eCppCon 2016: What We\u0027ve Learned From the C++ Community\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://gcc.godbolt.org/"\u003eCompiler Explorer Update\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.oreilly.com/programming/free/practical-c-plus-plus-metaprogramming.csp"\u003eFree O\u0027Reilly Book: Practical C++ Metaprogramming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://lists.boost.org/boost-announce/2016/09/0475.php"\u003eBoost 1.6.2. Release\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ncatlin/rgat"\u003eRgat: an instruction trace visualisation tool for dynamic program analysis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cpplang.diegostamigni.com/"\u003eC++ Slack Group\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGuy Davidson\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/hatcat01"\u003e@hatcat01\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003ddMupATOJKWc"\u003eCppCon 2016: WG21-SG14 - Making C++ better for games, embedded and financial developers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.creative-assembly.com/"\u003eCreative Assembly\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-10-07T00:00:00Z",
    },
    {
      id: 284,
      sourceId: 4,
      title: "Boost::Process",
      link: "https://cppcast.com/klemens-morgenstern/",
      description:
        'Rob and Jason are joined by Klemens Morgenstern to discuss his experimental changes in boost::dll and his proposed boost::process library.\n        \u003cp\u003eBorn in 1988 in Dresden, I have a Bachelors in Electrical Engineering and  Master\u0027s Degree in Microsystems \u0026#38; Microelectronics. Fell in Love with C++ while working with embedded systems. Klemens was working full time as a C++-Developer from 2013 until early 2016, and is now starting his own consulting company, trying to bring C++ to C-Programmers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://finance.jaxlondon.com/wp-content/uploads/2016/05/Optimization-Subtleties-Using-C-in-Low-Latency_Jason-Hearne-McGuiness.pdf"\u003eOptimization Subtleties Using C++ in Low-Latency Trading\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2016/09/25/to-store-a-destructor/"\u003eHerb Sutter: To store a destructor\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLHTh1InhhwT7J5jl4vAhO1WvGHUUFgUQH"\u003eCppCon 2016 Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.viva64.com/en/b/0429/"\u003eHow to avoid bugs using modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/09/19/vcpkg-a-tool-to-acquire-and-build-c-open-source-libraries-on-windows/"\u003eVcpkg: a tool to acquire and build C++ open source libraries on Windows\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.conan.io/2016/09/27/Why-a-C++-package-manager-can\u0027t-be-written-in-C++.html"\u003eWhy a C++ package manager can\u0027t be written in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKlemens Morgenstern\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/klemens-morgenstern"\u003eKlemens Morgenstern\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.mw-sc.de/"\u003eMorgenstern \u0026#38; Walther\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.boost.org/doc/libs/1_62_0/doc/html/boost_dll/mangled_import.html"\u003eboost::dll Mangled Import\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://klemens-morgenstern.github.io/process/"\u003eboost::process\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-09-29T00:00:00Z",
    },
    {
      id: 285,
      sourceId: 4,
      title: "CppCon 2016",
      link: "https://cppcast.com/chandler-carruth/",
      description:
        'Rob and Jason are joined by Chandler Carruth from Google, in this live interview from CppCon 2016 Chandler discusses the topics of his two CppCon talks and using Modules at Google.\n        \u003cp\u003eChandler Carruth leads the Clang team at Google, building better diagnostics, tools, and more. Previously, he worked on several pieces of Google‚Äôs distributed build system. He makes guest appearances helping to maintain a few core C++ libraries across Google‚Äôs codebase, and is active in the LLVM and Clang open source communities. He received his M.S. and B.S. in Computer Science from Wake Forest University, but disavows all knowledge of the contents of his Master‚Äôs thesis. He is regularly found drinking Cherry Coke Zero in the daytime and pontificating over a single malt scotch in the evening.\u003c/p\u003e\n\u003ch3\u003eCppCon Lightning Talks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/atilaneves"\u003eAtila Neves\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/atilaneves/premock"\u003eMock C functions using the preprocessor\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/meetingcpp"\u003eJens Weller\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/ken-sykes-10ba9a3a"\u003eKen Sykes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/_jonkalb"\u003eJon Kalb\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Xazax-hun"\u003eGabor Horvath\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Ericsson/CodeCompass"\u003eCodeCompass\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eChandler Carruth\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/chandlerc1024"\u003e@chandlerc1024\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/chandlerc"\u003eChandler Carruth\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLHTh1InhhwT7J5jl4vAhO1WvGHUUFgUQH"\u003eCppCon 2016 Playlist\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dfHNmRkzxHWs"\u003eCppCon 2014: Chandler Carruth "Efficiency with Algorithms, Performance with Data Structures"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dnXaxk27zwlk"\u003eCppCon 2015: Chandler Carruth "Tuning C++: Benchmarks, and CPUs, and Compilers! Oh My!"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-09-25T00:00:00Z",
    },
    {
      id: 286,
      sourceId: 4,
      title: "Maintaining Large Codebases",
      link: "https://cppcast.com/titus-winters-maintaining-large-codebases/",
      description:
        'Rob and Jason are joined by Titus Winters from Google, about Google\u0027s strategies to maintain a 100M line monolithic codebase.\n        \u003cp\u003eTitus Winters has spent the past 4 years working on Google\u0027s core C++ libraries. He\u0027s particularly interested in issues of large scale software engineer and codebase maintenance: how do we keep a codebase of over 100M lines of code consistent and flexible for the next decade? Along the way he has helped Google teams pioneer techniques to perform automated code transformations on a massive scale, and helps maintain the Google C++ Style Guide.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/09/13/visual-c-for-linux-1-0-5-updates/"\u003eVisual C++ for Linux Update\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/rscpp/whats-new-in-resharper-c-2016-2/"\u003eWhat\u0027s New in ReSharper C++ 2016.2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://shaharmike.com/cpp/std-string/"\u003eExploring std::string\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.udemy.com/cpp-short-and-sweet/?siteID\u003dMaufOVPBmz4-dVcn1TSD8m4m.owPBcWTiw\u0026#38;LSNPUBID\u003dMaufOVPBmz4"\u003eC++, Short and Sweet, Part 1\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTitus Winters\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/tituswinters"\u003eTitus Winters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dzW-i9eVGU_k"\u003eCppCon 2015: Titus Winters "Lessons in Sustainability"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003du5senBJUkPc"\u003eCppCon 2015: All Your Tests are Terrible\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.backtrace.io/cppcast"\u003eBacktrace\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-09-15T00:00:00Z",
    },
    {
      id: 287,
      sourceId: 4,
      title: "MAME Emulation Project",
      link: "https://cppcast.com/miodrag-milanovic/",
      description:
        'Rob and Jason are joined by Miodrag Milanovic to discuss his work on the MAME emulation project, its history and moving the MAME codebase from C to C++.\n        \u003cp\u003eBorn in 1978, living in Novi Sad, Serbia. Proud husband and father of two. Started professional programming career in year 2000 working in Java, C#  and of course C and C++ for various international customers. From 2012 coordinator of MAME emulation project, pushing hard in modernization of two decade old code.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/bitfunnel/nativejit/"\u003eNativeJIT a C++ to x64 JIT used in Bing\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.coati.io/blog/release_0_8/"\u003eCoati Release 0.8\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.learncpp.com/"\u003eLearnCpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.computerhistory.org/collections/catalog/102624733"\u003e"The design of C++" lecture by Bjarne Stroustrup\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMiodrag Milanovic\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/micko_mame"\u003e@micko_mame\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.mamedev.org/"\u003eMAME - Multiple Arcade Machine Emulator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mamedev/mame"\u003eMAME on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-09-07T00:00:00Z",
    },
    {
      id: 288,
      sourceId: 4,
      title: "News Roundup",
      link: "https://cppcast.com/news-roundup-09-2016/",
      description:
        'Episode 68 of CppCast recorded September 1st 2016\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.meetup.com/Triangle-C-Developers-Group/"\u003eTriangle C++ Developers Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cpplang.diegostamigni.com/"\u003eC++ Slack Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://kfrlib.com/blog/how-c14-and-c17-help-to-write-faster-and-better-code-real-world-examples/"\u003eHow C++14 and C++17 help to write faster (and better) code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/08/23/range-v3-on-msvc-is-available-on-github/"\u003eRange-v3 on MSVC is Available on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://thetoeb.de/2016/08/30/modern-cmake-presentation/"\u003eModern CMake Slides\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://fgiesen.wordpress.com/2016/08/25/how-many-x86-instructions-are-there/"\u003eHow many x86 instructions are there?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://arobenko.gitbooks.io/bare_metal_cpp/content/"\u003ePractical Guide to Bare Metal C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.viva64.com/en/b/0415/"\u003ePVS-Studio confesses its love for Linux\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://engineering.mongodb.com/post/succeeding-with-clangformat-part-1-pitfalls-and-planning/"\u003eSucceeding with ClangFormat\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/08/29/august-update-for-the-visual-studio-code-cc-extension/"\u003eAugust Update for the Visual Studio Code C++ extension\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/08/24/c1417-features-and-stl-fixes-in-vs-15-preview-4/"\u003eC++ 14/17 Features and STL Fixes in VS 15 Preview 4\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-09-01T00:00:00Z",
    },
    {
      id: 289,
      sourceId: 4,
      title: "CMake Server",
      link: "https://cppcast.com/stephen-kelly/",
      description:
        'Rob and Jason are joined by Stephen Kelley to discuss his work on the CMake Server project which will enable advanced tooling for CMake.\n        \u003cp\u003eStephen Kelly first encountered CMake through working on KDE and like many C++ developers, did his best to ignore the buildsystem completely. That worked well for 4 years until 2011 when the modularization of KDE libraries led to a desire to simplify and upstream as much as possible to Qt and CMake. Since then, Stephen has been responsible for many core features and designs of \u0027Modern CMake\u0027 and now tries to lead designs for its future.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.conan.io/2016/08/04/Conan-virtual-environments-Manage-your-C-and-C++-tools.html"\u003eConan virtual environments: Manager your C and C++ tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://belkadan.com/blog/2016/08/Macromancy/"\u003eMacromancy\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://vittorioromeo.info/index/blog/2016_cpp_library_configuration_api.html"\u003eOpt-in header only libraries\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://steveire.wordpress.com/2016/08/09/opt-in-header-only-libraries-with-cmake/"\u003eOpt-in header-only libraries with CMake\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eStephen Kelly\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/steveire"\u003e@steveire\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://steveire.wordpress.com/"\u003eSteveire\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/steveire"\u003eStephen Kelly on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://steveire.wordpress.com/2016/01/24/cmake-daemon-for-user-tools/"\u003eCMake Daemon for user tools\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cmake.org/"\u003eCMake\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-08-10T00:00:00Z",
    },
    {
      id: 290,
      sourceId: 4,
      title: "Salvus",
      link: "https://cppcast.com/michael-afanasiev/",
      description:
        'Rob and Jason are joined by Michael Afanasiev to discuss his work on the Salvus library used for performing full-waveform inversions.\n        \u003cp\u003eMichael Afanasiev is currently working on his PhD in Geophysics. He became interested in programming and high performance computing during his BSc in Computational Physics, playing around with simulations of star formation. After a brief attempt to lead a roguish and exciting lifestyle as a field Geophysicist, he was brought back to the keyboard during a MSc, where he began working on full waveform inversion (FWI). In 2013 he moved to Switzerland to continue working on FWI as a PhD student at ETH Zurich, where he‚Äôs currently wrapping things into a thesis. He spends most of his time writing scientific software, wandering through the alps, and atoning for the times he repeated the mantra ‚ÄúFortran is the best language for scientific computing.‚Äù\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/cppmem-an-overview"\u003eCppMem: An overview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4vgjwm/why_h_is_more_widely_used_than_hpp_for_c_header/"\u003eWhy is .h more widely used then .hpp\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/07/26/july-update-for-the-visual-studio-code-cc-extension/"\u003eJuly update for Visual Studio Code C++ extension\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMichael Afanasiev\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://michael-afanasiev.github.io/"\u003eMichael Afanasiev\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/michael-afanasiev"\u003eMichael Afanasiev on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SalvusHub/salvus"\u003eSalvus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://michael-afanasiev.github.io/2016/08/03/Combining-Static-and-Dynamic-Polymorphism-with-C++-Template-Mixins.html"\u003eCombining Static and Dynamic Polymorphism with C++ Mixin classes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SalvusHub/salvus/blob/master/src/cxx/Element/Element.cpp#L122-L242"\u003eSalvus: retaining runtime polymorphism with templates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SalvusHub/salvus/blob/master/src/cxx/Testing/test_Hex_Scalar_3D.cpp#L109-L130"\u003eSalvus: dynamically inserting functionality into a mixin class hierarchy\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-08-03T00:00:00Z",
    },
    {
      id: 291,
      sourceId: 4,
      title: "PLF Library",
      link: "https://cppcast.com/matt-bentley-plf-library/",
      description:
        'Rob and Jason are joined by Matt Bentley to discuss plf::colony\u0026#60;\u0026#62; and plf::stack\u0026#60;\u0026#62; and some of their advantages over std::vector\u0026#60;\u0026#62; and std::stack\u0026#60;\u0026#62;.\n        \u003cp\u003eMatt Bentley was born in 1978 and never recovered from the experience. He started programming in 1986, completing a BSc Computer Science 1999, before spending three years working for a legal publishing firm, getting chronic fatigue syndrone, quitting, building a music studio, recovering, getting interested in programming again, building a game engine, and stumbling across some generalized solutions to some old problems.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/program-published-bjarne-stroustrup-keynote-t-shirt-design-contest/"\u003eCppCon 2016 Program\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2016/07/clion-2016-2-released/"\u003eCLion 2016.2 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.eventbrite.com/e/cgraphics-workshop-tickets-26732182678"\u003eFree Seattle C++/Graphics workshop Aug 3rd\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://eliasdaler.github.io/using-imgui-with-sfml-pt2"\u003eUsing ImGui with modern C++ and STL for creating awesome game dev tools Part 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://llvmweekly.org/issue/134"\u003eLLVM Weekly #134\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Bentley\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/xolvenz"\u003e@xolvenz\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mattreecebentley"\u003eMatt Bentley on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://plflib.org/"\u003ePLF C++ Library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-07-28T00:00:00Z",
    },
    {
      id: 292,
      sourceId: 4,
      title: "Modules",
      link: "https://cppcast.com/gabriel-dos-reis/",
      description:
        'Rob and Jason are joined by Gabriel Dos Reis, Principal Software Engineer at Microsoft to discuss C++ Modules.\n        \u003cp\u003eGabriel Dos Reis is a Principal Software Development Engineer at Microsoft. He is also a researcher and a longtime member of the C++ community.  His research interests include programming tools for dependable software. Prior to joining Microsoft, he was Assistant Professor at Texas A\u0026#38;M University.  Dr. Dos Reis was a recipient of the 2012 National Science Foundation CAREER award for his research in compilers for dependable computational mathematics and educational activities.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/dan-saks-keynote-preview-embedded-coroutines-and-accelerators-2016/"\u003eDan Saks Keynote and more program previews\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/07/11/debugging-tips-and-tricks-for-c-in-visual-studio/"\u003eDebugging Tips and Tricks for C++ in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/07/01/c-edit-and-continue-in-visual-studio-2015-update-3/"\u003eC++ Edit and Continue in VS 2015 Update 3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/visualstudio/2016/07/13/developer-assistant-supports-cpp/"\u003eDeveloper Assistant now supports C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://developerblog.redhat.com/2016/07/15/red-hat-at-the-iso-c-standards-meeting-june-2016-oulu-parallelism-and-concurrency/"\u003eRed Hat at the ISO C++ Standards Meeting: Parallelism and Concurrency\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eGabriel Dos Reis\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.axiomatics.org/~gdr/"\u003eGabriel Dos Reis\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0142r0.pdf"\u003eModule TS Draft\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2015/12/03/c-modules-in-vs-2015-update-1/"\u003eModules in VC++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Shows/C9-GoingNative/GoingNative-46-Why-you-should-be-Using-Cpp-Modules"\u003eConsuming headers as module interfaces\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/GabrielDosReis/ipr"\u003eCompiler-neutral Internal Program Representation for C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-07-21T00:00:00Z",
    },
    {
      id: 293,
      sourceId: 4,
      title: "IncludeOS",
      link: "https://cppcast.com/alfred-bratterud/",
      description:
        'Rob and Jason are joined by Alfred Bratterud, CEO of IncludeOS to discuss Microservice applications with the IncludeOS platform.\n        \u003cp\u003eAlfred has been doing research towards IncludeOS since 2013, and got a PhD scholarship based on the early work in 2014. The IEEE CloudCom paper introducing the IncludeOS prototype was published in 2015 and he spun out a startup around IncludeOS in 2016, in collaboration with Oslo and Akershus university college (the largest institution for engineering education in Norway). He\u0027s currently focusing 100% on developing IncludeOS from research experiment to a production ready platform for cloud services. \u003c/p\u003e\n\u003cp\u003eAlfred holds BSc and MSc in computer science, with focus on logic and computability, from the university of Oslo. He has 10+ years of industrial programming experience, mostly in web services. He\u0027s been working at Oslo university college since 2011, teaching various subjects ranging from operating systems, sysadmin and firewalls to web development. He started learning C++ when he took over a C++ course at the college in 2011. A very good year to start C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4s9v5b/the_new_lightweight_crossplatform_c111417ide_juci/"\u003eThe new lightweight, cross platform C++11/14/17 IDE juCi++ v1.2.1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/preview-algorithms-exceptions-games-2016/"\u003eCppCon 2016 Program Preview: Algorithms, Exceptions and Games\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4sd1tx/second_episode_of_cppchat_sunday_at_930_am_left/"\u003eSecond Episode of CppChat Sunday\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/interview-with-sean-parent.html"\u003eMeeting C++ interview with Sean Parent\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAlfred Bratterud\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/AlfredBratterud"\u003e@AlfredBratterud\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/alfred-bratterud"\u003eAlfred Bratterud\u0027s GithHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hioa-cs/IncludeOS"\u003eIncludeOS Repo\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.includeos.org/"\u003eIncludeOS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://ieeexplore.ieee.org/xpl/articleDetails.jsp?reload\u003dtrue\u0026#38;arnumber\u003d7396164"\u003eIncludeOS: A Minimal, Resource Efficient Unikernel for Cloud Services\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://unikernel.org/"\u003eUnikernels\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://devel.unikernel.org/"\u003eUnikernel Devel\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-07-14T00:00:00Z",
    },
    {
      id: 294,
      sourceId: 4,
      title: "C++ and Lua Game Development",
      link: "https://cppcast.com/elias-daler/",
      description:
        'Rob and Jason are joined by Elias Daler, CS student and Indie game developer to discuss game development with C++ and Lua.\n        \u003cp\u003eElias Daler is a CS student, indie game developer and C++ enthusiast. \nPassion for game development was the starting point for learning C++ and he\u0027s been programming in it for 6 years.\nElias is working on a game called Re:creation and various open source C++ libraries.\nHe also writes various articles about game development, C++ and Lua/C++ integration at eliasdaler.wordpress.com.\nThese articles are well received and frequently shared on various game development subreddits and forums.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.qt.io/blog/2016/07/01/status-update-on-qt-for-winrt-uwp/"\u003eStatus Update on Qt for WinRT/UWP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/2016/06/30/trip-report-summer-iso-c-standards-meeting-oulu/"\u003eTrip report: Summer ISO C++ standards meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.visualstudio.com/news/releasenotes/vs2015-update3-vs"\u003eVisual Studio Update 3 has been released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/regopen2016"\u003eRegistration for CppCon 2016 is open\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eElias Daler\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/EliasDaler"\u003e@EliasDaler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://eliasdaler.github.io/"\u003eElias\u0027 New Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://eliasdaler.wordpress.com/"\u003eElias\u0027 Old Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ThePhD/sol2"\u003eSol2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ocornut/imgui"\u003eImGui\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.sfml-dev.org/"\u003eSFML\u003c/a\u003e \u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-07-06T00:00:00Z",
    },
    {
      id: 295,
      sourceId: 4,
      title: "Oulu Trip Report",
      link: "https://cppcast.com/herb-sutter-oulu-trip-report/",
      description:
        'Rob and Jason are joined by Herb Sutter, chair of the ISO C++ standards committee to discuss the latest progress on C++ 17 made at the Oulu ISO Standards meeting.\n        \u003cp\u003eHerb Sutter is a leading authority on software development. He is the best selling author of several books including Exceptional C++ and C++ Coding Standards, as well as hundreds of technical papers and articles, including the essay ‚ÄúThe Free Lunch Is Over‚Äù which coined the term ‚Äúconcurrency revolution‚Äù and its recent sequel ‚ÄúWelcome to the Jungle‚Äù on the end of Moore‚Äôs Law and the turn to mainstream heterogeneous supercomputing from the cloud to ‚Äòsmartphones.‚Äô\u003c/p\u003e\n\u003cp\u003eHerb has served for a decade as chair of the ISO C++ standards committee, and is a software architect at Microsoft where he has led the language extensions design of C++/CLI, C++/CX, C++ AMP, and other technologies.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.soft-gems.net/index.php/tools/49-the-antlr4-c-target-is-here"\u003eThe ANTLR4 C++ target is here\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blog.jetbrains.com/clion/2016/06/jon-kalb-speaks-about-cppcon-cpp17-and-cpp-community/"\u003eJon Kalb speaks about CppCon, C++17 standard and C++ community\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/talks16.html"\u003eMeeting C++ 2016 Talks\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHerb Sutter\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/herbsutter"\u003e@herbsutter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://herbsutter.com/"\u003eSutter\u0027s Mill\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4pmlpz/what_the_iso_c_committee_added_to_the_c17_working/"\u003eWhat the ISO C++ committee added to the C++17 working draft at the Oulu 2016 meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/regopen2016/"\u003eLast chance for CppCon 2016 Early Bird Registration!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-06-25T00:00:00Z",
    },
    {
      id: 296,
      sourceId: 4,
      title: "Visual C++ Conformance",
      link: "https://cppcast.com/andrew-pardoe/",
      description:
        'Rob and Jason are joined by Andrew Pardoe to discuss Visual C++ conformance progress as well as experimental features like Modules.\n        \u003cp\u003eAndrew started working at Microsoft in 2002. He worked for the C++ team for exactly five years, first on testing the Itanium optimizer and then on the Phoenix compiler platform. He left in 2007 to become a PM on the CLR team (the C# runtime). Andrew left that job about two years ago and through the magic of corporate reorgs ended up as the C++ compiler PM.\u003c/p\u003e\n\u003cp\u003eIn his role at Microsoft Andrew pays attention to pretty much everything without a GUI: the compiler front end/parser, code analysis, and a little bit to the optimizer. He also owns the tools acquisition story‚Äîsuch as the VC++ Build Tools SKU and updating to latest daily drops through NuGet‚Äîand Clang/C2. The Clang/C2 work is what ties Andrew into the Islandwood team, and the code analysis work focuses mostly on the C++ Core Guidelines checkers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dqibJpjJ0sdM"\u003eHow the Commodore 64 Memory Map Worked\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4ms934/functionalplus_a_c_library_now_has_a_ia_type/"\u003eFunctionalPlus, a C++ library, now has a (i.a. type based) search website for its over 300 pure and free functions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://foonathan.github.io/blog/2016/06/09/standardese-01.html"\u003eStandardese documentation generator version 0.1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cpp.libhunt.com/"\u003eAwesome C++: Curated list of awesome C/C++ frameworks, libraries and resources\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAndrew Pardoe\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/apardoe"\u003e@apardoe\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/03/31/c-core-guidelines-checkers-preview-of-the-lifetime-safety-checker/"\u003eC++ Core Guidelines Checkers: Preview of the Lifetime Safety checker\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/06/07/expression-sfinae-improvements-in-vs-2015-update-3/"\u003eExpression SFINAE improvements in VS 2015 Update 3\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/06/07/standards-version-switches-in-the-compiler/"\u003eStandards version switches in the compiler\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsor\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/cppoffer"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-06-15T00:00:00Z",
    },
    {
      id: 297,
      sourceId: 4,
      title: "foonathan/memory and standardese",
      link: "https://cppcast.com/jonathan-muller-memory-standardese/",
      description:
        'Rob and Jason are joined by Jonathan M√ºller to discuss some of his recent blog posts, as well as the foonathan/memory library and the standardese documentation generator.\n        \u003cp\u003eJonathan is a CS student passionate about C++.\nIn his spare time he writes libraries for real-time applications and games.\nHe is mainly working on foonathan/memory which provides fast and customizable memory allocators that are easily integrated into your own code.\nJonathan tweets at @foonathan and blogs about various C++ and library development related topics at foonathan.github.io.\nThe blog posts are well received and often shared in the cpp subreddit or ISO C++.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/06/03/c-core-guidelines-checkers-are-now-in-a-single-nuget-package/"\u003eC++ Core Guidelines Checkers are now in a single Nuget package\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://developers.redhat.com/blog/2016/06/01/how-to-avoid-wasting-megabytes-of-memory-a-few-bytes-at-a-time/"\u003eHow to avoid wasting megabytes of memory a few bytes at a time\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.modernescpp.com/index.php/asynchronous-callable-wrappers"\u003eAsynchronous callable wrappers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJonathan M√ºller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/foonathan"\u003e@foonathan\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://foonathan.github.io/"\u003efoonathan::blog()\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://foonathan.github.io/blog/2016/05/27/final.html"\u003eYou (probably) don\u0027t want \u0027final\u0027 classes\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/foonathan/memory"\u003efoonathan/memory\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/foonathan/standardese"\u003efoonathan/standardese\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-06-08T00:00:00Z",
    },
    {
      id: 298,
      sourceId: 4,
      title: "CLion",
      link: "https://cppcast.com/anastasia-kazakova-clion/",
      description:
        'Rob and Jason are joined by Anastasia Kazakova to discuss new features of JetBrains\u0027 Clion IDE.\n        \u003cp\u003eA C/C++ fan since university, Anastasia has been creating real-time *nix-based systems and pushing them to production for 8 years. She has a passion for networking algorithms (especially congestion problems and network management protocols) and embedded programming, and believes in good tooling. Now she is a part of the JetBrains team working as a Product Marketing Manager for CLion, a cross-platform C/C++ IDE.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003daPvbxuOBQ70"\u003eBjarne Stroustrup C++ Today\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://wordpress.electric-snow.net/2016/05/31/fibonacci-youre-also-doing-it-wrong/"\u003eFibonacci: You\u0027re also doing it wrong\u003c/a\u003e\u003cul\u003e\n\u003cli\u003eIn response to: \u003ca href\u003d"https://www.youtube.com/watch?v\u003dhErD6WGqPlA"\u003eC++ Weekly - Ep 13 Fibonacci: You\u0027re Doing It Wrong\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://ithare.com/c-for-games-performance-allocations-and-data-locality/"\u003eC++ for Games: Performance. Allocations and Data Locality\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.pythontutor.com/visualize.html#mode\u003dedit"\u003eC++ Tutor - Visualize C++ code execution\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnastasia Kazakova\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/anastasiak2512"\u003e@anastasiak2512\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/clion/"\u003eCLion IDE\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/clion_ide"\u003eCLion on Twitter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/"\u003eCLion Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-06-01T00:00:00Z",
    },
    {
      id: 299,
      sourceId: 4,
      title: "Runtime Compiled C++",
      link: "https://cppcast.com/doug-binks/",
      description:
        'Rob and Jason are joined by Doug Binks from Enkisoftware to discuss Runtime Compile C++.\n        \u003cp\u003eDoug Binks is programming the game Avoyd using Runtime Compiled C++, a technique he co-developed with industry friends; and enkiTS, a lightweight task scheduler.\u003c/p\u003e\n\u003cp\u003eAn experienced game developer, Doug was previously Technical Lead of the Game Architecture Initiative at Intel. He has worked in the games industry in roles ranging from the R\u0026#38;D development manager at Crytek to head of studio at Strangelite, as well as lead programmer. An early interest in games development was sidetracked by a doctorate in Physics at Oxford University, and two post-doctoral posts as an academic researcher in experimental nonlinear pattern formation, specializing in fluid mechanics. His fondest childhood memories are of programming games in assembly on the ZX81.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://developerblog.redhat.com/2016/05/16/jacksonville-c-core-language-meeting-report/"\u003eJacksonville C++ Core Language Meeting Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2016/01/micro-benchmarking-libraries-for-c.html"\u003eMicro benchmarking libraries for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/onqtam/doctest"\u003eDoctest\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dAxnotgLql0k"\u003eAndrei Alexandrescu on C++ Concepts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDoug Binks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dougbinks"\u003e@dougbinks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dougbinks"\u003eDoug Binks Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://runtimecompiledcplusplus.blogspot.com/"\u003eRuntime Compiled C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vimeo.com/85934969"\u003eRapid Development with Runtime Compiled C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.enkisoftware.com/"\u003eEnkisoftware\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-05-26T00:00:00Z",
    },
    {
      id: 300,
      sourceId: 4,
      title: "Conan",
      link: "https://cppcast.com/diego-rodriguez-losada/",
      description:
        'Rob and Jason are joined by Diego Rodriguez-Losada from Conan to discuss the new C++ Package Manager.\n        \u003cp\u003eDiego\u0027s passions are robotics and SW development. He has developed many years in C and C++ in the Industrial, Robotics and AI fields. He was also a University (tenure track) professor till 2012, when he quit academia to try to build a C/C++ dependency manager, co-founded startup biicode, since then mostly developing in Python. Now he is working as freelance and having fun with conan.io.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://getrobot.net/"\u003eRobot: Native Cross Platform System Automation\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4gpdo4/help_improve_duckduckgos_c_searches/"\u003eHelp improve DuckDuckGo\u0027s C++ searches!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/04/26/stay-up-to-date-with-the-visual-c-tools-on-nuget/"\u003eStay up to date with the Visual C++ tools on NuGet\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDiego Rodriguez-Losada\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/diegorlosada"\u003e@diegorlosada\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://sites.google.com/site/diegorlosada/"\u003eDiego Rodriguez-Losada\u0027s website\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://conan.io/"\u003eConan: C/C++ Package Manager\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.conan.io/"\u003eConan Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://news.ycombinator.com/item?id\u003d11340510"\u003eI\u0027ve Just Liberated My Modules\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-05-04T00:00:00Z",
    },
    {
      id: 301,
      sourceId: 4,
      title: "Distributed Computing",
      link: "https://cppcast.com/elena-sagalaeva/",
      description:
        'Rob and Jason are joined by Elena Sagalaeva from Microsoft\u0027s Bing Ads team to discuss Distributed Computing with C++.\n        \u003cp\u003eElena Sagalaeva is a Russian-born professional C++ developer since 2000. She was primarily a game developer working both for various studios and as an indie developer. She grad  uated from the industry while being a tech lead at the head of a small dev team.\u003c/p\u003e\n\u003cp\u003eElena currently lives in U.S. with her family and works at Microsoft in Bing Ads. Her current interests focus on large scale distributed systems and the development of the C++ language.\u003c/p\u003e\n\u003cp\u003eShe has a popular blog on C++ in Russian and she is the author of the famed C++ Lands map.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://visualstudiomagazine.com/articles/2016/04/19/intro-to-cpp-core-guidelines.aspx"\u003eIntroducing the C++ Core Guidelines\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://developers.redhat.com/blog/2016/04/21/red-hat-at-the-iso-c-standards-meeting-march-2016-parallelism-concurrency-and-coroutines/"\u003eRed Hat at the ISO C++ Standards Meeting\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/pybind/pybind11"\u003epybind11: Seamless operability between C++11 and Python\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eElena Sagalaeva\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://alenacpp.blogspot.ru/"\u003eElena Sagalaeva\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/alenacpp"\u003e@alenacpp\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1Sxl9O4"\u003eNexus Wireless Silent Mouse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://fearlesscoder.blogspot.com/2012/01/c11-lands.html"\u003eC++11 Lands Map\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-04-28T00:00:00Z",
    },
    {
      id: 302,
      sourceId: 4,
      title: "VS for Linux",
      link: "https://cppcast.com/ankit-asthana-vs-linux/",
      description:
        'Rob and Jason are joined by Ankit Asthana to discuss new features for Visual Studio and VS Code including new support for Linux developers.\n        \u003cp\u003eAnkit Asthana is a program manager working in the Visual C++ Cross-Platform space. He is knowledgeable in cross-platform technologies, compilers (dynamic and static compilation, optimizer, code generation), distributed computing and server side development. He has in the past worked for¬†IBM¬†and Oracle Canada as a developer building Java 7 (hotspot) and telecommunication products. Ankit back in 2008 also published a book on C++ titled¬†C++ for Beginners to Masters¬†which sold over a few thousand¬†copies.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.stickermule.com/user/1070732481/stickers"\u003eCppCast Stickers!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/04/14/stl-fixes-in-vs-2015-update-2//"\u003eSTL Fixes in VS 2015 Update 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://runtimecompiledcplusplus.blogspot.com/2016/04/runtime-compiled-c-article-available.html"\u003eRuntime Compiled C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ofekshilon.com/2016/03/27/on-api-ms-win-xxxxx-dll-and-other-dependency-walker-glitches/"\u003eWindows API sets: source of most Dependency Walker glitches\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnkit Asthana\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/ankitasthana"\u003eAnkit on LinkedIn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1AiKa3c"\u003eC++ for Beginners to Masters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2016/P424"\u003e/build 2016: What\u0027s New with C++ Cross-Platform for Visual Studio 2015 Update 2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2016/C-Discussion"\u003e/build 2016: C++ Discussion\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2016/T614"\u003e/build 2016: Cross-Platform at Microsoft: Xamarin, Cordova, Unity and C++ Panel\u003c/a\u003e \u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://channel9.msdn.com/Events/Build/2016/B880"\u003e/build 2016: Top 6 Reasons to Move Your C++ Code to Visual Studio 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/"\u003eVisual C++ Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-04-21T00:00:00Z",
    },
    {
      id: 303,
      sourceId: 4,
      title: "Boost Hana",
      link: "https://cppcast.com/louis-dionne/",
      description:
        'Rob and Jason are joined by Louis Dionne to discuss C++ metaprogramming with Boost Hana.\n        \u003cp\u003eLouis is a math and computer science enthusiast with interest in C++ (meta)programming, functional programming, domain specific languages  and related subjects. He is an active member of the Boost community,  and recently wrote the Boost.Hana metaprogramming library.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/4d6by9/synth_a_libclang_based_tool_for_generating/"\u003eSynth - Semantic syntax highlighting and code hyper-linking tool for C and C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2016-conference/announcements/2016/04/11/program-highlights-performance-talks.html"\u003eC++Now 2016 Program Highlights: Performance Talks\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.viva64.com/en/b/0390/"\u003eLogical Expressions in C/C++ Mistakes made by professionals\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLouis Dionne\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://ldionne.com/"\u003eLouis Dionne\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/louisdionne"\u003e@louisdionne\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/boostorg/hana"\u003eBoost Hana\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow2016.sched.org/event/6SfX/metaprogramming-for-dummies"\u003eC++Now 2016 - Metaprogramming for Dummies\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow2016.sched.org/event/6SfY/metaprogramming-for-the-brave"\u003eC++Now 2016 - Metaprogramming for the Brave\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://youtu.be/cg1wOINjV9U"\u003eCppCon 2015 - C++ Metaprogramming: A Paradigm Shift\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-04-13T00:00:00Z",
    },
    {
      id: 304,
      sourceId: 4,
      title: "Macchina.io",
      link: "https://cppcast.com/gunter-obiltschnig/",
      description:
        'Rob and Jason are joined by G√ºnter Obiltschnig to discuss the macchina.io library for IoT C++ development.\n        \u003cp\u003eG√ºnter is the founder of the POCO C++ Libraries and macchina.io open source projects. He has been programming computers since age 12. In his career he has programmed everything from 8-bit home computers (C64, MSX) to IBM big iron systems (COBOL and JCL, VM/CMS and CICS), various Unix systems, OpenVMS, Windows NT in its various incarnations, the Mac (classic Mac OS and OS X), to embedded devices and iPhone/iPad. He has a diploma (MSc. equivalent) in Computer Science from the University of Linz, Austria.\u003c/p\u003e\n\u003cp\u003eHis current main interests are embedded systems, cross-platform C++ development, JavaScript and, foremost, the Internet of Things. When not working, he spends time with his family or enjoys one of his hobbies ‚Äî sailing, running, swimming, skiing, listening to or making music, and reading.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/"\u003eC++Now less than 20 spots left\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/03/31/cc-extension-for-visual-studio-code/"\u003eC/C++ extension for Visual Studio Code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rigtorp/awesome-modern-cpp"\u003eAwesome Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/index.php/br/items/c-committee-to-shift-focus-on-important-issues.html"\u003eC++ Committee to shift focus on important issues\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/call-for-submissions-2015-2/"\u003eCppCon 2016 Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eG√ºnter Obiltschnig\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/obiltschnig"\u003e@obiltschnig\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://obiltschnig.com/"\u003eG√ºnter Obiltschnig\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://macchina.io/"\u003emacchina.io\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003diRm3u1E9apU\u0026#38;feature\u003dyoutu.be"\u003eMastering the IoT with C++ and JavaScript - Meeting C++ 2015\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-04-07T00:00:00Z",
    },
    {
      id: 305,
      sourceId: 4,
      title: "Meeting C++",
      link: "https://cppcast.com/jens-weller-meeting-cpp/",
      description:
        'Rob and Jason are joined by Jens Weller to discuss the Meeting C++ conference and user group community.\n        \u003cp\u003eJens Weller is the organizer and founder of Meeting C++. Doing C++ since 1998, he is an active member of the C++ Community. From being a moderator at c-plusplus.de and organizer of his own C++ User Group since 2011 in D√ºsseldorf, his roots are in the C++ Community. Today his main work is running the Meeting C++ Platform (conference, website, social media and recruiting). His main role has become being a C++ evangelist, as this he speaks and travels to other conferences and user groups around the world.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://randomascii.wordpress.com/2016/03/24/compiler-bugs-found-when-porting-chromium-to-vc-2015/"\u003eCompiler Bugs found when porting Chromium to VC 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.gitbook.com/book/arobenko/bare_metal_cpp/details"\u003ePractical Guide to Bare Metal C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://akrzemi1.wordpress.com/2016/03/21/concepts-without-concepts/"\u003eConcepts without Concepts\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJens Weller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/phlox81"\u003e@phlox81\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://de.linkedin.com/in/jens-weller-9a261a11"\u003eJens Weller LinkedIn\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/"\u003eMeeting C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/index.php/newsreader/items/announcing-meeting-c-2016.html"\u003eAnnouncing Meeting C++ 2016\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://shop.oreilly.com/product/0636920049814.do"\u003eLearning C++ Best Practices - Write Simpler, Faster, More Maintainable Code\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-04-01T00:00:00Z",
    },
    {
      id: 306,
      sourceId: 4,
      title: "Stream Processing",
      link: "https://cppcast.com/jonathan-beard/",
      description:
        'Rob and Jason are joined by Jonathan Beard to discuss Stream Processing and the C++ Raft Library.\n        \u003cp\u003eJonathan Beard received a BS (Biology) and BA (International Studies) in 2005 from the Louisiana State University, MS (Bioinformatics) in 2010 from The Johns Hopkins University, and a PhD in Computer Science from Washington University in St. Louis in 2015. Jonathan served as a U.S. Army Officer through 2010 where he served in roles ranging from medical administrator to acting director of the medical informatics department for the U.S. Army in Europe. Jonathan\u0027s research interests include online modeling, stream parallel systems, streaming architectures, compute near data, and massively parallel processing. He is currently a Senior Research Engineer with ARM Research in Austin, Texas.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/playlist?list\u003dPLs3KjaCtOwSZ2tbuV1hx8Xz-rFZTan2J1"\u003eC++ Weekly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/2016/03/clion-2016-1-released-better-language-support-and-new-dev-tools/#more-1960"\u003eClion 2016.1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.infoworld.com/article/3044727/application-development/qa-bjarne-stroustrup-previews-c-17.html"\u003eQ \u0026#38; A: Bjarne Stroustrup previews C+17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://templated-thoughts.blogspot.com/2016/03/sub-processing-with-modern-c.html"\u003eSub-processing with Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJonathan Beard\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jonathan_beard"\u003e@jonathan_beard\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.jonathanbeard.io/"\u003eJonathan Beard\u0027s website\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jonathan-beard"\u003eJonathan Beard on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.raftlib.io/"\u003eRaftLib\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppnow2016.sched.org/event/6Sg8/come-stream-with-me-build-performant-simple-parallel-applications-in-c-using-raftlib"\u003eC++Now - Come Stream with Me: build performant, simple, parallel applications in C++ using RaftLib\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-03-24T00:00:00Z",
    },
    {
      id: 307,
      sourceId: 4,
      title: "Parallel Computing Strategies",
      link: "https://cppcast.com/dori-exterman/",
      description:
        'Rob and Jason are joined by Dori Exterman to discuss parallel computing strategies and Incredibuild.\n        \u003cp\u003eAn expert software developer and product strategist, Dori Exterman has 20 years of experience in the software development industry. As Chief Technical Officer of IncrediBuild, he directs the company\u0027s product strategy and is responsible for product vision, implementation, and technical partnerships. Before joining IncrediBuild, Dori held a variety of technical and product development roles at software companies, with a focus on architecture, performance and advanced technologies. He is an expert and frequent speaker on technological advancement in development tools specializing in Embarcadero (formerly Borland) environments, and manages the Israeli development forum for these tools.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://herbsutter.com/2016/03/11/trip-report-winter-iso-c-standards-meeting/"\u003eHerb Sutter Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://developers.redhat.com/blog/2016/03/10/testing-gcc-in-the-wild/"\u003eTesting GCC in the wild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://jfbastien.github.io/papers/2016-02.html"\u003eJF Bastien Trip Report - Happy with C++17\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDori Exterman\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://il.linkedin.com/in/dori-exterman-81616410"\u003eDori Exterman\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d_4Xa4EPzrq8"\u003eConsiderations for choosing the parallel computing strategy - Dori Exterman - Meeting C++ 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.incredibuild.com/"\u003eIncredibuild\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-03-17T00:00:00Z",
    },
    {
      id: 308,
      sourceId: 4,
      title: "Clean Code",
      link: "https://cppcast.com/arne-mertz/",
      description:
        'Rob and Jason are joined by Arne Mertz to discuss Clean Coding techniques.\n        \u003cp\u003eArne is a Software Engineer at Z√ºhlke Engineering, a blogger and a clean code enthusiast.\nHe has been maintaining and developing large financial C++ applications for several years.\nArne has a diploma in physics and has written some scientific code for his degree courses in Fortran77 and C++ before he started his programming career.\nCurrently he is broadening his view on the software development world by doing test automation, integration, \nrequirements engineering and tooling for a large Java/JavaScript web application. \nTo keep in touch with C++ he continues to write about it on his blog, reads other blogs and watches videos of conference talks.\u003c/p\u003e\n\u003cp\u003eIn his free time he sings in a choir together with his wife and enjoys playing video games. He likes to travel a lot, especially tall ship sailing.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://developerblog.redhat.com/2016/02/23/upcoming-features-in-gcc-6/"\u003eUpcoming features in GCC 6\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.justsoftwaresolutions.co.uk/cplusplus/core-c++-lvalues-and-rvalues.html"\u003eCore C++ lvalues and rvalues\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://usingstdcpp.org/2016/03/05/trip-report-c-meeting-at-jacksonville/"\u003eTrip Report: C++ meeting at Jacksonville\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eArne Mertz\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/arne_mertz"\u003e@arne_mertz\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://de.linkedin.com/in/arne-mertz-b87311b0/en"\u003eArne Mertz on LinkedIn\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://arne-mertz.de/"\u003eSimplify C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1XgKQSB"\u003eSoft Skills: The software developer\u0027s life manual\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-03-10T00:00:00Z",
    },
    {
      id: 309,
      sourceId: 4,
      title: "Software Defined Visualization",
      link: "https://cppcast.com/jeff-amstutz-software-defined-vis/",
      description:
        'Rob and Jason are joined by Jeff Amstutz to discuss Software Defined Visualization and Intel\u0027s SPMD Compiler.\n        \u003cp\u003eJeff is a Visualization Software Engineer at Intel, where he works on the open source OSPRay project. He enjoys all things ray tracing, high performance computing,  clearly implemented code, and the perfect combination of Git/CMake/modern C++. Prior to joining Intel, Jeff was an HPC software engineer at SURVICE Engineering where he worked on interactive ballistic simulation applications for the U.S. Army Research Laboratory, implemented using C++, CUDA, and Qt. When he is able, Jeff enjoys  academic research in ray tracing and high performance computing, with a specific interest in multi-hit ray tracing algorithms and applications for both graphics 3D rendering and ray-based simulations.\u003c/p\u003e\n\u003cp\u003eIn his spare time, Jeff enjoys powerlifting, golf, being an electric guitar nerd, and studying a wide spectrum of music ranging from progressive metal to ambient electronic music.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2016/02/a-bit-of-background-for-concepts-and-cpp17-bjarne-stroustrup"\u003eA bit of background for concepts and C++17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/current-proposals-for-c17.html"\u003eCurrent Proposals for C++17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://developerblog.redhat.com/2016/02/29/why-cstdlib-is-more-complicated-than-you-might-think/"\u003eWhy \u003ccstdlib\u003e is more complicated than you think\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJeff Amstutz\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jeffamstutz"\u003e@jeffamstutz\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.linkedin.com/in/jeffersonamstutz"\u003eJeff Amstutz on LinkedIn\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jeffamstutz"\u003eJeff Amstutz on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.sdvis.org/"\u003eSDVis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.ospray.org/"\u003eOSPRay\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ispc.github.io/"\u003eIntel SPMD Program Compiler\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-03-03T00:00:00Z",
    },
    {
      id: 310,
      sourceId: 4,
      title: "Hybrid C++/Javascript apps",
      link: "https://cppcast.com/sohail-somani/",
      description:
        'Rob and Jason are joined by Sohail Somani to discuss building hybrid apps with Javascript and C++.\n        \u003cp\u003eSohail Somani is a contract cross-platform application developer who has been working in C++ and Python for over 10 years. He has worked in a variety of fields such as computer graphics, C++ compilers, finance and plain old desktop apps. Sohail\u0027s obsession with (or hate of) time tracking led him to create Worklog Assistant, a cross-platform time tracker for JIRA, which is in use by more than a thousand companies worldwide. He hopes to one day achieve time tracking nirvana for his users so that he can finally move on to something else. He might be too optimistic...\u003c/p\u003e\n\u003cp\u003eOtherwise, Sohail is a full-time, work-at-home dad of 2 since 2007. He enjoys playing hockey and listening to rap music. You can contact him at hello@sohailsomani.com - but he doesn\u0027t recommend that you visit the domain.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2016-conference/announcements/2016/02/23/student-volunteer-program-accepting-applications.html"\u003eC++Now Accepting Student/Volunteer Applications\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/regopen2016/"\u003eCppCon 2016 Registration\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/462mau/khronos_releases_vulkan_10_specification/"\u003eKhronos Releases Vulkan 1.0 Specification\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost-experimental.github.io/di/"\u003eExperimental Boost Dependency Injection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2016/02/a-bit-of-background-for-the-operator-dot-proposal-bjarne-stroustrup"\u003eA bit of background for the operator dot proposal\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSohail Somani\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://uint32t.blogspot.com"\u003eSohail Somani\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://worklogassistant.com/"\u003eWorklog Assistant\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://degreed.com/"\u003eDegreed\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-02-26T00:00:00Z",
    },
    {
      id: 311,
      sourceId: 4,
      title: "C++ in the Visual Effects Industry",
      link: "https://cppcast.com/paul-miller/",
      description:
        'Rob and Jason are joined by Paul Miller to discuss C++ in the Visual Effects Industry.\n        \u003cp\u003ePaul is a partner and lead engineer at Digital Film Tools/Silhouette FX. He has been writing visual effects and image processing software for over 20 years, and has been using C++ for most of that time. He started his love of graphics and digital music on the Amiga in 1986, teaching himself C with K\u0026#38;R and the Amiga ROM Kernel manuals. In 1992 he ended up Wisconsin, writing software for the relatively new digital post production industry on Silicon Graphics workstations, and has been writing widely-used tools for that industry since. He uses Qt for cross-platform UI, Python, OpenGL, and OpenCL extensively.\u003c/p\u003e\n\u003cp\u003eHe holds a private pilot\u0027s license and enjoys going to movies and beer festivals.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/bytedeco/javacpp"\u003eJavaCPP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2016/02/a-bit-of-background-for-the-unified-call-proposal"\u003eA bit of background for the unified call proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.msdn.microsoft.com/vcblog/2016/02/12/natvis-for-ccli-available-to-preview-in-vs2015-update-2/"\u003eNatvis for C++/CLI Available to Preview in VS2015 Update 2\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePaul Miller\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/fxtech_paul"\u003e@fxtech_paul\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.silhouettefx.com/"\u003eSilhouettefx\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://itunes.apple.com/us/app/photo-fx/id300630942?mt\u003d8"\u003ePhoto fx (iOS App)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-02-18T00:00:00Z",
    },
    {
      id: 312,
      sourceId: 4,
      title: "HPC and more",
      link: "https://cppcast.com/bryce-lelbach-hpc/",
      description:
        'Rob and Jason are joined by Bryce Lelbach to discuss High Performance Computing and other C++ topics.\n        \u003cp\u003eBryce Adelstein Lelbach is a researcher at Lawrence Berkeley National Laboratory (LBNL), a US Department of Energy research facility. Working alongside a team of mathematicians and physicists, he develops and analyzes new parallel programming models for exascale and post-Moore architectures. Bryce is one of the developers of the HPX C++ runtime system; he spent five years working on HPX while he was at Louisiana State University\u0027s Center for Computation and Technology. He also helped start the LLVMLinux initiative, and has occasionally contributed to the Boost C++ libraries. Bryce is an organizer for C++Now and CppCon conferences and he is passionate about C++ community development. He serves as LBNL\u0027s representative to the C++ standards committee.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/442rn0/can_i_always_depend_on_return_value_optimization/"\u003eCan I always depend on return value optimization\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://pusling.com/blog/?p\u003d399"\u003eCompilers and error messages\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.underhanded-c.org/#winner"\u003eResults of the 2015 Underhanded C Contest\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBryce Lelbach\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.linkedin.com/in/brycelelbach"\u003eBryce Lelbach\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.lbl.gov/"\u003eLawrence Berkeley National Lab\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/STEllAR-GROUP/hpx"\u003eHPX on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dzWxSZcpeS8Q"\u003eBenchmarking C++ Code @ CppCon 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d1mVBsr3JXFM"\u003ePractical Functional Programming in C++ @ CppCon 2014\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-02-09T00:00:00Z",
    },
    {
      id: 313,
      sourceId: 4,
      title: "Compiler Explorer",
      link: "https://cppcast.com/matt-godbolt-compiler-explorer/",
      description:
        'Rob and Jason are joined by Matt Godbolt to discuss the online Compiler Explorer project.\n        \u003cp\u003eMatt is a developer at trading firm DRW.  Before that he\u0027s worked at Google, run a C++ tools company, and spent over a decade in the games industry making PC and console games.  He is fascinated by performance and created GCC Explorer, to help understand how C++ code ends up looking to the processor.  When not performance tuning C++ code he enjoys writing emulators for 8-bit computers in Javascript.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://blogs.microsoft.com/next/2016/01/25/microsoft-releases-cntk-its-open-source-deep-learning-toolkit-on-github/"\u003eMicrosoft releases CNTK, its open source deep learning toolkit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://davidsankel.com/uncategorized/c-language-support-for-pattern-matching-and-variants/"\u003eC++ Language Support for Pattern Matching and Variants\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2016/01/22/vs-2015-update-2-s-stl-is-c-17-so-far-feature-complete.aspx"\u003eVS2015 Update 2\u0027s STL is C++17 Feature Complete\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2016-conference/announcements/2015/11/17/call-for-submission.html"\u003eC++Now 2016 Submission Deadline\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMatt Godbolt\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/mattgodbolt"\u003e@mattgodbolt\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://xania.org/"\u003eMatt Godbolt\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://gcc.godbolt.org/"\u003eCompiler Explorer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dhgcNM-6wr34"\u003ex86 Internals for Fun \u0026#38; Profit\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-01-28T00:00:00Z",
    },
    {
      id: 314,
      sourceId: 4,
      title: "Intel Tamper Protection",
      link: "https://cppcast.com/marc-valle/",
      description:
        'Rob and Jason are joined by Marc Valle to discuss Intel\u0027s Tamper Protection Toolkit which can be used to protect your C++ application from reverse engineering and tampering.\n        \u003cp\u003eMarc Valle is the technical lead for the Intel (R) Tamper Protection\nToolkit.  His professional interests include tamper protection,\nreverse engineering, compilers, security, and privacy.  In his free\ntime he can be found staring at the black line at the bottom of the\npool preparing for his next competition.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/dbohdan/compilers-targeting-c"\u003eCompilers targeting C\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/40lm8o/lambdas_are_dangerous/"\u003eLambdas are dangerous?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2016/01/20/visual-studio-2015-update-1-new-experimental-feature-mpx.aspx"\u003eVS 2015 Update 1 New Experimental Feature MPX\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/tamper-protection"\u003eIntel Tamper Protection Toolkit\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://software.intel.com/videos/intel-tamper-protection-toolkit-getting-started"\u003eIntel Tamper Protection Toolkit Getting Started\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-01-21T00:00:00Z",
    },
    {
      id: 315,
      sourceId: 4,
      title: "Game Development with C++ and Javascript",
      link: "https://cppcast.com/mark-logan/",
      description:
        'Rob and Jason are joined by Mark Logan to discuss his experience building a game engine in Javascript and C++.\n        \u003cp\u003eMark started learning C++ with Borland Turbo C++ in high school, so that he could build video games. After 20 years, he\u0027s finally starting to feel like he knows what he\u0027s doing. After graduating from Northeastern University\u0027s College of Computer Science, Mark spent 7 years at Google, mainly working on internal infrastructure and automation. More recently, he returned to his first love - game programming - and helped found a studio called Artillery. He\u0027s currently the tech lead on Artillery\u0027s free-to-play RTS, code-named Atlas. He spends his time working on performance optimization, networking, and solving cross-platform development problems.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://sourceforge.net/p/cppcheck/news/2016/01/cppcheck-172/"\u003eNew cppcheck released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://ehsanakhgari.org/blog/2015-12-07/c-static-analysis-using-clang"\u003eHow to make your own C++ static analyzer with clang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/visualstudio/archive/2015/11/30/improving-your-build-times-with-incredibuild-and-visual-studio-2015.aspx"\u003eImproving your build times with Incredibuild and VS 2015\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eMark Logan\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/technicaldebtor"\u003e@technicaldebtor\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.artillery.com/"\u003eArtillery\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.artillery.com/"\u003eArtillery Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-01-14T00:00:00Z",
    },
    {
      id: 316,
      sourceId: 4,
      title: "UndoDB and Live Recorder",
      link: "https://cppcast.com/greg-law-undodb-live-recorder/",
      description:
        'Rob and Jason are joined by Dr. Greg Law to discuss reverse debugging with Undo Software.\n        \u003cp\u003eDr Greg Law is co-founder and CEO at Undo Software. He has spent nearly 20 years writing systems-level code, including novel kernel designs and networking architectures in academia and at a variety of start-ups. Greg finds it particularly rewarding to turn innovative software technology into ‚Äúreal‚Äù business development.  He still gets to write some code, although sadly most of his coding these days is done on aeroplanes. Greg lives in Cambridge, England with his wife and two children.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.bfilipek.com/2015/12/c-status-at-end-of-2015.html"\u003eC++ Status at the end of 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@jamesperry/starting-a-tech-startup-with-c-6b5d5856e6de#.d57agn3qq"\u003eStarting a tech startup with C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://scottmeyers.blogspot.com/2015/12/good-to-go.html"\u003e} // good to go\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2016-conference/announcements/2015/11/17/call-for-submission.html"\u003eC++Now 2016 Call for Submission\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDr. Greg Law\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/gregthelaw"\u003e@gregthelaw\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://undo-software.com/author/greg-law/"\u003eGreg Law\u0027s posts on Undo Software\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://undo-software.com/"\u003eUndo Software\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.flickr.com/photos/137871969@N05/sets/72157660763507184/"\u003eJason\u0027s photos from Kenya\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2016-01-08T00:00:00Z",
    },
    {
      id: 317,
      sourceId: 4,
      title: "Transducers",
      link: "https://cppcast.com/juanpe-bolivar/",
      description:
        'Rob and Jason are joined by Juan Pedro Bolivar Puente to discuss Transducers and the Atria library.\n        \u003cp\u003eJuanpe is a Spanish software engineer currently based in Berlin, Germany. Since 2011 he has worked for Ableton, where he has helped building novel musical platforms like Push and Live and where he coordinates the "Open Source Guild" helping the adoption and contribution to FLOSS. He is most experienced in C++ and Python and likes tinkering with languages like Haskell or Clojure. He is an advocate for "modern C++" and pushes for adoption of declarative and functional paradigms in the programming mainstream. He is also an open source activist and maintainer of a couple of official GNU packages like Psychosynth which introduces new realtime audio processing techniques leveraging the newest C++ standards.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.informit.com/articles/article.aspx?p\u003d2467340"\u003eGoing Large Scale with C++ Part 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/12/15/support-for-android-cmake-projects-in-visual-studio.aspx"\u003eSupport for Android CMake projects in Visual Studio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJuan Pedro Bolivar Puente\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://sinusoid.es/"\u003eJuan\u0027s website\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dvohGJjGxtJQ"\u003eCppCon 2015: Juan Pedro Bol√≠var Puente ‚ÄúTransducers: from Clojure to C++"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Ableton/atria"\u003eAtria on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.psychosynth.com/index.php/Main_Page"\u003epsychosynth\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://wingolog.org/archives/2015/11/09/embracing-conways-law"\u003eEmbracing Conway\u0027s law\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://vitiy.info/cpp14-how-to-implement-transducers/"\u003eVictor Laskin\u0027s Blog: C++14 Transducers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-12-23T00:00:00Z",
    },
    {
      id: 318,
      sourceId: 4,
      title: "Mesonbuild",
      link: "https://cppcast.com/jussi-pakkanen/",
      description:
        'Rob and Jason are joined by Jussi Pakkanen to discuss the Mesonbuild multiplatform build system for C++.\n        \u003cp\u003eJussi Pakkanen got his doctoral degree in computer science from the Helsinki University of Technology in 2006. Since then he has worked on various problem areas ranging from mail sorting to the software stacks of Ubuntu desktop and phone. Most recently he was the SDK lead developer at Jolla. Currently he is open for new development challenges. During his spare time he has been known to be a photographer, movie director, magician, gastronomist, computer game designer and watercolour painter.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.leapmotion.com/hood-leap-motion-hackathons-augmented-reality-workspace/"\u003eUnder the Hood: Leap Motion Hackathon\u0027s AR Workspace\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/12/07/stl-fixes-in-vs-2015-update-1.aspx"\u003eSTL Fixes in VS 2015 Update 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/newsreader/items/meeting-c-2015-all-lightning-talks-are-now-online-at-youtube.html"\u003eMeeting C++ Lightning talks are now on youtube\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJussi Pakkanen\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://nibblestew.blogspot.com/"\u003eJussi Pakkanen\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jpakkane"\u003e@jpakkane\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://mesonbuild.com/"\u003eMesonbuild\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mesonbuild/meson"\u003eMesonbuild on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dKPi0AuVpxLI"\u003eMaking build systems not suck\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-12-17T00:00:00Z",
    },
    {
      id: 319,
      sourceId: 4,
      title: "Ranges",
      link: "https://cppcast.com/eric-niebler/",
      description:
        'Rob and Jason are joined by Eric Niebler to discuss his work on Ranges and the future of the Standard Library.\n        \u003cp\u003eEric Niebler is an independent consultant specializing in C++ library development. Currently, he is working on modernizing the C++ standard library and adding support for ranges, funded by the first-ever grant from the Standard C++ Foundation. Previously, Eric was a consultant for BoostPro computing, a member of Microsoft\u0027s Visual C++ team, and a Microsoft Researcher before that. In addition, he has several libraries in Boost and is a Boost release manager and steering committee member. Eric has been an active member of the C++ Standardization Committee for well over 10 years. He speaks regularly at C++ conferences around the world.\u003c/p\u003e\n\u003cp\u003eIn a previous life, Eric drifted with no fixed address, writing C++ and blog entries from cafes and beaches around the world. Today, Eric is a family man living and working in the glorious Pacific Northwest near Seattle.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/12/04/introducing-clang-with-microsoft-codegen-in-vs-2015-update-1.aspx"\u003eClang with Microsoft CodeGen in VS 2015 Update 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3v05s9/conan_a_cc_package_manager/"\u003eConan a C/C++ package manager\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://kennykerr.ca/2015/12/03/getting-started-with-modules-in-c/"\u003eGetting started with Modules in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eEric Niebler\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ericniebler"\u003e@ericniebler\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://ericniebler.com/"\u003eEric Niebler\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ericniebler/range-v3"\u003eRange v3 Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/CaseyCarter/cmcstl2"\u003eC++ Extensions for Ranges\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dmFUXNMfaciE"\u003eCppCon 2015: Eric Niebler "Ranges for the Standard Library"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-12-08T00:00:00Z",
    },
    {
      id: 320,
      sourceId: 4,
      title: "rr",
      link: "https://cppcast.com/robert-ocallahan/",
      description:
        'Rob and Jason are joined by Robert O\u0027Callahan from Mozilla to discuss the RR project.\n        \u003cp\u003eRobert O\u0027Callahan has a PhD in computer science at Carnegie Mellon and did academic research for a while at IBM Research, working on dynamic program analysis tools. At the same time he was contributing to Mozilla as a volunteer, until he switched gears to work full-time with Mozilla; Robert has been working on what became Firefox for over 15 years, mostly on layout and rendering in the browser engine and on related Web standards like CSS and DOM APIs. Lately he\u0027s been devoting about half of his time to rr.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://scottmeyers.blogspot.com/2015/11/breaking-all-eggs-in-c.html"\u003eBreaking all the Eggs in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/the-wind-of-change.html"\u003eThe wind of change\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.viva64.com/en/b/0355/"\u003eCelebrating 30th anniversary of the first C++ compiler: let\u0027s find bugs in it\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRobert O\u0027Callahan\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://robert.ocallahan.org/"\u003eRobert O\u0027Callahan\u0027s website\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/rocallahan"\u003e@rocallahan\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://rr-project.org/"\u003err project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/mozilla"\u003eMozilla on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-12-02T00:00:00Z",
    },
    {
      id: 321,
      sourceId: 4,
      title: "CppCon Wrapup",
      link: "https://cppcast.com/jon-kalb-cppcon-wrapup/",
      description:
        'Rob and Jason are joined by Jon Kalb to talk about this year\u0027s CppCon, his trip to the Kona standards committee meeting and much more.\n        \u003cp\u003eJon has been writing C++ for two and half decades and does onsite C++ training. He chairs the CppCon and C++Now conferences and the C++ Track for the Silicon Valley Code Camp. He serves as chair of the Boost Libraries Steering Committee and is a Microsoft MVP.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://florianjw.de/en/variadic_templates.html"\u003eUsing variadic templates cleanly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/programming/comments/3qtkce/a_sad_story_about_get_temporary_buffer/"\u003eA sad story about get_temporary_buffer\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://meetingcpp.com/index.php/br/items/cpp-and-zombies-a-moving-question.html"\u003eC++ and zombies: a moving question\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJon Kalb\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/_jonkalb"\u003e@_jonkalb\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://exceptionsafecode.com/"\u003eException-Safe Coding in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/announcing-2016-dates/"\u003eCppCon 2016: Announcing 2016 Dates\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dW7fIy_54y-w"\u003eCppCon 2014: Exception Safe Code (Part 1)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-11-19T00:00:00Z",
    },
    {
      id: 322,
      sourceId: 4,
      title: "High Performance Computing",
      link: "https://cppcast.com/dmitri-nesteruk-high-performance-computing/",
      description:
        'Rob and Jason are joined by Dmitri Nesteruk to talk about High Performance Computing and some of the new features coming to CLion and ReSharper for C++.\n        \u003cp\u003eDmitri Nesteruk is a developer, speaker, podcaster and a technical evangelist at JetBrains. His interests lie in software development and integration practices in the areas of computation, quantitative finance and algorithmic trading. His technological interests include C#, F# and C++ programming as well high-performance computing using technologies such as CUDA. He has been a C# MVP since 2009.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/10/29/visual-studio-2015-update-1-rc-available.aspx"\u003eVisual Studio 2015 Update 1 RC Available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3q8o0d/reverse_iteration_with_rangebased_for_loops/"\u003eReverse Iteration with Range-Based for Loops\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3qrwng/interactively_create_clangformat_configurations/"\u003eInteractively create clang-format configurations\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDmitri Nesteruk\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/dnesteruk"\u003e@dnesteruk\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.pluralsight.com/author/dmitri-nesteruk"\u003eDmitri Nesteruk\u0027s Pluralsight courses\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/2015/07/webinar-recording-a-tour-of-modern-c/"\u003eWebinar Recording: A Tour of Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/clion/whatsnew/"\u003eWhat\u0027s New in CLion 1.2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/resharper/whatsnew/"\u003eWhat\u0027s New in ReSharper++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.pluralsight.com/courses/cpp-high-performance-computing"\u003eHigh Performance Computing in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-11-12T00:00:00Z",
    },
    {
      id: 323,
      sourceId: 4,
      title: "Qt Creator",
      link: "https://cppcast.com/tobias-hunger/",
      description:
        'Rob and Jason are joined by Tobias Hunger to discuss the Qt Creator IDE for C++.\n        \u003cp\u003eTobias graduated from the University of Kaiserslautern in Germany with a degree in computer engineering. Before joining Nokia in 2009 to work on Qt Creator he has been a consultant, specializing in systems administration and later Qt software development. He went with Qt to Digia and now works for The Qt Company in Berlin, Germany.\n¬†\nTobias has been an open source contributor ever since his student days and is now a maintainer in the Qt project, responsible for the version control plugins in Qt Creator. He also is heavily involved with the project management plugins.\n¬†\nIn his spare time he does way to many computer related things, but also manages to read books, go to the movies and play with his son.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.kdevelop.org/news/first-beta-release-kdevelop-500-available"\u003eFirst beta release of KDevelop 5.0.0\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3pr7aw/microsoft_promises_clang_for_windows_in_november/"\u003eMicrosoft promises Clang for Windows in November\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://mollyrocket.com/news_0006.html"\u003eHandmade Con 2015\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eTobias Hunger\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/t_hunger"\u003e@t_hunger\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/hunger"\u003eTobias Hunger\u0027s Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.qt.io/blog/2015/10/27/qt-creator-3-6-beta1-released/"\u003eQt Creator 3.6 Beta1 released\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.qt.io/"\u003eQt\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-11-04T00:00:00Z",
    },
    {
      id: 324,
      sourceId: 4,
      title: "D",
      link: "https://cppcast.com/andrei-alexandrescu/",
      description:
        'Rob and Jason are joined by Andrei Alexandrescu to discuss the D Programming language, C++ interoperability and more. Andrei even announces plans for a new book on the show!\n        \u003cp\u003eAndrei Alexandrescu coined the colloquial term "modern C++" (adapted from his award-winning book Modern C++ Design), used today to describe a collection of important C++ styles and idioms. He is also the coauthor of C++ Coding Standards and the author of The D Programming Language book. With Walter Bright, Andrei co-designed many important features of D and authored a large part of D\u0027s standard library. His research on Machine Learning and Natural Language Processing and a five-year tenure as Research Scientist at Facebook complete a broad spectrum of expertise. Andrei holds a PhD in Computer Science from the University of Washington and a BSc in Electrical Engineering from University "Politehnica" Bucharest. He currently works on the D Language Foundation. \u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3q4agc/c17_progress_update_oct_2015/"\u003eC++17 Progress Update\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://herbsutter.com/2015/10/25/2568/"\u003eHerb Sutter\u0027s Fall 2015 Trip Report\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://robert.ocallahan.org/2015/10/rr-40-released-with-reverse-execution.html"\u003eRr 4.0 released with reverse execution\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAndrei Alexandrescu\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/incomputable"\u003e@incomputable\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://erdani.com/"\u003eAndrei Alexandrescu\u0027s Website\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1GLaBax"\u003eAndrei Alexandrescu\u0027s books on Amazon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dWjTrfoiB0MQ"\u003eCppCon 2015: Andrei Alexandrescu ‚ÄúDeclarative Control Flow"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dLIb3L4vKZ7U"\u003eCppCon 2015: Andrei Alexandrescu ‚Äústd::allocator...‚Äù\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://dlang.org/"\u003eThe D Programming Language\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-10-27T00:00:00Z",
    },
    {
      id: 325,
      sourceId: 4,
      title: "JUCE",
      link: "https://cppcast.com/julian-storer/",
      description:
        'Rob and Jason are joined by Julian Storer to discuss the JUCE library.\n        \u003cp\u003eJules has been developing audio and library software in C++ for over 15 years, and is the author of the JUCE library, the most widely used framework for audio applications and plugins. Music tech company ROLI acquired JUCE in 2014, and as well as continuing work on library itself, he helps to guide ROLI\u0027s other software projects.\u003c/p\u003e\n\u003cp\u003eHe also created the Tracktion audio workstation in 2002, which is still going strong and being used by thousands of recording musicians around the world.\u003c/p\u003e\n\u003cp\u003eHe lives in London, and likes to escape from the world of music technology by playing classical guitar\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/callforclasses2016/"\u003eCppCon 2016 Call for Class Proposals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/programming/comments/3oqj59/bjarne_stroustrup_on_the_30th_anniversary_of/"\u003eBjarne Stroustrup on the 30th anniversary of Cfront\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/10/19/do-you-prefer-fast-or-precise.aspx"\u003eDo you prefer fast or precise?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJulian Storer\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/julianstorer"\u003eJulian Storer\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dpKvt5_FhziI"\u003eCppCon 2015: Julian Storer "The Projucer"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.juce.com/"\u003eJUCE\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/JUCElibrary"\u003e@JUCElibrary\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.roli.com/"\u003eROLI\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.tracktion.com/"\u003eTracktion\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-10-21T00:00:00Z",
    },
    {
      id: 326,
      sourceId: 4,
      title: "Stop Teaching C (When Teaching C++)",
      link: "https://cppcast.com/kate-gregory-stop-teaching-c/",
      description:
        'Rob and Jason are joined by Kate Gregory to talk about how we should be teaching C++ without the C.\n        \u003cp\u003eKate Gregory has been using C++ since before Microsoft had a C++ compiler, and has been paid to program since 1979. She loves C++ and believes that software should make our lives easier. That includes making the lives of developers easier! She\u0027ll stay up late arguing about deterministic destruction or how C++ these days is not the C++ you remember.\u003c/p\u003e\n\u003cp\u003eKate runs a small consulting firm in rural Ontario and provides mentoring and management consultant services, as well as writing code every week. She has spoken all over the world, written over a dozen books, and helped thousands of developers to be better at what they do. Kate is a Microsoft Regional Director, a Visual C++ MVP, an Imagine Cup judge and mentor, and an active contributor to StackOverflow and other StackExchange sites. She develops courses for Pluralsight, primarily on C++ and Visual Studio. In 2014 and 2015 she was Open Content Chair for CppCon, the largest C++ conference ever held, where she also delivered sessions.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.davevoyles.com/getting-started-with-emscripten/"\u003eGetting started with emscripten\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stackoverflow.com/questions/33037832/range-checks-using-a-switch-statement"\u003eRange checks using a switch statement\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/09/28/debug-visualizers-in-visual-c-2015.aspx"\u003eDebug Visualizers in Visual C++ 2015\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKate Gregory\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/gregcons"\u003e@gregcons\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.gregcons.com/kateblog/"\u003eKate Gregory\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stackoverflow.com/users/203458/kate-gregory"\u003eKate Gregory on StackOverflow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.pluralsight.com/author/kate-gregory"\u003eKate Gregory\u0027s Pluralsight courses\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1RLot5H"\u003eKate Gregory\u0027s books on Amazon\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dYnWhqhNdYyk"\u003eCppCon 2015: Kate Gregory "Stop Teaching C"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/CppCon/CppCon2015/tree/master/Presentations/Stop%20Teaching%20C"\u003eCppCon 2015: Kate Gregory "Stop Teaching C" (Slides)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dLDxAgMe6D18"\u003eCppCon 2014: James McNellis \u0026#38; Kate Gregory "Modernizing Legacy C++ Code"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dBiYliKliFvs"\u003eCppCon 2014: James McNellis \u0026#38; Kate Gregory "Making C++ Code Beautiful"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-10-14T00:00:00Z",
    },
    {
      id: 327,
      sourceId: 4,
      title: "Expression Templates",
      link: "https://cppcast.com/joel-falcou/",
      description:
        'Rob and Jason are joined by Joel Falcou to discuss Expression Templates.\n        \u003cp\u003eJoel Falcou is an assistant professor in France where he works on torturing compilers to get the best performance out of modern hardware. \nHe\u0027s an active member of the Boost community and CTO of NumScale, a start-up aligned with parallel processing tools.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/09/25/rejuvenating-the-microsoft-c-c-compiler.aspx"\u003eRejuvenating the Microsoft C/C++ Compile\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://msdn.microsoft.com/en-us/magazine/mt573711"\u003eCoroutines in Visual C++ 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://phusion.github.io/holy-build-box/"\u003eHoly Build Box\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJoel Falcou\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/joel_f"\u003e@joel_f\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jfalcou"\u003eJoel Falcou on GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stackoverflow.com/users/737268/joel-falcou"\u003eJoel Falcou on StackOverflow\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.metascale.fr/"\u003eNumScale\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dIiVl5oSU5B8"\u003eExpression Templates - Past, Present, Future\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-10-05T00:00:00Z",
    },
    {
      id: 328,
      sourceId: 4,
      title: "C++ Concurrency",
      link: "https://cppcast.com/anthony-williams/",
      description:
        'Rob and Jason are joined by Anthony Williams to discuss some of the Concurrency features of C++.\n        \u003cp\u003eAnthony Williams is a UK-based developer and consultant with many years of experience in C++. He has been an active member of the BSI C++ Standards Panel since 2001, and is author or coauthor of many of the C++ Standards Committee papers that led up to the inclusion of the thread library in the new C++ Standard, known as C++11 or C++0x. He was the lead maintainer of boost thread from 2006 to 2011, and is the developer of the just::thread implementation of the C++11 thread library from Just Software Solutions Ltd. Anthony lives in the far west of Cornwall, England.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/isocpp/CppCoreGuidelines"\u003eC++ Core Guidelines\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/martinmoene/gsl-lite"\u003eGSL Lite\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnthony Williams\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/a_williams"\u003e@a_williams\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stackoverflow.com/users/5597/anthony-williams"\u003eAnthony Williams on StackOverflow\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1KUGw4U"\u003eC++ Concurrency in Action: Practical Multithreading\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.justsoftwaresolutions.co.uk/"\u003eJust Software Solutions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.stdthread.co.uk/"\u003ejust::thread C++ Standard Thread Library\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-09-29T00:00:00Z",
    },
    {
      id: 329,
      sourceId: 4,
      title: "VR Development",
      link: "https://cppcast.com/nicolas-lazaraff/",
      description:
        'Rob and Jason are joined by Nicolas Lazaraff to discuss the current state of VR development with C++.\n        \u003cp\u003eNick is a VR/AR engineer who is passionate about bridging the interface between computers and humans. Currently he\u0027s VP of Software Development at OTOY focusing on VR and AR ("mixed/digital reality"). He was a cofounder of everyAir, a pioneering P2P game streaming application which was later acquired. Before that he worked at Microsoft on Office 2010 and 2013.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://bulldozer00.com/2015/09/14/stack-heap-pool/"\u003eStack, Heap, Pool\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://gpfault.net/posts/dependency-injection-cpp.txt.html"\u003eDependency Injection in C++ using Variadic Templates\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNicolas Lazareff\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.nzff.net/"\u003enzff.net\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://itunes.apple.com/us/app/balls-away/id947008409?mt\u003d8"\u003eBalls Away - Game on iTunes App Store\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://cppcon2015.sched.org/event/7212a9da0198fcfd8de5c05be21b667c#.VfuGOPlVhBc"\u003eCppCon: C++ for cross-platform VR development\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://home.otoy.com/vr-competition/"\u003eOTOY \u0026#38; Oculus: Render the Metaverse\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dJmzUrklyCDg"\u003eOculus Connect Keynote: Future of VR Panel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.valvesoftware.com/abrash/down-the-vr-rabbit-hole-fixing-judder/"\u003eDown the VR rabbit hole: Fixing judder\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-09-16T00:00:00Z",
    },
    {
      id: 330,
      sourceId: 4,
      title: "Effective C++",
      link: "https://cppcast.com/scott-meyers/",
      description:
        'Rob and Jason are joined by Scott Meyers to discuss the Effective C++ book series.\n        \u003cp\u003eScott Meyers has been working with C++ since 1988. He‚Äôs the author of Effective C++, More Effective C++, Effective STL, and his most recent book, Effective Modern C++. For 25 years, he‚Äôs delivered C++ training to clients worldwide. He once lectured about C++ on a brass-railed nightclub stage while the audience sat at cocktail tables.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://aws.amazon.com/blogs/aws/introducing-the-aws-sdk-for-c/"\u003eAWS SDK for C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://scottmeyers.blogspot.com/2015/09/thoughts-on-vagaries-of-c-initialization.html"\u003eThoughts on the Vagaries of C++ Initialization\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eScott Meyers\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Scott__Meyers"\u003e@Scott__Meyers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://scottmeyers.blogspot.com/"\u003eThe View From Aristeia\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1M0xNAk"\u003eEffective Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.aristeia.com/videos.html"\u003eScott Meyers Videos\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.aristeia.com/training.html"\u003eScott Meyers Training\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dsmqT9Io_bKo"\u003eThe Evolving Search for Effective C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d48kP_Ssg2eY"\u003eDConf 2014 - The Last Thing D Needs\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-09-09T00:00:00Z",
    },
    {
      id: 331,
      sourceId: 4,
      title: "Software Transactional Memory",
      link: "https://cppcast.com/brett-hall/",
      description:
        'Rob and Jason are joined by Brett Hall to discuss Software Transactional Memory.\n        \u003cp\u003eBrett Hall is the lead engineer on Dynamics, a desktop application that collects and analyzes data from the light scattering instruments built by Wyatt technology. Prior to joining Wyatt, Brett worked in web application development, remote sensing, and spent a summer in the games industry. He holds a PhD in physics from the University of California, Santa Barbara. Part of his research work involved using C++ to solve the PDE systems generated by the rest of the research. All told he‚Äôs been using C++ for around 20 years now. These days the bulk of his programming interest is in concurrency and parallelism. When not programming he‚Äôs usually hanging out with his family and/or mountain biking.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/cppcon-2015-call-for-open-content/"\u003eCppCon call for additional content\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/datasift/served"\u003eServed: A C++11 RESTful web server library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/kennykerr/modern"\u003eModern C++ for the Windows Runtime now available\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eBrett Hall\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/bretthall"\u003e@bretthall\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://backwardsincompatibilities.wordpress.com/"\u003eBackwards Incompatibilities\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon2015.sched.org/event/33bbfba45095ebc5cb8d7ee5ad2a612c#.VekD4fZVhBc"\u003eCppCon 2015 - Transactional Memory in Practice\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://youtu.be/plQOu_LsKHE"\u003eCppCon 2014 - Software Transaction Memory, For Reals\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2015/n4438.pdf"\u003eISO C++ Paper - Industrial Experience with Transactional Memory at Wyatt Technology\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-09-02T00:00:00Z",
    },
    {
      id: 332,
      sourceId: 4,
      title: "Real World Template Metaprogamming",
      link: "https://cppcast.com/edouard-alligand/",
      description:
        'Rob and Jason are joined by Edouard Alligand to discuss the use of C++ template metaprogramming in real world projects.\n        \u003cp\u003eEdouard is an experienced kernel programmer, but has spent the last several years working on the hot topic of next-generation databases at software publisher quasardb. He has a strong background in low level programming, beginning with his first programming language: Z80 assembly.  Edouard is a C++ enthusiast with a strong taste for template metaprogramming, generic programming, and you\u0027re not doing it right if the compiler doesn\u0027t crash programming.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cpphints.com/"\u003eC++ Hints\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3i2iu1/the_abstraction_penalty_benchmark_idiomatic_c_vs/"\u003eC++ Abstraction Penalty: Idiomatic vs Raw\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3gzr6f/how_rvalue_lvalue_and_xvalue_got_their_names_in/"\u003eHow rvalue/lvalue/xvalue got their names\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eEdouard Alligand\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/edouarda14"\u003e@edouarda14\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/edouarda"\u003eEdouard Alligand\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon2015.sched.org/event/e4fa454f3f7e48d46db8224fbe1ec662?iframe\u003dno\u0026#38;w\u003d\u0026#38;sidebar\u003dyes\u0026#38;bg\u003dno#.Vdu98bJVhBc"\u003eCppCon 2015 - How I stopped worrying and love metaprogramming\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dK4c8QJvueas"\u003eCppCon 2014 - Edouard Alligand Multiplatform C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/edouarda/brigand"\u003eBrigand Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.quasardb.net/"\u003eQuasarDB Blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.quasardb.net/"\u003eQuasarDB Website\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-08-26T00:00:00Z",
    },
    {
      id: 333,
      sourceId: 4,
      title: "Game Dev and Low Latency",
      link: "https://cppcast.com/nicolas-guillemot/",
      description:
        'Rob and Jason are joined by Nicolas Guillemot to discuss the ongoing work of the GameDev and Low Latency C++ Study Group.\n        \u003cp\u003eNicolas Guillemot started studying C++ and OpenGL to make games, and fell in love with them. He enjoys participating in game jams, and has had the opportunity to work in some game development studios: Inlight Entertainment, and Electronic Arts. He is currently taking a break from finishing a bachelor\u0027s in software engineering to work at Intel, doing mostly graphics-related work to help game developers take advantage of Intel GPU features.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.biicode.com/biicode-just-the-company-post-mortem/"\u003eBiicode (just the company) post-mortem\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://ofekshilon.com/2015/08/16/visual-studio-projects-that-just-keep-rebuilding-or-how-quantum-mechanics-mess-up-your-build/"\u003eVisual Studio Projects that Just Keep Rebuilding\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.boost.org/users/history/version_1_59_0.html"\u003eBoost 1.59\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNicolas Guillemot\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/nlguillemot"\u003e@nlguillemot\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/nguillemot"\u003eNicolas Guillemot\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://groups.google.com/a/isocpp.org/forum/#!forum/sg14"\u003eSG14 - Game Dev and Low Latency Google Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/WG21-SG14/SG14"\u003eWG21-SG14 GitHub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon2015.sched.org/event/0404d7fede126851710420c16218cdb9#.VdaVDfZVhBc"\u003eCppCon 2015 - The Birth of SG14\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.ibm.com/developerworks/community/blogs/5894415f-be62-4bc0-81c5-3956e82276f3/entry/The_view_from_the_May_2015_C_Standard_meeting?lang\u003den"\u003eOn Games(SG14) and TM(SG5) from The View at the May 2015 C++ Standard meeting in Lenexa\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-08-19T00:00:00Z",
    },
    {
      id: 334,
      sourceId: 4,
      title: "Bounded Integers",
      link: "https://cppcast.com/david-stone/",
      description:
        'Rob and Jason are joined by David Stone to discuss his bounded integer library.\n        \u003cp\u003eDavid Stone has spoken at C++Now and Meeting C++. He is the author of the bounded::integer library: http://doublewise.net/c++/bounded/ and has a \nspecial interest in compile-time code generation and error checking, as well as machine learning. He owns DoubleWise C++ Consulting, providing on-site training with an emphasis on performance and correctness. He also \nworks at Markit integrating real-time financial data. He once wrote an optimizing compiler that solved the halting problem, and is just waiting for it to finish compiling his program.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3g3aa1/what_do_you_want_to_see_in_vs_2015_update_1/"\u003eWhat do you want to see in VS2015 Update 1\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/2015/08/new-clion-1-1-eap-project-scopes-cmake-targets-and-other-changes/"\u003eNew Clion 1.1 EAP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/2015programadditions/"\u003eCppCon 2015 Program Additions\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDavid Stone\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://stackoverflow.com/users/852254/david-stone"\u003eDavid Stone on StackOverflow\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://doublewise.net/"\u003edoublewise.net\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://doublewise.net/c++/bounded/"\u003eC++ Bounded Integer Library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dhgeErnYxAUw"\u003eC++Now 2014 - Removing Undefined behavior from integer operations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003di9qeykCp0OA"\u003eMeeting C++ 2014 - Writing robust code\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow2015.sched.org/event/8c3141e392cebe09c9fabccd4a0b7937#.Vc1XtrJVhBc"\u003eC++Now 2015 - Functions want to be free\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cpptruths.blogspot.com/2011/07/want-speed-use-constexpr-meta.html"\u003eC++ Truths: Want speed? Use constexpr meta-programming!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-08-10T00:00:00Z",
    },
    {
      id: 335,
      sourceId: 4,
      title: "VS2015 and the Universal CRT",
      link: "https://cppcast.com/james-mcnellis/",
      description:
        'Rob and Jason are joined by James McNellis to discuss new features for C++ developers in Visual Studio 2015 and changes made to the C runtime.\n        \u003cp\u003eJames McNellis is a senior engineer on the Visual C++ team at Microsoft, where he works on C++ libraries.  He‚Äôs spent the past three years working on a major redesign and refactoring of the Visual C++ C Runtime, which culminated in the release of the Universal CRT with Windows 10 and  Visual Studio 2015.  He occasionally speaks at C++ conferences and was at one time a prolific C++ contributor on Stack Overflow.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://turingtester.wordpress.com/2015/06/27/cs-rule-of-zero/"\u003eC++\u0027s Rule of Zero\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon2015.sched.org/"\u003eCppCon 2015 Program\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/07/24/setup-changes-in-visual-studio-2015-affecting-c-developers.aspx"\u003eSetup Changes in Visual Studio 2015 Affecting C++ Developers\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJames McNellis\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/JamesMcNellis/"\u003e@JamesMcNellis\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.jamesmcnellis.com/"\u003eJames McNellis\u0027s Home Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stackoverflow.com/users/151292/james-mcnellis"\u003eJames McNellis on StackOverflow\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/07/20/visual-studio-2015-rtm-now-available.aspx"\u003eVisual Studio 2015 RTM is now available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/03/03/introducing-the-universal-crt.aspx"\u003eIntroducing the Universal CRT\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dPVYdHDm0q6Y"\u003eCppCon 2014: Stefanus DuToit "Hourglass Interfaces for C++ APIs"\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.microsoftvirtualacademy.com/en-US/training-courses/c-a-general-purpose-language-and-library-jump-start-8251"\u003eMVA Course: C++ A General Purpose Language and Library Jump Start\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://careers.microsoft.com/jobdetails.aspx?ss\u003d\u0026#38;pg\u003d0\u0026#38;so\u003d\u0026#38;rw\u003d5\u0026#38;jid\u003d182004\u0026#38;jlang\u003dEN\u0026#38;pp\u003dSS"\u003eThe Visual C++ Team is hiring!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-08-03T00:00:00Z",
    },
    {
      id: 336,
      sourceId: 4,
      title: "Rust",
      link: "https://cppcast.com/steve-klabnik/",
      description:
        'Rob and Jason are joined by Steve Klabnik to discuss the history of the Rust language and some of its key features.\n        \u003cp\u003eSteve Klabnik is a Ruby and Rails contributor, member of the Rust core team, and a hypermedia enthusiast. He\u0027s the author of "Rust for Rubyists," "Rails 4 in Action," and "Designing Hypermedia APIs."\u003c/p\u003e\n\u003cp\u003eWhen Steve isn\u0027t coding, he enjoys playing the Netrunner card game.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://mortoray.com/2015/06/15/get-rid-of-those-boolean-function-parameters/"\u003eGet rid of those boolean function parameters\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/3dzv6i/eric_niebler_on_twitter_the_concepts_ts_was_voted/"\u003eConcepts TS voted out (in)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSteve Klabnik\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/steveklabnik/"\u003e@steveklabnik\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.steveklabnik.com/"\u003eSteve Klabnik\u0027s Home Page\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/steveklabnik"\u003eSteve Klabnik\u0027s GitHub\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.rust-lang.org/"\u003eThe Rust Programming Language\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-07-23T00:00:00Z",
    },
    {
      id: 337,
      sourceId: 4,
      title: "WebAssembly",
      link: "https://cppcast.com/jf-bastien-webassembly/",
      description:
        'Rob and Jason are joined by JF Bastien to discuss WebAssembly.\n        \u003cp\u003eJF Bastien is a compiler engineer and tech lead on Google‚Äôs Chrome web browser, currently focusing on performance and security to bring portable, fast and secure code to the Web. JF is a member of the C++ standards committee, where his mechanical engineering degree serves little purpose. He‚Äôs worked on startup incubators, business jets, flight simulators, CPUs, dynamic binary translation, systems, and compilers.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.reddit.com/r/cpp/comments/3btsf5/c_compiletime_tetris/"\u003eC++ compile-time TETRIS\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/07/01/c-compiler-front-end-fixes-in-vs2015.aspx"\u003eC++ compiler front-end fixes in VS 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://davidsankel.com/c/a-variant-for-the-everyday-joe/"\u003eA variant for the everyday Joe\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJF Bastien\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/jfbastien/"\u003e@jfbastien\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jfbastien"\u003eJF Bastien\u0027s Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/webassembly"\u003eWebAssembly on Github\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://vimeo.com/131634706"\u003eC++ on the Web: ponies for developers without pwn\u0027ing users\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-07-09T00:00:00Z",
    },
    {
      id: 338,
      sourceId: 4,
      title: "POCO Project",
      link: "https://cppcast.com/aleksandar-fabijanic/",
      description:
        'Rob and Jason are joined by Aleksandar Fabijanic to discuss the C++ Portable Components project.\n        \u003cp\u003eAlex holds two undergraduate degrees in mechanical engineering from Faculty of Engineering (University of Rijeka, Croatia) and the master\u0027s degree in software engineering from Citadel Graduate College in Charleston, South Carolina. Alex is a IEEE Computer Society Certified Software Development Professional. He\u0027s been seriously programming computers since 1992 and developing steel manufacturing automation and process control software using C and C++ since 1998. He used to compete in rowing on World Championship/Olympic Games level. Nowadays, he spends his free time reading, exercising and occasionally woodworking.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/06/22/format-specifiers-checking.aspx"\u003eFormat Specifiers Checking\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/3b2fwu/crystax_ndk_1020_with_boost_1580_and_objectivec_v2/"\u003eCrystaX NDK 10.2.0 w/ Boost 1.58.0 and Obj-C v2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.forbes.com/sites/quora/2015/06/11/to-make-the-most-money-as-a-programmer-learn-this-language/"\u003eTo Make The Most Money As A Programmer, Learn This Language\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAleksandar Fabijanic\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/0x00FA/"\u003e@0x00FA\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/aleks-f"\u003eAleksandar\u0027s Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://pocoproject.org/"\u003ePOCO Project\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/pocoproject/"\u003ePOCO on Github\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://macchina.io/"\u003eMacchina.io\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-07-02T00:00:00Z",
    },
    {
      id: 339,
      sourceId: 4,
      title: "Exercism.io and Refactoring",
      link: "https://cppcast.com/richard-thomson/",
      description:
        'Rob and Jason are joined by Richard Thomson to discuss exercism.io and C++ refactoring tools.\n        \u003cp\u003eRichard Thomson is a passionate software craftsman.¬† He has been\nwriting C programs since 1980, C++ programs since 1993 and practicing\ntest-driven development since 2006.¬† For 10 years, Richard was a\nMicrosoft MVP for Direct3D, Microsoft\u0027s native C++ API for 3D graphics.\nHis book on Direct3D is available as a free download. Prior to that,\nRichard was a technical reviewer of the OpenGL 1.0 specification. He is\nthe director of the Computer Graphics Museum in Salt Lake City, Utah\nand currently works at DAZ 3D writing 3D modeling software in C++.\nRecently, Richard has added the C++ language track to¬†\u003ca href\u003d"http://exercism.io/"\u003eexercism.io\u003c/a\u003e¬†and\nhas been working on adding refactoring tools to the clang tool suite.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/06/19/c-11-14-17-features-in-vs-2015-rtm.aspx"\u003eC++11/14/17 Features In VS 2015 RTM\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/3afcpm/futures_for_c11_at_facebook/"\u003eFutures for C++11 at Facebook\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.s-osg.org/a-conclusion-to-accelerating-your-build-with-clang/"\u003eA Conclusion to Accelerating Your Build with Clang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://info.jetbrains.com/Cplusplus-Webinar-July2015-session2-registration.html"\u003eLive Webinar: A Tour of Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRichard Thomson\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/legalizeadulthd"\u003e@legalizeadulthd\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://legalizeadulthood.wordpress.com/"\u003eRichard Thomson\u0027s blog\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/LegalizeAdulthood"\u003eRichard Thomson\u0027s Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://utahcpp.wordpress.com/"\u003eUtah C++ Users Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d8PndHo7jjHk"\u003eCreate your own Refactoring Tool in Clang\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dt4M3yG1dWho"\u003eCppCon 2014: Matt Hargett "Common-sense acceleration of your MLOC build"\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-06-24T00:00:00Z",
    },
    {
      id: 340,
      sourceId: 4,
      title: "News Roundup",
      link: "https://cppcast.com/news-roundup-06-2015/",
      description:
        'Rob and Jason discuss recent C++ news and events.\n        \u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/06/bloomberg-cpp-challenge-for-chance-to-attend-cppcon"\u003eBloomberg C++ Challenge for Chance to Attend CppCon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://bulldozer00.com/2015/06/15/time-to-get-moving/"\u003eTime to get moving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/06/cpp-and-facebook-moments-facebook-code-blog-techworld"\u003eC++ and Facebook Moments: Facebook code blog, Techworld\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/39u5hi/interactive_c11_memory_model_visualize_the/"\u003eInteractive C++11 memory model: visualize the execution orders of multithreaded program\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/39vxj9/urho3d_c_game_engine_with_html5_examples/"\u003eUrho3D - C++ game engine with HTML5 examples\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/39tmio/piranha_is_a_c11based_computer_algebra_library/"\u003ePiranha is a C++11 based computer algebra library\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://brendaneich.com/2015/06/from-asm-js-to-webassembly/"\u003eFrom ASM.js to WebAssembly\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/06/webinar-a-tour-of-modern-cpp-thursday-july-2nd-2015"\u003eWebinar: A Tour of Modern C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/398x7w/hitler_on_c17/"\u003eHitler on C++17 (Downfall Parody)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/robwirving"\u003e@robwirving\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-06-17T00:00:00Z",
    },
    {
      id: 341,
      sourceId: 4,
      title: "C++11/14 Library Best Practices",
      link: "https://cppcast.com/niall-douglas-library-best-practices/",
      description:
        'Rob and Jason are joined by Niall Douglas to discuss best practices for C++ 11/14 libraries.\n        \u003cp\u003eNiall Douglas is a consultant for hire, is one of the authors of proposed Boost.AFIO and is currently the primary Google Summer of Code administrator for Boost. He is an Affiliate Researcher with the Waterloo Research Institute for Complexity and Innovation at the University of Waterloo, Canada, and holds postgraduate qualifications in Business Information Systems and Educational and Social Research as well as a second undergraduate degree double majoring in Economics and Management. He has been using Boost since 2002 and was the ISO SC22 (Programming Languages) mirror convenor for the Republic of Ireland 2011-2012. He formerly worked for BlackBerry 2012-2013 in their Platform Development group, and was formerly the Chief Software Architect of the Fuel and Hydraulic Test Benches of the EuroFighter defence aircraft. He is a published author in the field of Economics and Power Relations, is the Social Media Coordinator for the World Economics Association and his particular interest lies in productivity, the causes of productivity and the organisational scaling constraints which inhibit productivity.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/06/02/constexpr-complete-for-vs-2015-rtm-c-11-compiler-c-17-stl.aspx"\u003econstexpr Complete For VS 2015 RTM: C++11 compiler, C++17 STL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://medium.com/@CPP_Coder/c-in-the-modern-world-ce6f470dfbe0"\u003eC++ in the modern world\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.mattnewport.com/why-c17-is-the-new-programming-language-for-games-i-want/"\u003eWhy C++17 is the new programming language for games I want\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eNiall Douglas\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/ned14/"\u003e@ned14\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.nedprod.com/"\u003eNiall Douglas\u0027 blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://svn.boost.org/trac/boost/wiki/BestPracticeHandbook"\u003eBest Practice For C++ 11/14 Libraries\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ned14/boost.afio"\u003eBoost.AFIO\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/ned14/Boost.APIBind"\u003eBoost.APIBind\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-06-10T00:00:00Z",
    },
    {
      id: 342,
      sourceId: 4,
      title: "Better Code Concurrency",
      link: "https://cppcast.com/sean-parent/",
      description:
        'Rob and Jason are joined by Sean Parent to talk about his recent C++Now! talk where he presented a new futures library.\n        \u003cp\u003eSean Parent is a principal scientist and software architect for Adobe‚Äôs mobile digital imaging group. Sean has been at Adobe since 1993 when he joined as a senior engineer working on Photoshop and later managed Adobe‚Äôs Software Technology Lab. In 2009 Sean spent a year at Google working on Chrome OS before returning to Adobe. From 1988 through 1993 Sean worked at Apple, where he was part of the system software team that developed the technologies allowing Apple‚Äôs successful transition to PowerPC.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://android-developers.blogspot.com/2015/05/android-m-developer-preview-tools.html"\u003eAndroid Studio introduces C++ support in v1.3 preview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/381h1l/c11_port_of_docopt_a_commandline_argument_parser/"\u003eC++11 Port of Docopt, a command-line argument parser\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://channel9.msdn.com/Shows/C9-GoingNative/GoingNative-38-The-future-of-C17-Updates-from-Lenexa"\u003eGoing Native 38 Updates from Lenexa, future of C++17\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://2015.cppnow.org/2015/06/announcement2016/"\u003eAnnouncing C++Now 2016 and Best Session winners\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSean Parent\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/seanparent/"\u003e@seanparent\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/sean-parent"\u003eSean Parent\u0027s Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/stlab"\u003eSTLab Github\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://channel9.msdn.com/Events/GoingNative/2013/Cpp-Seasoning"\u003eC++ Seasoning\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://channel9.msdn.com/Events/GoingNative/2013/Inheritance-Is-The-Base-Class-of-Evil"\u003eInheritance Is The Base Class of Evil\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e',
      author: "",
      publishDate: "2015-06-01T00:00:00Z",
    },
    {
      id: 343,
      sourceId: 4,
      title: "Testdriven C++ using Catch",
      link: "https://cppcast.com/phil-nash-testdriven-cpp-using-catch/",
      description:
        'Rob and Jason are joined by Phil Nash to talk about C++ Unit Testing with Catch.\n        \u003cp\u003ePhil is a semi-independent software developer, coach and consultant - working in as diverse fields as finance, agile coaching and iOS development. A long time C++ developer he also has his feet in C#, F#, Objective-C and Swift - as well as dabbling in other languages. He is the author of several open source projects - most notably Catch: a C++-native test framework.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/2015registration/"\u003eCppCon 2015 Registration Open\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.infoq.com/news/2015/05/cling-cpp-interpreter"\u003eCling Aims to Provide a High Performance C++ REPL\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2015/03/2015-program-is-online/"\u003eC++Now 2015 Program is online\u003c/a\u003e\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/boostcon/cppnow_presentations_2015"\u003eC++Now 2015 Presentations\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/channel/UCrg3ot2uEjn3jLs4PmeqEAg"\u003eC++ Now Youtube Channel\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/oldnewthing/archive/2015/05/25/10616865.aspx"\u003eNew C++ experimental feature: The tadpole operators\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://polldaddy.com/poll/8894280/"\u003ePoll: What C++ Testing Framework do you use?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePhil Nash\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/phil_nash/"\u003e@phil_nash\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://levelofindirection.com/"\u003eLevel of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://extralevelofindirection.com/"\u003eExtra Level of Indirection\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://catch-lib.net/"\u003eCatch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dC2LcIp56i-8"\u003eMeetingCpp talk on Catch\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://groups.google.com/a/isocpp.org/forum/#!msg/std-proposals/hYh3hWB0mwg/mDgCErbUXbMJ"\u003eISO C++ Standard Discusson on Names\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.slideshare.net/phil_nash/c-extension-methods-18678294"\u003eC++ Extension Methods\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e',
      author: "",
      publishDate: "2015-05-27T00:00:00Z",
    },
    {
      id: 344,
      sourceId: 4,
      title: "Modern C++ for the Windows Runtime",
      link: "https://cppcast.com/kenny-kerr-modern-cpp-winrt/",
      description:
        'Rob and Jason are joined by Kenny Kerr to talk about Modern C++ for the Windows Runtime. Kenny also shares his thoughts on printf and tells us about his new Pluralsight course.\n        \u003cp\u003eKenny Kerr is a computer programmer and recognized expert in Windows operating system development and programming languages. Kenny has published numerous articles about the Windows operating system, network security, and C++ for MSDN Magazine as well as other publications. Microsoft has recognized Kenny‚Äôs expertise in network and operating system security with the Microsoft MVP Award for security. He has also held the Microsoft MVP Award since 2007 for his contributions to the C++ development community.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/04/d4492"\u003eThoughts about C++17 (Bjarne Stroustrup)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/35g7f6/c17_progress_update/"\u003eC++17 progress update\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stellar-group.org/2015/05/hpx-and-the-cpp-standard/"\u003eHPX and the C++ Standard\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eKenny Kerr\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/kennykerr"\u003e@kennykerr\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://kennykerr.ca/"\u003eKenny Kerr\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://moderncpp.com/"\u003eModern C++ for the Windows Runtime\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://get.pluralsight.com/Free-weekly-Course.html"\u003eSQLite with Modern C++ (Free Pluralsight Course)\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.pluralsight.com/author/kenny-kerr"\u003eKenny Kerr\u0027s Pluralsight courses\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e',
      author: "",
      publishDate: "2015-05-20T00:00:00Z",
    },
    {
      id: 345,
      sourceId: 4,
      title: "Boost 2.0",
      link: "https://cppcast.com/robert-ramey-boost2/",
      description:
        'Rob and Jason are joined by Robert Ramey to talk about the future of the Boost C++ Libraries.\n        \u003cp\u003eRobert Ramey is a freelance Software Developer living in Santa Barbara, California. His long and varied career spans various aspects of software development including business data processing, product, embedded systems, custom software, and C++ library development. Lately, he has been mostly interested in C++ library design and implementation related to Boost.  He is the author and maintainer of the Boost Serialization library and Boost library incubator\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/356vbj/if_you_use_boost_and_have_to_support_windows_xp/"\u003eBoost XP Support\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://msdn.microsoft.com/en-us/library/vstudio/bb531344"\u003eBreaking changes in Visual C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://svn.boost.org/trac/boost/wiki/BestPracticeHandbook"\u003eExamples of Best Practices for C++ 11/14 Libraries\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRobert Ramey\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.rrsd.com"\u003eRobert Ramey Software Development\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow2015.sched.org/event/d66a14e9cc28cffbf446b1fd2c3f4696"\u003eBoost 2.0 session at C++Now!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://rrsd.com/blincubator.com/"\u003eBoost Library Incubator\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e',
      author: "",
      publishDate: "2015-05-13T00:00:00Z",
    },
    {
      id: 346,
      sourceId: 4,
      title: "SQLpp11",
      link: "https://cppcast.com/roland-bock/",
      description:
        'Rob and Jason are joined by Roland Bock to talk about sqlpp11 and some of Rolands ideas for the future of C++\n        \u003cp\u003eRoland Bock is Head of Development at PPRO Financial Ltd, an FCA regulated e-Money institute offering prepaid MasterCard card programs and comprehensive financial solutions for international electronic payment transactions. Since 2008 he has been using SQL in C++. Being unhappy with the string-based approach of most SQL libraries, he decided to do something about it and developed a type-safe EDSL for SQL in C++: sqlpp11. In his spare time Roland is working on sqlpp11, experimenting with Concepts Lite and trying to write a proposal about compile-time configurable names for C++ standard. He lives and codes in Munich (Germany).\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/04/29/c-11-14-17-features-in-vs-2015-rc.aspx"\u003eC++ 11/14/17 Features in VS 2015RC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/04/29/c-11-constant-expressions-in-visual-studio-2015-rc.aspx"\u003eC++ 11 Constant Expressions in VS 2015 RC\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/04/29/more-about-resumable-functions-in-c.aspx"\u003eResumable Functions in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/the-c-highlights-and-more-of-gcc-51.html"\u003eC++ highlights and more of GCC 5.1\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eRoland Bock\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rbock"\u003eRoland Bock on github\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cpp.eudoxos.de/"\u003eThoughts by Roland Bock\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/rbock/sqlpp11"\u003esqlpp11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cpp.eudoxos.de/dreaming-of-names/"\u003eDreaming of Names\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://groups.google.com/a/isocpp.org/forum/#!msg/std-proposals/hYh3hWB0mwg/mDgCErbUXbMJ"\u003eISO C++ Standard Discusson on Names\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e',
      author: "",
      publishDate: "2015-05-07T00:00:00Z",
    },
    {
      id: 347,
      sourceId: 4,
      title: "Asynchronous Programming",
      link: "https://cppcast.com/hartmut-kaiser/",
      description:
        'Rob and Jason are joined by Hartmut Kaiser to talk about Asynchronous Program and the HPX framework.\n        \u003cp\u003eHartmut Kaiser is an Adjunct Professor of Computer Science at Louisiana State University. At the same time, he holds the position of a senior scientist at the Center for Computation and Technology at LSU. He received his doctorate from the Technical University of Chemnitz (Germany) in 1988. He is probably best known through his involvement in open source software projects, mainly as the author of several C++ libraries he has contributed to Boost, which are in use by thousands of developers worldwide. He is a voting member of the ISO C++ Standards Committee and his current research is focused on leading the STE||AR group at CCT working on the practical design and implementation of the ParalleX execution model and related programming methods. In addition, he architected and developed the core library modules of SAGA for C++, a Simple API for Grid Applications.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/2015/04/clion-1-1-roadmap-accu-2015/"\u003eCLion 1.1 roadmap \u0026#38; ACCU 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://meetingcpp.com/index.php/br/items/boost-158-a-short-overview.html"\u003eBoost 1.58 a short overview\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/33h5uj/module_proposal_for_c_now_at_revision_3_n4465_pdf/"\u003eModule proposal for C++ now at rev 3\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eHartmut Kaiser\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cct.lsu.edu/~hkaiser"\u003eHartmut Kaiser\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003d5xyztU__yys"\u003eAsynchronous Computation in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://stellar.cct.lsu.edu/"\u003eThe STE||AR Group\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/STEllAR-GROUP/hpx"\u003eHPX on Github\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eSponsors\u003c/h3\u003e',
      author: "",
      publishDate: "2015-04-22T00:00:00Z",
    },
    {
      id: 348,
      sourceId: 4,
      title: "Biicode and Turbo",
      link: "https://cppcast.com/manuel-sanchez/",
      description:
        'In this episode Manuel Sanchez joins Rob Irving to talk about biicode, the C++ dependency manager and Manuel\u0027s Template Metaprogramming Library Turbo.\n        \u003cp\u003eAs a CS undergraduate at the University of Madrid (Spain) and self taught C++ programmer, Manuel Sanchez has been working on personal projects related to Modern C++ during his free time, most of them related to template metaprogramming and his own efforts to give high level features for C++ metaprogramming: The Turbo Metaprogramming Library. Manuel has been working for biicode since September 2014, he assist his fellow biis by dealing with C++ idiosyncrasies while manage very successful posts about template metaprogramming and his work on Turbo.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/2015/04/clion-1-0-has-finally-arrived/"\u003eCLion 1.0 has finally arrived\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/03/26/visual-c-tools-for-windows-10-technical-preview.aspx"\u003eVisual C++ tools for Windows 10 TP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://boost-sandbox.sourceforge.net/std/wg21/D4382.pdf"\u003eEric Neibler\u0027s Ranges proposal\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://poll.fm/58msq"\u003ePoll: Have you tried biicode?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eManuel Sanchez\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/Manu343726"\u003e@Manu343726\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://manu343726.github.io/"\u003eBlog and Portfolio\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.biicode.com/"\u003eBiicode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.biicode.com/biicode-open-source-client/"\u003eBiicode goes open source\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/Manu343726/Turbo"\u003eTurbo\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-04-15T00:00:00Z",
    },
    {
      id: 349,
      sourceId: 4,
      title: "Quick Game Development",
      link: "https://cppcast.com/vittorio-romeo/",
      description:
        'In this episode Vittorio Romeo joins Rob Irving to talk about making simple games with C++ using libraries like SFML, SDL and Cinder.\n        \u003cp\u003eVittorio Romeo is an undergraduate Computer Science student at "Universit√† degli Studi di Messina".\nSince childhood he has always been interested in programming, and learned to develop applications and games as an autodidact.\nAfter discovering C++ a few years ago, Vittorio became extremely passionate about its evolution and its community.\nHe currently works on open-source general-purpose C++14 libraries and develops free open-source games.\nVittorio also loves teaching: he manages a well-received C++11/C++14 video tutorial series and he talked about game development in C++ at CppCon 2014.\nWhen he\u0027s not in front of a computer, Vittorio enjoys fitness activities (weightlifting, swimming, running) and reading.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cppsamples.com/"\u003eC++ Samples\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/31167m/c17s_stl_what_do_you_want_it_to_have/"\u003eC++ 17\u0027s STL what do you want it to have\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/call-for-submissions-2015/"\u003eCppCon 2015 Call for Submissions\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/04/the-c-languages-merge"\u003eThe C languages merge (April Fools!)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eVittorio Romeo\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://vittorioromeo.info/"\u003ePersonal Website\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://youtube.com/c/vittorioromeoinfo"\u003eYouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/SuperV1234"\u003eGithub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/supahvee1234"\u003e@supahvee1234\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/vittorioromeovee?ref\u003dbookmarks"\u003eFacebook\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dTC9zhufV_Z8"\u003eQuick Game Development with C++ 11/C++14\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://vittorioromeo.info/projects.html"\u003eOpen Hexagon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.facebook.com/OpenHexagon"\u003eOpen Hexagon FB\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-04-10T00:00:00Z",
    },
    {
      id: 350,
      sourceId: 4,
      title: "Fit and Tick",
      link: "https://cppcast.com/paul-fultz-ii/",
      description:
        'Episode number 6 of CppCast with guest Paul Fultz II recorded April 2, 2015\n        \u003cp\u003ePaul Fultz II has developed in C++ professionally and personally in a variety of fields including DSP, web development, and desktop applications. He has developed in other languages as well such as Java, C#, Python, and Javascript but focuses most of his attention on C++ which combines correctness, expressiveness, and performance together.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/jbandela/simple_match"\u003eSimple Extensible Pattern Matching in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/2015/03/2015-program-is-online/"\u003eC++Now! 2015 Program is available\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://arne-mertz.de/2015/03/simple-and-clean-code-vs-performance/"\u003eSimple and Clean Code vs Performance\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/04/the-c-languages-merge"\u003eThe C languages merge (April Fools!)\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003ePaul Fultz II\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/pfultz2"\u003e@pfultz2\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.pfultz2.com/blog/"\u003ePaul Fultz II\u0027s Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/pfultz2/Tick"\u003eTick - Trait introspection and concept creator for C++11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://github.com/pfultz2/Fit"\u003eFit - Header-only C++11 library that provides utilities for functions and function objects.\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow2015.sched.org/event/06b56c1d0748bc240f83298c0688c3e5#.VR4EgO8tFsg"\u003eModern Generic Programming using the Tick and Fit libraries\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-04-02T00:00:00Z",
    },
    {
      id: 351,
      sourceId: 4,
      title: "Exploring CLion",
      link: "https://cppcast.com/anastasia-kazakova-exploring-clion/",
      description:
        'Episode number 5 of CppCast with guest Anastasia Kazakova recorded March 25, 2015\n        \u003cp\u003eBeing a C/C++ fan since University Anastasia has been creating real-time *nix-based systems and pushing them to production for 8 years. She¬†has a passion for networking algorithms (especially congestion problems and network management protocols) and embedded programming, and believes in good tooling. Now she is a part of the JetBrains¬†team working as a Product Marketing Manager for CLion the upcoming cross-platform C/C++ IDE.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://daniel.haxx.se/blog/2015/03/20/curl-17-years-old-today/"\u003eCurl is 17 years old\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://scottmeyers.blogspot.com/2015/03/emc-news-new-excerpt-upcoming-webcast.html"\u003eEffective Modern C++ News\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/2zs2ob/vc_2015_rtm_what_do_you_want_it_to_have/"\u003eVC2015 RTM What do you want it to have?\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://polldaddy.com/poll/8745367/?view\u003dresults"\u003eWhat platforms are you running CLion IDE on?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnastasia Kazakova\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/anastasiak2512"\u003e@anastasiak2512\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.jetbrains.com/clion/"\u003eCLion IDE\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/clion_ide"\u003eCLion on Twitter\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/"\u003eCLion Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-03-25T00:00:00Z",
    },
    {
      id: 352,
      sourceId: 4,
      title: "CMake, Git and Functional Programming",
      link: "https://cppcast.com/david-sankel-cmake-git-functional/",
      description:
        'Episode number 4 of CppCast with guest David Sankel recorded March 17, 2015\n        \u003cp\u003eDavid Sankel is a professional software developer/architect based in the USA. His prolific software developments have included CAD/CAM, computer graphics, visual programming languages, web applications, computer vision, and cryptography. He is a frequent speaker at the C++Now! conferences and is especially well known for his advanced functional programming in C++ talks.\u003c/p\u003e\n\u003cp\u003eDavid\u0027s current research interests include dependently typed languages, semantic domains, EDSLs, and functional reactive programming. He currently works for the software firm, Stellar Science.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.jetbrains.com/clion/2015/03/when-clion-met-biicode/"\u003eWhen CLion met biicode\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.startupcompass.co/how-much-should-you-pay-your-engineers"\u003eHow much should you pay your engineers\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.reddit.com/r/cpp/comments/2y1szo/what_are_some_everyday_life_things_you_use_c_for/"\u003eWhat are some everyday life things you use C++ for\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://channel9.msdn.com/Events/GoingNative/2013/My-Favorite-Cpp-10-Liner"\u003eMy favorite C++ 10 Liner\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eDavid Sankel\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://zao.se/~zao/boostcon/10/2010_presentations/thu/funccpp.pdf"\u003ePaper: Modern Functional Programming in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dPVjaFMwV4x0"\u003eFunctional Programming in C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dvy5C-mlUQ1w"\u003eThe Intellectual Ascent to Agda\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003dtyaYLGQSr4g"\u003eFunctional Reactive Programming - Cleanly Abstracted Interactivity\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/watch?v\u003duHFUpFhWGJs"\u003eIntro to Functional Programming in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.stellarscience.com/"\u003eStellar Science\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/"\u003eC++Now!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-03-19T00:00:00Z",
    },
    {
      id: 353,
      sourceId: 4,
      title: "Cross Platform Mobile C++ in Visual Studio",
      link: "https://cppcast.com/ankit-asthana-cross-plat-mobile-vs/",
      description:
        'Episode number 3 of CppCast with guest Ankit Asthana recorded March 11, 2015\n        \u003cp\u003eAnkit Asthana is a program manager working in the Visual C++ Cross-Platform space. He is knowledgeable in cross-platform technologies, compilers (dynamic and static compilation, optimizer, code generation), distributed computing and server side development. He has in the past worked for IBM and Oracle Canada as a developer building Java 7 (hotspot) and telecommunication products. Ankit back in 2008 also published a book on C++ titled \u003ca href\u003d"http://amzn.to/1AiKa3c"\u003eC++ for Beginners to Masters\u003c/a\u003e which sold over a few thousand copies.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/03/03/introducing-the-universal-crt.aspx"\u003eIntroducing the Universal CRT\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/02/02/c-c-code-analysis-in-vs2015.aspx"\u003eC/C++ Code analysis in VS 2015\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/archive/2015/02/13/find-your-favorite-library-for-c-in-nuget.aspx"\u003eFind your favorite Library for C++ in NuGet\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://polldaddy.com/poll/8676351/?view\u003dresults"\u003eWhat is your favorite C++ IDE?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eAnkit Asthana\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://social.msdn.microsoft.com/profile/ankit%20asthana/"\u003eAnkit on MSDN\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://amzn.to/1AiKa3c"\u003eC++ for Beginners to Masters\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.visualstudio.com/en-us/news/vs2015-vs.aspx"\u003eVisual Studio 2015 CTP\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blogs.msdn.com/b/vcblog/"\u003eVisual C++ Team Blog\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-03-12T00:00:00Z",
    },
    {
      id: 354,
      sourceId: 4,
      title: "ChaiScript and Cross Platform C++",
      link: "https://cppcast.com/jason-turner/",
      description:
        'Episode number 2 of CppCast with guest Jason Turner\n        \u003cp\u003eJason has been developing portable C++ since 2002. With very few exceptions, every line of code he has written since then has had to run on multiple platforms. He is an independent contractor focusing on cross-platform issues, utilization of C++ libraries from scripting languages and code quality assurance. He is the co-creator and maintainer of ChaiScript, a mature scripting language designed for modern C++. His latest project is cppbestpractices.com: a fledgling effort to gather the collective wisdom of the C++ community.\u003c/p\u003e\n\u003ch3\u003eNews\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://isocpp.org/blog/2015/02/cppcheck"\u003eCppCheck\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cogitolearning.co.uk/?p\u003d1669"\u003eFour things you probably didn\u0027t know about C++\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.biicode.com/dependency-management-boost-libraries/"\u003eBoost libraries are now supported in biicode\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJason Turner\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/lefticus"\u003e@lefticus\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.github.com/lefticus"\u003eGithub\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog.emptycrate.com/"\u003eEmptyCrate\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.chaiscript.com"\u003eChaiScript\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://www.cppbestpractices.com"\u003eCppBestPractices\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://blog2.emptycrate.com/content/complex-object-initialization-optimization-iife-c11"\u003eComplex Object Initialization Optimization with IIFE in C++11\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/"\u003eC++Now!\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-03-05T00:00:00Z",
    },
    {
      id: 355,
      sourceId: 4,
      title: "Jon Kalb loves the C++ Community",
      link: "https://cppcast.com/jon-kalb-loves-the-cpp-community/",
      description:
        'Episode number 1 of CppCast with guest Jon Kalb\n        \u003cp\u003eJon has been writing C++ for two and half decades, does onsite C++ training, and works on the Amazon search engine for A9.com. He chairs the CppCon and C++Now conferences. He also programs the C++ Track for the Silicon Valley Code Camp and serves as chair of the Boost Libraries Steering Committee.\u003c/p\u003e\n\u003ch3\u003eLinks\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppcon.org/"\u003ecppcon\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"https://www.youtube.com/CppCon"\u003ecppcon YouTube Channel\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://cppnow.org/"\u003eC++Now!\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://rrsd.com/blincubator.com/"\u003eBoost Library Incubator\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://robwirving.com/2015/01/31/c-need-podcast/"\u003eDoes C++ need its own podcast?\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e\n\u003ch3\u003eJon Kalb\u003c/h3\u003e\n\u003cul\u003e\n\u003cli\u003e\u003ca href\u003d"https://twitter.com/_JonKalb"\u003e@_JonKalb\u003c/a\u003e\u003c/li\u003e\n\u003cli\u003e\u003ca href\u003d"http://exceptionsafecode.com/"\u003eException-Safe Coding in C++\u003c/a\u003e\u003c/li\u003e\n\u003c/ul\u003e',
      author: "",
      publishDate: "2015-02-17T00:00:00Z",
    },
  ],
};
